{
    "openapi": "3.0.1",
    "info": {
        "title": "Unified API",
        "description": "This API document is a legacy from our last portal. All the other APIs are bundled here as a single ungrouped OpenAPI document. You are advised to use the other APIs for documentation.",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.tfl.gov.uk"
        }
    ],
    "paths": {
        "/AccidentStats/{year}": {
            "get": {
                "tags": [
                    "AccidentStats"
                ],
                "summary": "Gets all accident details for accidents occuring in the specified year",
                "description": "Gets all accident details for accidents occuring in the specified year",
                "operationId": "AccidentStats_Get",
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Format - int32. The year for which to filter the accidents on.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "lat": 0,
                                        "lon": 0,
                                        "location": "string",
                                        "date": "string",
                                        "severity": "string",
                                        "borough": "string",
                                        "casualties": [
                                            {
                                                "age": 0,
                                                "class": "string",
                                                "severity": "string",
                                                "mode": "string",
                                                "ageBand": "string"
                                            }
                                        ],
                                        "vehicles": [
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-1"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "lat": 0,
                                        "lon": 0,
                                        "location": "string",
                                        "date": "string",
                                        "severity": "string",
                                        "borough": "string",
                                        "casualties": [
                                            {
                                                "age": 0,
                                                "class": "string",
                                                "severity": "string",
                                                "mode": "string",
                                                "ageBand": "string"
                                            }
                                        ],
                                        "vehicles": [
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-2> <id>0</id> <lat>0</lat> <lon>0</lon> <location>string</location> <date>string</date> <severity>string</severity> <borough>string</borough> <casualties> <age>0</age> <class>string</class> <severity>string</severity> <mode>string</mode> <ageBand>string</ageBand> </casualties> <vehicles> <type>string</type> </vehicles> </Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-3> <id>0</id> <lat>0</lat> <lon>0</lon> <location>string</location> <date>string</date> <severity>string</severity> <borough>string</borough> <casualties> <age>0</age> <class>string</class> <severity>string</severity> <mode>string</mode> <ageBand>string</ageBand> </casualties> <vehicles> <type>string</type> </vehicles> </Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/AirQuality": {
            "get": {
                "tags": [
                    "AirQuality"
                ],
                "summary": "Gets air quality data feed",
                "description": "Gets air quality data feed",
                "operationId": "AirQuality_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/BikePoint": {
            "get": {
                "tags": [
                    "BikePoint"
                ],
                "summary": "Gets all bike point locations. The Place object has an addtionalProperties array which contains the nbBikes, nbDocks and nbSpaces\r\n            numbers which give the status of the BikePoint. A mismatch in these numbers i.e. nbDocks - (nbBikes + nbSpaces) != 0 indicates broken docks.",
                "description": "Gets all bike point locations. The Place object has an addtionalProperties array which contains the nbBikes, nbDocks and nbSpaces\r\n            numbers which give the status of the BikePoint. A mismatch in these numbers i.e. nbDocks - (nbBikes + nbSpaces) != 0 indicates broken docks.",
                "operationId": "BikePoint_GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-1"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-2"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-3"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BikePoint/{id}": {
            "get": {
                "tags": [
                    "BikePoint"
                ],
                "summary": "Gets the bike point with the given id.",
                "description": "Gets the bike point with the given id.",
                "operationId": "BikePoint_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A bike point id (a list of ids can be obtained from the above BikePoint call)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/BikePoint/Search": {
            "get": {
                "tags": [
                    "BikePoint"
                ],
                "summary": "Search for bike stations by their name, a bike point's name often contains information about the name of the street\r\n            or nearby landmarks, for example. Note that the search result does not contain the PlaceProperties i.e. the status\r\n            or occupancy of the BikePoint, to get that ",
                "description": "Search for bike stations by their name, a bike point's name often contains information about the name of the street\r\n            or nearby landmarks, for example. Note that the search result does not contain the PlaceProperties i.e. the status\r\n            or occupancy of the BikePoint, to get that information you should retrieve the BikePoint by its id on /BikePoint/id.",
                "operationId": "BikePoint_Search",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The search term e.g. \"St. James\"",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-4"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-5"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-6"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-7"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Cabwise/search": {
            "get": {
                "tags": [
                    "Cabwise"
                ],
                "summary": "Gets taxis and minicabs contact information",
                "description": "Gets taxis and minicabs contact information",
                "operationId": "Cabwise_Get",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Format - double. Latitude",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "Format - double. Longitude",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "optype",
                        "in": "query",
                        "description": "Operator Type e.g Minicab, Executive, Limousine",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "wc",
                        "in": "query",
                        "description": "Wheelchair accessible",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Format - double. The radius of the bounding circle in metres",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Trading name of operating company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "Format - int32. An optional parameter to limit the number of results return. Default and maximum is 20.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "legacyFormat",
                        "in": "query",
                        "description": "Legacy Format",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "forceXml",
                        "in": "query",
                        "description": "Force Xml",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "twentyFourSevenOnly",
                        "in": "query",
                        "description": "Twenty Four Seven Only",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/Journey/Meta/Modes": {
            "get": {
                "tags": [
                    "Journey"
                ],
                "summary": "Gets a list of all of the available journey planner modes",
                "description": "Gets a list of all of the available journey planner modes",
                "operationId": "Journey_Meta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-1"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ModeArray-2> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </Tfl-Api-Presentation-Entities-ModeArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ModeArray-3> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </Tfl-Api-Presentation-Entities-ModeArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Journey/JourneyResults/{from}/to/{to}": {
            "get": {
                "tags": [
                    "Journey"
                ],
                "summary": "Perform a Journey Planner search from the parameters specified in simple types",
                "description": "Perform a Journey Planner search from the parameters specified in simple types",
                "operationId": "Journey_JourneyResults",
                "parameters": [
                    {
                        "name": "from",
                        "in": "path",
                        "description": "Origin of the journey. Can be WGS84 coordinates expressed as \"lat,long\", a UK postcode, a Naptan (StopPoint) id, an ICS StopId, or a free-text string (will cause disambiguation unless it exactly matches a point of interest name).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "path",
                        "description": "Destination of the journey. Can be WGS84 coordinates expressed as \"lat,long\", a UK postcode, a Naptan (StopPoint) id, an ICS StopId, or a free-text string (will cause disambiguation unless it exactly matches a point of interest name).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "via",
                        "in": "query",
                        "description": "Travel through point on the journey. Can be WGS84 coordinates expressed as \"lat,long\", a UK postcode, a Naptan (StopPoint) id, an ICS StopId, or a free-text string (will cause disambiguation unless it exactly matches a point of interest name).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nationalSearch",
                        "in": "query",
                        "description": "Does the journey cover stops outside London? eg. \"nationalSearch=true\"",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The date must be in yyyyMMdd format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "time",
                        "in": "query",
                        "description": "The time must be in HHmm format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeIs",
                        "in": "query",
                        "description": "Does the time given relate to arrival or leaving time? Possible options: \"departing\" | \"arriving\"",
                        "schema": {
                            "enum": [
                                "Arriving",
                                "Departing"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "journeyPreference",
                        "in": "query",
                        "description": "The journey preference eg possible options: \"leastinterchange\" | \"leasttime\" | \"leastwalking\"",
                        "schema": {
                            "enum": [
                                "LeastInterchange",
                                "LeastTime",
                                "LeastWalking"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "The mode must be a comma separated list of modes. eg possible options: \"public-bus,overground,train,tube,coach,dlr,cablecar,tram,river,walking,cycle\"",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "accessibilityPreference",
                        "in": "query",
                        "description": "The accessibility preference must be a comma separated list eg. \"noSolidStairs,noEscalators,noElevators,stepFreeToVehicle,stepFreeToPlatform\"",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "fromName",
                        "in": "query",
                        "description": "An optional name to associate with the origin of the journey in the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toName",
                        "in": "query",
                        "description": "An optional name to associate with the destination of the journey in the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "viaName",
                        "in": "query",
                        "description": "An optional name to associate with the via point of the journey in the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxTransferMinutes",
                        "in": "query",
                        "description": "The max walking time in minutes for transfer eg. \"120\"",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maxWalkingMinutes",
                        "in": "query",
                        "description": "The max walking time in minutes for journeys eg. \"120\"",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "walkingSpeed",
                        "in": "query",
                        "description": "The walking speed. eg possible options: \"slow\" | \"average\" | \"fast\".",
                        "schema": {
                            "enum": [
                                "Slow",
                                "Average",
                                "Fast"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "cyclePreference",
                        "in": "query",
                        "description": "The cycle preference. eg possible options: \"allTheWay\" | \"leaveAtStation\" | \"takeOnTransport\" | \"cycleHire\"",
                        "schema": {
                            "enum": [
                                "None",
                                "LeaveAtStation",
                                "TakeOnTransport",
                                "AllTheWay",
                                "CycleHire"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "adjustment",
                        "in": "query",
                        "description": "Time adjustment command. eg possible options: \"TripFirst\" | \"TripLast\"",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bikeProficiency",
                        "in": "query",
                        "description": "A comma separated list of cycling proficiency levels. eg possible options: \"easy,moderate,fast\"",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "alternativeCycle",
                        "in": "query",
                        "description": "Option to determine whether to return alternative cycling journey",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "alternativeWalking",
                        "in": "query",
                        "description": "Option to determine whether to return alternative walking journey",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "applyHtmlMarkup",
                        "in": "query",
                        "description": "Flag to determine whether certain text (e.g. walking instructions) should be output with HTML tags or not.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "useMultiModalCall",
                        "in": "query",
                        "description": "A boolean to indicate whether or not to return 3 public transport journeys, a bus journey, a cycle hire journey, a personal cycle journey and a walking journey",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "walkingOptimization",
                        "in": "query",
                        "description": "A boolean to indicate whether to optimize journeys using walking",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "taxiOnlyTrip",
                        "in": "query",
                        "description": "A boolean to indicate whether to return one or more taxi journeys. Note, setting this to true will override \"useMultiModalCall\".",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.ItineraryResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.ItineraryResult"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.ItineraryResult"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.ItineraryResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/Meta/Modes": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets a list of valid modes",
                "description": "Gets a list of valid modes",
                "operationId": "Line_MetaModes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-4"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-5"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-6"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ModeArray-6> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </Tfl-Api-Presentation-Entities-ModeArray-6>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-7"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ModeArray-7> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </Tfl-Api-Presentation-Entities-ModeArray-7>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/Meta/Severity": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets a list of valid severity codes",
                "description": "Gets a list of valid severity codes",
                "operationId": "Line_MetaSeverity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray"
                                },
                                "example": [
                                    {
                                        "modeName": "string",
                                        "severityLevel": 0,
                                        "description": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray-1"
                                },
                                "example": [
                                    {
                                        "modeName": "string",
                                        "severityLevel": 0,
                                        "description": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StatusSeverityArray-2> <modeName>string</modeName> <severityLevel>0</severityLevel> <description>string</description> </Tfl-Api-Presentation-Entities-StatusSeverityArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StatusSeverityArray-3> <modeName>string</modeName> <severityLevel>0</severityLevel> <description>string</description> </Tfl-Api-Presentation-Entities-StatusSeverityArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/Meta/DisruptionCategories": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets a list of valid disruption categories",
                "description": "Gets a list of valid disruption categories",
                "operationId": "Line_MetaDisruptionCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaDisruptionCategoriesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaDisruptionCategoriesGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaDisruptionCategoriesGet200ApplicationXmlResponse"
                                },
                                "example": "<LineMetaDisruptionCategoriesGet200ApplicationXmlResponse>string</LineMetaDisruptionCategoriesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaDisruptionCategoriesGet200TextXmlResponse"
                                },
                                "example": "<LineMetaDisruptionCategoriesGet200TextXmlResponse>string</LineMetaDisruptionCategoriesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/Meta/ServiceTypes": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets a list of valid ServiceTypes to filter on",
                "description": "Gets a list of valid ServiceTypes to filter on",
                "operationId": "Line_MetaServiceTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaServiceTypesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaServiceTypesGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaServiceTypesGet200ApplicationXmlResponse"
                                },
                                "example": "<LineMetaServiceTypesGet200ApplicationXmlResponse>string</LineMetaServiceTypesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/LineMetaServiceTypesGet200TextXmlResponse"
                                },
                                "example": "<LineMetaServiceTypesGet200TextXmlResponse>string</LineMetaServiceTypesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/{ids}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets lines that match the specified line ids.",
                "description": "Gets lines that match the specified line ids.",
                "operationId": "Line_Get",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-1"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-2"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-3"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/Mode/{modes}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets lines that serve the given modes.",
                "description": "Gets lines that serve the given modes.",
                "operationId": "Line_GetByMode",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-separated list of modes e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-4"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-5"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-6"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-7"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/Route": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Get all valid routes for all lines, including the name and id of the originating and terminating stops for each route.",
                "description": "Get all valid routes for all lines, including the name and id of the originating and terminating stops for each route.",
                "operationId": "Line_Route",
                "parameters": [
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-8"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-9"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-10"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-11"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/{ids}/Route": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Get all valid routes for given line ids, including the name and id of the originating and terminating stops for each route.",
                "description": "Get all valid routes for given line ids, including the name and id of the originating and terminating stops for each route.",
                "operationId": "Line_LineRoutesByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-12"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-13"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-14"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-15"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/Mode/{modes}/Route": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets all lines and their valid routes for given modes, including the name and id of the originating and terminating stops for each route",
                "description": "Gets all lines and their valid routes for given modes, including the name and id of the originating and terminating stops for each route",
                "operationId": "Line_RouteByMode",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-separated list of modes e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-16"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-17"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-18"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-19"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/{id}/Route/Sequence/{direction}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets all valid routes for given line id, including the sequence of stops on each route.",
                "description": "Gets all valid routes for given line id, including the sequence of stops on each route.",
                "operationId": "Line_RouteSequence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A single line id e.g. victoria",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "The direction of travel. Can be inbound or outbound.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "inbound",
                                "outbound",
                                "all"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "excludeCrowding",
                        "in": "query",
                        "description": "That excludes crowding from line disruptions. Can be true or false.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSequence"
                                },
                                "example": {
                                    "lineId": "string",
                                    "lineName": "string",
                                    "direction": "string",
                                    "isOutboundOnly": true,
                                    "mode": "string",
                                    "lineStrings": [
                                        "string"
                                    ],
                                    "stations": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "stopPointSequences": [
                                        {
                                            "lineId": "string",
                                            "lineName": "string",
                                            "direction": "string",
                                            "branchId": 0,
                                            "nextBranchIds": [
                                                0
                                            ],
                                            "prevBranchIds": [
                                                0
                                            ],
                                            "stopPoint": [
                                                {
                                                    "routeId": 0,
                                                    "parentId": "string",
                                                    "stationId": "string",
                                                    "icsId": "string",
                                                    "topMostParentId": "string",
                                                    "direction": "string",
                                                    "towards": "string",
                                                    "modes": [
                                                        "string"
                                                    ],
                                                    "stopType": "string",
                                                    "stopLetter": "string",
                                                    "zone": "string",
                                                    "accessibilitySummary": "string",
                                                    "hasDisruption": true,
                                                    "lines": [
                                                        {
                                                            "id": "string",
                                                            "name": "string",
                                                            "uri": "string",
                                                            "fullName": "string",
                                                            "type": "string",
                                                            "crowding": {
                                                                "passengerFlows": [
                                                                    {
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ],
                                                                "trainLoadings": [
                                                                    {
                                                                        "line": "string",
                                                                        "lineDirection": "string",
                                                                        "platformDirection": "string",
                                                                        "direction": "string",
                                                                        "naptanTo": "string",
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ]
                                                            },
                                                            "routeType": "Unknown",
                                                            "status": "Unknown"
                                                        }
                                                    ],
                                                    "status": true,
                                                    "id": "string",
                                                    "url": "string",
                                                    "name": "string",
                                                    "lat": 0,
                                                    "lon": 0
                                                }
                                            ],
                                            "serviceType": "Regular"
                                        }
                                    ],
                                    "orderedLineRoutes": [
                                        {
                                            "name": "string",
                                            "naptanIds": [
                                                "string"
                                            ],
                                            "serviceType": "string"
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSequence"
                                },
                                "example": {
                                    "lineId": "string",
                                    "lineName": "string",
                                    "direction": "string",
                                    "isOutboundOnly": true,
                                    "mode": "string",
                                    "lineStrings": [
                                        "string"
                                    ],
                                    "stations": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "stopPointSequences": [
                                        {
                                            "lineId": "string",
                                            "lineName": "string",
                                            "direction": "string",
                                            "branchId": 0,
                                            "nextBranchIds": [
                                                0
                                            ],
                                            "prevBranchIds": [
                                                0
                                            ],
                                            "stopPoint": [
                                                {
                                                    "routeId": 0,
                                                    "parentId": "string",
                                                    "stationId": "string",
                                                    "icsId": "string",
                                                    "topMostParentId": "string",
                                                    "direction": "string",
                                                    "towards": "string",
                                                    "modes": [
                                                        "string"
                                                    ],
                                                    "stopType": "string",
                                                    "stopLetter": "string",
                                                    "zone": "string",
                                                    "accessibilitySummary": "string",
                                                    "hasDisruption": true,
                                                    "lines": [
                                                        {
                                                            "id": "string",
                                                            "name": "string",
                                                            "uri": "string",
                                                            "fullName": "string",
                                                            "type": "string",
                                                            "crowding": {
                                                                "passengerFlows": [
                                                                    {
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ],
                                                                "trainLoadings": [
                                                                    {
                                                                        "line": "string",
                                                                        "lineDirection": "string",
                                                                        "platformDirection": "string",
                                                                        "direction": "string",
                                                                        "naptanTo": "string",
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ]
                                                            },
                                                            "routeType": "Unknown",
                                                            "status": "Unknown"
                                                        }
                                                    ],
                                                    "status": true,
                                                    "id": "string",
                                                    "url": "string",
                                                    "name": "string",
                                                    "lat": 0,
                                                    "lon": 0
                                                }
                                            ],
                                            "serviceType": "Regular"
                                        }
                                    ],
                                    "orderedLineRoutes": [
                                        {
                                            "name": "string",
                                            "naptanIds": [
                                                "string"
                                            ],
                                            "serviceType": "string"
                                        }
                                    ]
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSequence"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.RouteSequence> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <isOutboundOnly>true</isOutboundOnly> <mode>string</mode> <lineStrings>string</lineStrings> <stations> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stations> <stopPointSequences> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <branchId>0</branchId> <nextBranchIds>0</nextBranchIds> <prevBranchIds>0</prevBranchIds> <stopPoint> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stopPoint> <serviceType>Regular</serviceType> </stopPointSequences> <orderedLineRoutes> <name>string</name> <naptanIds>string</naptanIds> <serviceType>string</serviceType> </orderedLineRoutes> </Tfl.Api.Presentation.Entities.RouteSequence>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSequence"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.RouteSequence> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <isOutboundOnly>true</isOutboundOnly> <mode>string</mode> <lineStrings>string</lineStrings> <stations> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stations> <stopPointSequences> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <branchId>0</branchId> <nextBranchIds>0</nextBranchIds> <prevBranchIds>0</prevBranchIds> <stopPoint> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stopPoint> <serviceType>Regular</serviceType> </stopPointSequences> <orderedLineRoutes> <name>string</name> <naptanIds>string</naptanIds> <serviceType>string</serviceType> </orderedLineRoutes> </Tfl.Api.Presentation.Entities.RouteSequence>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/{ids}/Status/{StartDate}/to/{EndDate}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets the line status for given line ids during the provided dates e.g Minor Delays",
                "description": "Gets the line status for given line ids during the provided dates e.g Minor Delays",
                "operationId": "Line_Status",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "detail",
                        "in": "query",
                        "description": "Include details of the disruptions that are causing the line status including the affected stops and routes",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-20"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-21"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-22"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-23"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/{ids}/Status": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets the line status of for given line ids e.g Minor Delays",
                "description": "Gets the line status of for given line ids e.g Minor Delays",
                "operationId": "Line_StatusByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "detail",
                        "in": "query",
                        "description": "Include details of the disruptions that are causing the line status including the affected stops and routes",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-24"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-25"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-26"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-27"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/Search/{query}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Search for lines or routes matching the query string",
                "description": "Search for lines or routes matching the query string",
                "operationId": "Line_Search",
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "description": "Search term e.g victoria",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "Optionally filter by the specified modes",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSearchResponse"
                                },
                                "example": {
                                    "input": "string",
                                    "searchMatches": [
                                        {
                                            "lineId": "string",
                                            "mode": "string",
                                            "lineName": "string",
                                            "lineRouteSection": [
                                                {
                                                    "routeId": 0,
                                                    "direction": "string",
                                                    "destination": "string",
                                                    "fromStation": "string",
                                                    "toStation": "string",
                                                    "serviceType": "string",
                                                    "vehicleDestinationText": "string"
                                                }
                                            ],
                                            "matchedRouteSections": [
                                                {
                                                    "id": 0
                                                }
                                            ],
                                            "matchedStops": [
                                                {
                                                    "routeId": 0,
                                                    "parentId": "string",
                                                    "stationId": "string",
                                                    "icsId": "string",
                                                    "topMostParentId": "string",
                                                    "direction": "string",
                                                    "towards": "string",
                                                    "modes": [
                                                        "string"
                                                    ],
                                                    "stopType": "string",
                                                    "stopLetter": "string",
                                                    "zone": "string",
                                                    "accessibilitySummary": "string",
                                                    "hasDisruption": true,
                                                    "lines": [
                                                        {
                                                            "id": "string",
                                                            "name": "string",
                                                            "uri": "string",
                                                            "fullName": "string",
                                                            "type": "string",
                                                            "crowding": {
                                                                "passengerFlows": [
                                                                    {
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ],
                                                                "trainLoadings": [
                                                                    {
                                                                        "line": "string",
                                                                        "lineDirection": "string",
                                                                        "platformDirection": "string",
                                                                        "direction": "string",
                                                                        "naptanTo": "string",
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ]
                                                            },
                                                            "routeType": "Unknown",
                                                            "status": "Unknown"
                                                        }
                                                    ],
                                                    "status": true,
                                                    "id": "string",
                                                    "url": "string",
                                                    "name": "string",
                                                    "lat": 0,
                                                    "lon": 0
                                                }
                                            ],
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSearchResponse"
                                },
                                "example": {
                                    "input": "string",
                                    "searchMatches": [
                                        {
                                            "lineId": "string",
                                            "mode": "string",
                                            "lineName": "string",
                                            "lineRouteSection": [
                                                {
                                                    "routeId": 0,
                                                    "direction": "string",
                                                    "destination": "string",
                                                    "fromStation": "string",
                                                    "toStation": "string",
                                                    "serviceType": "string",
                                                    "vehicleDestinationText": "string"
                                                }
                                            ],
                                            "matchedRouteSections": [
                                                {
                                                    "id": 0
                                                }
                                            ],
                                            "matchedStops": [
                                                {
                                                    "routeId": 0,
                                                    "parentId": "string",
                                                    "stationId": "string",
                                                    "icsId": "string",
                                                    "topMostParentId": "string",
                                                    "direction": "string",
                                                    "towards": "string",
                                                    "modes": [
                                                        "string"
                                                    ],
                                                    "stopType": "string",
                                                    "stopLetter": "string",
                                                    "zone": "string",
                                                    "accessibilitySummary": "string",
                                                    "hasDisruption": true,
                                                    "lines": [
                                                        {
                                                            "id": "string",
                                                            "name": "string",
                                                            "uri": "string",
                                                            "fullName": "string",
                                                            "type": "string",
                                                            "crowding": {
                                                                "passengerFlows": [
                                                                    {
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ],
                                                                "trainLoadings": [
                                                                    {
                                                                        "line": "string",
                                                                        "lineDirection": "string",
                                                                        "platformDirection": "string",
                                                                        "direction": "string",
                                                                        "naptanTo": "string",
                                                                        "timeSlice": "string",
                                                                        "value": 0
                                                                    }
                                                                ]
                                                            },
                                                            "routeType": "Unknown",
                                                            "status": "Unknown"
                                                        }
                                                    ],
                                                    "status": true,
                                                    "id": "string",
                                                    "url": "string",
                                                    "name": "string",
                                                    "lat": 0,
                                                    "lon": 0
                                                }
                                            ],
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ]
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.RouteSearchResponse> <input>string</input> <searchMatches> <lineId>string</lineId> <mode>string</mode> <lineName>string</lineName> <lineRouteSection> <routeId>0</routeId> <direction>string</direction> <destination>string</destination> <fromStation>string</fromStation> <toStation>string</toStation> <serviceType>string</serviceType> <vehicleDestinationText>string</vehicleDestinationText> </lineRouteSection> <matchedRouteSections> <id>0</id> </matchedRouteSections> <matchedStops> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matchedStops> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </searchMatches> </Tfl.Api.Presentation.Entities.RouteSearchResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.RouteSearchResponse> <input>string</input> <searchMatches> <lineId>string</lineId> <mode>string</mode> <lineName>string</lineName> <lineRouteSection> <routeId>0</routeId> <direction>string</direction> <destination>string</destination> <fromStation>string</fromStation> <toStation>string</toStation> <serviceType>string</serviceType> <vehicleDestinationText>string</vehicleDestinationText> </lineRouteSection> <matchedRouteSections> <id>0</id> </matchedRouteSections> <matchedStops> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matchedStops> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </searchMatches> </Tfl.Api.Presentation.Entities.RouteSearchResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/Status/{severity}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets the line status for all lines with a given severity\r\n            A list of valid severity codes can be obtained from a call to Line/Meta/Severity",
                "description": "Gets the line status for all lines with a given severity\r\n            A list of valid severity codes can be obtained from a call to Line/Meta/Severity",
                "operationId": "Line_StatusBySeverity",
                "parameters": [
                    {
                        "name": "severity",
                        "in": "path",
                        "description": "Format - int32. The level of severity (eg: a number from 0 to 14)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-28"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-29"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-30"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-31"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/Mode/{modes}/Status": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets the line status of for all lines for the given modes",
                "description": "Gets the line status of for all lines for the given modes",
                "operationId": "Line_StatusByMode",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-separated list of modes to filter by. e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "detail",
                        "in": "query",
                        "description": "Include details of the disruptions that are causing the line status including the affected stops and routes",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-32"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-33"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-34"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineArray-35"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/{id}/StopPoints": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets a list of the stations that serve the given line id",
                "description": "Gets a list of the stations that serve the given line id",
                "operationId": "Line_StopPoints",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A single line id e.g. victoria",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tflOperatedNationalRailStationsOnly",
                        "in": "query",
                        "description": "If the national-rail line is requested, this flag will filter the national rail stations so that only those operated by TfL are returned",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-1"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-2"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-3"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/{id}/Timetable/{fromStopPointId}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets the timetable for a specified station on the give line",
                "description": "Gets the timetable for a specified station on the give line",
                "operationId": "Line_Timetable",
                "parameters": [
                    {
                        "name": "fromStopPointId",
                        "in": "path",
                        "description": "The originating station's stop point id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A single line id e.g. victoria",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": {
                                    "lineId": "string",
                                    "lineName": "string",
                                    "direction": "string",
                                    "pdfUrl": "string",
                                    "stations": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "stops": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "timetable": {
                                        "departureStopId": "string",
                                        "routes": [
                                            {
                                                "stationIntervals": [
                                                    {
                                                        "id": "string",
                                                        "intervals": [
                                                            {
                                                                "stopId": "string",
                                                                "timeToArrival": 0
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "schedules": [
                                                    {
                                                        "name": "string",
                                                        "knownJourneys": [
                                                            {
                                                                "hour": "string",
                                                                "minute": "string",
                                                                "intervalId": 0
                                                            }
                                                        ],
                                                        "firstJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "lastJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "periods": [
                                                            {
                                                                "type": "Normal",
                                                                "fromTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "toTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "frequency": {
                                                                    "lowestFrequency": 0,
                                                                    "highestFrequency": 0
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "disambiguation": {
                                        "disambiguationOptions": [
                                            {
                                                "description": "string",
                                                "uri": "string"
                                            }
                                        ]
                                    },
                                    "statusErrorMessage": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": {
                                    "lineId": "string",
                                    "lineName": "string",
                                    "direction": "string",
                                    "pdfUrl": "string",
                                    "stations": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "stops": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "timetable": {
                                        "departureStopId": "string",
                                        "routes": [
                                            {
                                                "stationIntervals": [
                                                    {
                                                        "id": "string",
                                                        "intervals": [
                                                            {
                                                                "stopId": "string",
                                                                "timeToArrival": 0
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "schedules": [
                                                    {
                                                        "name": "string",
                                                        "knownJourneys": [
                                                            {
                                                                "hour": "string",
                                                                "minute": "string",
                                                                "intervalId": 0
                                                            }
                                                        ],
                                                        "firstJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "lastJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "periods": [
                                                            {
                                                                "type": "Normal",
                                                                "fromTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "toTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "frequency": {
                                                                    "lowestFrequency": 0,
                                                                    "highestFrequency": 0
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "disambiguation": {
                                        "disambiguationOptions": [
                                            {
                                                "description": "string",
                                                "uri": "string"
                                            }
                                        ]
                                    },
                                    "statusErrorMessage": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.TimetableResponse> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <pdfUrl>string</pdfUrl> <stations> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stations> <stops> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stops> <timetable> <departureStopId>string</departureStopId> <routes> <stationIntervals> <id>string</id> <intervals> <stopId>string</stopId> <timeToArrival>0</timeToArrival> </intervals> </stationIntervals> <schedules> <name>string</name> <knownJourneys> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </knownJourneys> <firstJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </firstJourney> <lastJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </lastJourney> <periods> <type>Normal</type> <fromTime> <hour>string</hour> <minute>string</minute> </fromTime> <toTime> <hour>string</hour> <minute>string</minute> </toTime> <frequency> <lowestFrequency>0</lowestFrequency> <highestFrequency>0</highestFrequency> </frequency> </periods> </schedules> </routes> </timetable> <disambiguation> <disambiguationOptions> <description>string</description> <uri>string</uri> </disambiguationOptions> </disambiguation> <statusErrorMessage>string</statusErrorMessage> </Tfl.Api.Presentation.Entities.TimetableResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.TimetableResponse> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <pdfUrl>string</pdfUrl> <stations> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stations> <stops> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stops> <timetable> <departureStopId>string</departureStopId> <routes> <stationIntervals> <id>string</id> <intervals> <stopId>string</stopId> <timeToArrival>0</timeToArrival> </intervals> </stationIntervals> <schedules> <name>string</name> <knownJourneys> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </knownJourneys> <firstJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </firstJourney> <lastJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </lastJourney> <periods> <type>Normal</type> <fromTime> <hour>string</hour> <minute>string</minute> </fromTime> <toTime> <hour>string</hour> <minute>string</minute> </toTime> <frequency> <lowestFrequency>0</lowestFrequency> <highestFrequency>0</highestFrequency> </frequency> </periods> </schedules> </routes> </timetable> <disambiguation> <disambiguationOptions> <description>string</description> <uri>string</uri> </disambiguationOptions> </disambiguation> <statusErrorMessage>string</statusErrorMessage> </Tfl.Api.Presentation.Entities.TimetableResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/{id}/Timetable/{fromStopPointId}/to/{toStopPointId}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Gets the timetable for a specified station on the give line with specified destination",
                "description": "Gets the timetable for a specified station on the give line with specified destination",
                "operationId": "Line_TimetableTo",
                "parameters": [
                    {
                        "name": "fromStopPointId",
                        "in": "path",
                        "description": "The originating station's stop point id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A single line id e.g. victoria",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toStopPointId",
                        "in": "path",
                        "description": "The destination stations's Naptan code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": {
                                    "lineId": "string",
                                    "lineName": "string",
                                    "direction": "string",
                                    "pdfUrl": "string",
                                    "stations": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "stops": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "timetable": {
                                        "departureStopId": "string",
                                        "routes": [
                                            {
                                                "stationIntervals": [
                                                    {
                                                        "id": "string",
                                                        "intervals": [
                                                            {
                                                                "stopId": "string",
                                                                "timeToArrival": 0
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "schedules": [
                                                    {
                                                        "name": "string",
                                                        "knownJourneys": [
                                                            {
                                                                "hour": "string",
                                                                "minute": "string",
                                                                "intervalId": 0
                                                            }
                                                        ],
                                                        "firstJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "lastJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "periods": [
                                                            {
                                                                "type": "Normal",
                                                                "fromTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "toTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "frequency": {
                                                                    "lowestFrequency": 0,
                                                                    "highestFrequency": 0
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "disambiguation": {
                                        "disambiguationOptions": [
                                            {
                                                "description": "string",
                                                "uri": "string"
                                            }
                                        ]
                                    },
                                    "statusErrorMessage": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": {
                                    "lineId": "string",
                                    "lineName": "string",
                                    "direction": "string",
                                    "pdfUrl": "string",
                                    "stations": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "stops": [
                                        {
                                            "routeId": 0,
                                            "parentId": "string",
                                            "stationId": "string",
                                            "icsId": "string",
                                            "topMostParentId": "string",
                                            "direction": "string",
                                            "towards": "string",
                                            "modes": [
                                                "string"
                                            ],
                                            "stopType": "string",
                                            "stopLetter": "string",
                                            "zone": "string",
                                            "accessibilitySummary": "string",
                                            "hasDisruption": true,
                                            "lines": [
                                                {
                                                    "id": "string",
                                                    "name": "string",
                                                    "uri": "string",
                                                    "fullName": "string",
                                                    "type": "string",
                                                    "crowding": {
                                                        "passengerFlows": [
                                                            {
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ],
                                                        "trainLoadings": [
                                                            {
                                                                "line": "string",
                                                                "lineDirection": "string",
                                                                "platformDirection": "string",
                                                                "direction": "string",
                                                                "naptanTo": "string",
                                                                "timeSlice": "string",
                                                                "value": 0
                                                            }
                                                        ]
                                                    },
                                                    "routeType": "Unknown",
                                                    "status": "Unknown"
                                                }
                                            ],
                                            "status": true,
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "timetable": {
                                        "departureStopId": "string",
                                        "routes": [
                                            {
                                                "stationIntervals": [
                                                    {
                                                        "id": "string",
                                                        "intervals": [
                                                            {
                                                                "stopId": "string",
                                                                "timeToArrival": 0
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "schedules": [
                                                    {
                                                        "name": "string",
                                                        "knownJourneys": [
                                                            {
                                                                "hour": "string",
                                                                "minute": "string",
                                                                "intervalId": 0
                                                            }
                                                        ],
                                                        "firstJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "lastJourney": {
                                                            "hour": "string",
                                                            "minute": "string",
                                                            "intervalId": 0
                                                        },
                                                        "periods": [
                                                            {
                                                                "type": "Normal",
                                                                "fromTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "toTime": {
                                                                    "hour": "string",
                                                                    "minute": "string"
                                                                },
                                                                "frequency": {
                                                                    "lowestFrequency": 0,
                                                                    "highestFrequency": 0
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "disambiguation": {
                                        "disambiguationOptions": [
                                            {
                                                "description": "string",
                                                "uri": "string"
                                            }
                                        ]
                                    },
                                    "statusErrorMessage": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.TimetableResponse> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <pdfUrl>string</pdfUrl> <stations> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stations> <stops> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stops> <timetable> <departureStopId>string</departureStopId> <routes> <stationIntervals> <id>string</id> <intervals> <stopId>string</stopId> <timeToArrival>0</timeToArrival> </intervals> </stationIntervals> <schedules> <name>string</name> <knownJourneys> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </knownJourneys> <firstJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </firstJourney> <lastJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </lastJourney> <periods> <type>Normal</type> <fromTime> <hour>string</hour> <minute>string</minute> </fromTime> <toTime> <hour>string</hour> <minute>string</minute> </toTime> <frequency> <lowestFrequency>0</lowestFrequency> <highestFrequency>0</highestFrequency> </frequency> </periods> </schedules> </routes> </timetable> <disambiguation> <disambiguationOptions> <description>string</description> <uri>string</uri> </disambiguationOptions> </disambiguation> <statusErrorMessage>string</statusErrorMessage> </Tfl.Api.Presentation.Entities.TimetableResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.TimetableResponse> <lineId>string</lineId> <lineName>string</lineName> <direction>string</direction> <pdfUrl>string</pdfUrl> <stations> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stations> <stops> <routeId>0</routeId> <parentId>string</parentId> <stationId>string</stationId> <icsId>string</icsId> <topMostParentId>string</topMostParentId> <direction>string</direction> <towards>string</towards> <modes>string</modes> <stopType>string</stopType> <stopLetter>string</stopLetter> <zone>string</zone> <accessibilitySummary>string</accessibilitySummary> <hasDisruption>true</hasDisruption> <lines> <id>string</id> <name>string</name> <uri>string</uri> <fullName>string</fullName> <type>string</type> <crowding> <passengerFlows> <timeSlice>string</timeSlice> <value>0</value> </passengerFlows> <trainLoadings> <line>string</line> <lineDirection>string</lineDirection> <platformDirection>string</platformDirection> <direction>string</direction> <naptanTo>string</naptanTo> <timeSlice>string</timeSlice> <value>0</value> </trainLoadings> </crowding> <routeType>Unknown</routeType> <status>Unknown</status> </lines> <status>true</status> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </stops> <timetable> <departureStopId>string</departureStopId> <routes> <stationIntervals> <id>string</id> <intervals> <stopId>string</stopId> <timeToArrival>0</timeToArrival> </intervals> </stationIntervals> <schedules> <name>string</name> <knownJourneys> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </knownJourneys> <firstJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </firstJourney> <lastJourney> <hour>string</hour> <minute>string</minute> <intervalId>0</intervalId> </lastJourney> <periods> <type>Normal</type> <fromTime> <hour>string</hour> <minute>string</minute> </fromTime> <toTime> <hour>string</hour> <minute>string</minute> </toTime> <frequency> <lowestFrequency>0</lowestFrequency> <highestFrequency>0</highestFrequency> </frequency> </periods> </schedules> </routes> </timetable> <disambiguation> <disambiguationOptions> <description>string</description> <uri>string</uri> </disambiguationOptions> </disambiguation> <statusErrorMessage>string</statusErrorMessage> </Tfl.Api.Presentation.Entities.TimetableResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Line/{ids}/Disruption": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Get disruptions for the given line ids",
                "description": "Get disruptions for the given line ids",
                "operationId": "Line_Disruption",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray-1"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray-2"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray-3"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/Mode/{modes}/Disruption": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Get disruptions for all lines of the given modes.",
                "description": "Get disruptions for all lines of the given modes.",
                "operationId": "Line_DisruptionByMode",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-separated list of modes e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray-4"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray-5"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray-6"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptionArray-7"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Line/{ids}/Arrivals/{stopPointId}": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Get the list of arrival predictions for given line ids based at the given stop",
                "description": "Get the list of arrival predictions for given line ids based at the given stop",
                "operationId": "Line_Arrivals",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "stopPointId",
                        "in": "path",
                        "description": "Optional. Id of stop to get arrival predictions for (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Optional. The direction of travel. Can be inbound or outbound or all. If left blank, and destinationStopId is set, will default to all",
                        "schema": {
                            "enum": [
                                "inbound",
                                "outbound",
                                "all"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "destinationStationId",
                        "in": "query",
                        "description": "Optional. Id of destination stop",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-1"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-2> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-3> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Mode/ActiveServiceTypes": {
            "get": {
                "tags": [
                    "Mode"
                ],
                "summary": "Returns the service type active for a mode.\r\n            Currently only supports tube",
                "description": "Returns the service type active for a mode.\r\n            Currently only supports tube",
                "operationId": "Mode_GetActiveServiceTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ActiveServiceTypeArray"
                                },
                                "example": [
                                    {
                                        "mode": "string",
                                        "serviceType": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-1"
                                },
                                "example": [
                                    {
                                        "mode": "string",
                                        "serviceType": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-2> <mode>string</mode> <serviceType>string</serviceType> </Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-3> <mode>string</mode> <serviceType>string</serviceType> </Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Mode/{mode}/Arrivals": {
            "get": {
                "tags": [
                    "Mode"
                ],
                "summary": "Gets the next arrival predictions for all stops of a given mode",
                "description": "Gets the next arrival predictions for all stops of a given mode",
                "operationId": "Mode_Arrivals",
                "parameters": [
                    {
                        "name": "mode",
                        "in": "path",
                        "description": "A mode name e.g. tube, dlr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Format - int32. A number of arrivals to return for each stop, -1 to return all available.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-4"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-5"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-6"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-6> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-6>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-7"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-7> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-7>"
                            }
                        }
                    }
                }
            }
        },
        "/Occupancy/CarPark/{id}": {
            "get": {
                "tags": [
                    "Occupancy"
                ],
                "summary": "Gets the occupancy for a car park with a given id",
                "description": "Gets the occupancy for a car park with a given id",
                "operationId": "Occupancy_GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                                },
                                "example": {
                                    "id": "string",
                                    "bays": [
                                        {
                                            "bayType": "string",
                                            "bayCount": 0,
                                            "free": 0,
                                            "occupied": 0
                                        }
                                    ],
                                    "name": "string",
                                    "carParkDetailsUrl": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                                },
                                "example": {
                                    "id": "string",
                                    "bays": [
                                        {
                                            "bayType": "string",
                                            "bayCount": 0,
                                            "free": 0,
                                            "occupied": 0
                                        }
                                    ],
                                    "name": "string",
                                    "carParkDetailsUrl": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.CarParkOccupancy> <id>string</id> <bays> <bayType>string</bayType> <bayCount>0</bayCount> <free>0</free> <occupied>0</occupied> </bays> <name>string</name> <carParkDetailsUrl>string</carParkDetailsUrl> </Tfl.Api.Presentation.Entities.CarParkOccupancy>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.CarParkOccupancy> <id>string</id> <bays> <bayType>string</bayType> <bayCount>0</bayCount> <free>0</free> <occupied>0</occupied> </bays> <name>string</name> <carParkDetailsUrl>string</carParkDetailsUrl> </Tfl.Api.Presentation.Entities.CarParkOccupancy>"
                            }
                        }
                    }
                }
            }
        },
        "/Occupancy/CarPark": {
            "get": {
                "tags": [
                    "Occupancy"
                ],
                "summary": "Gets the occupancy for all car parks that have occupancy data",
                "description": "Gets the occupancy for all car parks that have occupancy data",
                "operationId": "Occupancy_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-CarParkOccupancyArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "bays": [
                                            {
                                                "bayType": "string",
                                                "bayCount": 0,
                                                "free": 0,
                                                "occupied": 0
                                            }
                                        ],
                                        "name": "string",
                                        "carParkDetailsUrl": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-CarParkOccupancyArray-1"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "bays": [
                                            {
                                                "bayType": "string",
                                                "bayCount": 0,
                                                "free": 0,
                                                "occupied": 0
                                            }
                                        ],
                                        "name": "string",
                                        "carParkDetailsUrl": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-CarParkOccupancyArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-CarParkOccupancyArray-2> <id>string</id> <bays> <bayType>string</bayType> <bayCount>0</bayCount> <free>0</free> <occupied>0</occupied> </bays> <name>string</name> <carParkDetailsUrl>string</carParkDetailsUrl> </Tfl-Api-Presentation-Entities-CarParkOccupancyArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-CarParkOccupancyArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-CarParkOccupancyArray-3> <id>string</id> <bays> <bayType>string</bayType> <bayCount>0</bayCount> <free>0</free> <occupied>0</occupied> </bays> <name>string</name> <carParkDetailsUrl>string</carParkDetailsUrl> </Tfl-Api-Presentation-Entities-CarParkOccupancyArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Occupancy/ChargeConnector/{ids}": {
            "get": {
                "tags": [
                    "Occupancy"
                ],
                "summary": "Gets the occupancy for a charge connectors with a given id (sourceSystemPlaceId)",
                "description": "Gets the occupancy for a charge connectors with a given id (sourceSystemPlaceId)",
                "operationId": "Occupancy_GetChargeConnectorStatus",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "sourceSystemPlaceId": "string",
                                        "status": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-1"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "sourceSystemPlaceId": "string",
                                        "status": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-2> <id>0</id> <sourceSystemPlaceId>string</sourceSystemPlaceId> <status>string</status> </Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-3> <id>0</id> <sourceSystemPlaceId>string</sourceSystemPlaceId> <status>string</status> </Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Occupancy/ChargeConnector": {
            "get": {
                "tags": [
                    "Occupancy"
                ],
                "summary": "Gets the occupancy for all charge connectors",
                "description": "Gets the occupancy for all charge connectors",
                "operationId": "Occupancy_GetAllChargeConnectorStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-4"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "sourceSystemPlaceId": "string",
                                        "status": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-5"
                                },
                                "example": [
                                    {
                                        "id": 0,
                                        "sourceSystemPlaceId": "string",
                                        "status": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-6"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-6> <id>0</id> <sourceSystemPlaceId>string</sourceSystemPlaceId> <status>string</status> </Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-6>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-7"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-7> <id>0</id> <sourceSystemPlaceId>string</sourceSystemPlaceId> <status>string</status> </Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-7>"
                            }
                        }
                    }
                }
            }
        },
        "/Occupancy/BikePoints/{ids}": {
            "get": {
                "tags": [
                    "Occupancy"
                ],
                "summary": "Get the occupancy for bike points.",
                "description": "Get the occupancy for bike points.",
                "operationId": "Occupancy_GetBikePointsOccupancies",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-BikePointOccupancyArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "name": "string",
                                        "bikesCount": 0,
                                        "emptyDocks": 0,
                                        "totalDocks": 0
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-BikePointOccupancyArray-1"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "name": "string",
                                        "bikesCount": 0,
                                        "emptyDocks": 0,
                                        "totalDocks": 0
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-BikePointOccupancyArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-BikePointOccupancyArray-2> <id>string</id> <name>string</name> <bikesCount>0</bikesCount> <emptyDocks>0</emptyDocks> <totalDocks>0</totalDocks> </Tfl-Api-Presentation-Entities-BikePointOccupancyArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-BikePointOccupancyArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-BikePointOccupancyArray-3> <id>string</id> <name>string</name> <bikesCount>0</bikesCount> <emptyDocks>0</emptyDocks> <totalDocks>0</totalDocks> </Tfl-Api-Presentation-Entities-BikePointOccupancyArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Place/Meta/Categories": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets a list of all of the available place property categories and keys.",
                "description": "Gets a list of all of the available place property categories and keys.",
                "operationId": "Place_MetaCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray-1"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PlaceCategoryArray-2> <category>string</category> <availableKeys>string</availableKeys> </Tfl-Api-Presentation-Entities-PlaceCategoryArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PlaceCategoryArray-3> <category>string</category> <availableKeys>string</availableKeys> </Tfl-Api-Presentation-Entities-PlaceCategoryArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Place/Meta/PlaceTypes": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets a list of the available types of Place.",
                "description": "Gets a list of the available types of Place.",
                "operationId": "Place_MetaPlaceTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray-4"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray-5"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray-6"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PlaceCategoryArray-6> <category>string</category> <availableKeys>string</availableKeys> </Tfl-Api-Presentation-Entities-PlaceCategoryArray-6>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceCategoryArray-7"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PlaceCategoryArray-7> <category>string</category> <availableKeys>string</availableKeys> </Tfl-Api-Presentation-Entities-PlaceCategoryArray-7>"
                            }
                        }
                    }
                }
            }
        },
        "/Place/Address/Streets/{Postcode}": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets the set of streets associated with a post code.",
                "description": "Gets the set of streets associated with a post code.",
                "operationId": "Place_GetStreetsByPostCode",
                "parameters": [
                    {
                        "name": "Postcode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/Place/Type/{types}": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets all places of a given type",
                "description": "Gets all places of a given type",
                "operationId": "Place_GetByType",
                "parameters": [
                    {
                        "name": "types",
                        "in": "path",
                        "description": "A comma-separated list of the types to return. Max. approx 12 types.\r\n            A valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "activeOnly",
                        "in": "query",
                        "description": "An optional parameter to limit the results to active records only (Currently only the 'VariableMessageSign' place type is supported)",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-8"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-9"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-10"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-11"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Place/{id}": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets the place with the given id.",
                "description": "Gets the place with the given id.",
                "operationId": "PlaceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the place, you can use the /Place/Types/{types} endpoint to get a list of places for a given type including their ids",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeChildren",
                        "in": "query",
                        "description": "Defaults to false. If true child places e.g. individual charging stations at a charge point while be included, otherwise just the URLs of any child places will be returned",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-12"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-13"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-14"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-15"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Place": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets the places that lie within a geographic region. The geographic region of interest can either be specified\r\n            by using a lat/lon geo-point and a radius in metres to return places within the locus defined by the lat/lon of\r\n            its centre or alternatively, by the use of a boundi",
                "description": "Gets the places that lie within a geographic region. The geographic region of interest can either be specified\r\n            by using a lat/lon geo-point and a radius in metres to return places within the locus defined by the lat/lon of\r\n            its centre or alternatively, by the use of a bounding box defined by the lat/lon of its north-west and south-east corners.\r\n            Optionally filters on type and can strip properties for a smaller payload.",
                "operationId": "Place_GetByGeo",
                "parameters": [
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Format - double. The radius of the bounding circle in metres when only lat/lon are specified.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "An optional list of comma separated property categories to return in the Place's property bag. If null or empty, all categories of property are returned. Pass the keyword \"none\" to return no properties (a valid list of categories can be obtained from the /Place/Meta/categories endpoint)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "includeChildren",
                        "in": "query",
                        "description": "Defaults to false. If true child places e.g. individual charging stations at a charge point while be included, otherwise just the URLs of any child places will be returned",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Place types to filter on, or null to return all types",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "activeOnly",
                        "in": "query",
                        "description": "An optional parameter to limit the results to active records only (Currently only the 'VariableMessageSign' place type is supported)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "numberOfPlacesToReturn",
                        "in": "query",
                        "description": "Format - int32. If specified, limits the number of returned places equal to the given value",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "placeGeo.swLat",
                        "in": "query",
                        "description": "Format - double.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "placeGeo.swLon",
                        "in": "query",
                        "description": "Format - double.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "placeGeo.neLat",
                        "in": "query",
                        "description": "Format - double.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "placeGeo.neLon",
                        "in": "query",
                        "description": "Format - double.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "placeGeo.lat",
                        "in": "query",
                        "description": "Format - double.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "placeGeo.lon",
                        "in": "query",
                        "description": "Format - double.",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-4"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-5"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-6"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-7"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Place/{type}/At/{Lat}/{Lon}": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets any places of the given type whose geography intersects the given latitude and longitude. In practice this means the Place\r\n            must be polygonal e.g. a BoroughBoundary.",
                "description": "Gets any places of the given type whose geography intersects the given latitude and longitude. In practice this means the Place\r\n            must be polygonal e.g. a BoroughBoundary.",
                "operationId": "Place_GetAt",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The place type (a valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint)",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "Lat",
                        "in": "path",
                        "description": "Format - double.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "Lon",
                        "in": "path",
                        "description": "Format - double.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/Place/{type}/overlay/{z}/{Lat}/{Lon}/{width}/{height}": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets the place overlay for a given set of co-ordinates and a given width/height.",
                "description": "Gets the place overlay for a given set of co-ordinates and a given width/height.",
                "operationId": "Place_GetOverlay",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The place type (a valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint)",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "z",
                        "in": "path",
                        "description": "Format - int32. The zoom level",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Lat",
                        "in": "path",
                        "description": "Format - double.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "Lon",
                        "in": "path",
                        "description": "Format - double.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "width",
                        "in": "path",
                        "description": "Format - int32. The width of the requested overlay.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "height",
                        "in": "path",
                        "description": "Format - int32. The height of the requested overlay.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/Place/Search": {
            "get": {
                "tags": [
                    "Place"
                ],
                "summary": "Gets all places that matches the given query",
                "description": "Gets all places that matches the given query",
                "operationId": "Place_Search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the place, you can use the /Place/Types/{types} endpoint to get a list of places for a given type including their names.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "A comma-separated list of the types to return. Max. approx 12 types.",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-16"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-17"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-18"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-19"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Road": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Gets all roads managed by TfL",
                "description": "Gets all roads managed by TfL",
                "operationId": "Road_Get",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "displayName": "string",
                                        "group": "string",
                                        "statusSeverity": "string",
                                        "statusSeverityDescription": "string",
                                        "bounds": "string",
                                        "envelope": "string",
                                        "statusAggregationStartDate": "string",
                                        "statusAggregationEndDate": "string",
                                        "url": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-1"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "displayName": "string",
                                        "group": "string",
                                        "statusSeverity": "string",
                                        "statusSeverityDescription": "string",
                                        "bounds": "string",
                                        "envelope": "string",
                                        "statusAggregationStartDate": "string",
                                        "statusAggregationEndDate": "string",
                                        "url": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadCorridorArray-2> <id>string</id> <displayName>string</displayName> <group>string</group> <statusSeverity>string</statusSeverity> <statusSeverityDescription>string</statusSeverityDescription> <bounds>string</bounds> <envelope>string</envelope> <statusAggregationStartDate>string</statusAggregationStartDate> <statusAggregationEndDate>string</statusAggregationEndDate> <url>string</url> </Tfl-Api-Presentation-Entities-RoadCorridorArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadCorridorArray-3> <id>string</id> <displayName>string</displayName> <group>string</group> <statusSeverity>string</statusSeverity> <statusSeverityDescription>string</statusSeverityDescription> <bounds>string</bounds> <envelope>string</envelope> <statusAggregationStartDate>string</statusAggregationStartDate> <statusAggregationEndDate>string</statusAggregationEndDate> <url>string</url> </Tfl-Api-Presentation-Entities-RoadCorridorArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/Road/{ids}": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Gets the road with the specified id (e.g. A1)",
                "description": "Gets the road with the specified id (e.g. A1)",
                "operationId": "Road_GetById",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of road identifiers e.g. \"A406, A2\" (a full list of supported road identifiers can be found at the /Road/ endpoint)",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-4"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "displayName": "string",
                                        "group": "string",
                                        "statusSeverity": "string",
                                        "statusSeverityDescription": "string",
                                        "bounds": "string",
                                        "envelope": "string",
                                        "statusAggregationStartDate": "string",
                                        "statusAggregationEndDate": "string",
                                        "url": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-5"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "displayName": "string",
                                        "group": "string",
                                        "statusSeverity": "string",
                                        "statusSeverityDescription": "string",
                                        "bounds": "string",
                                        "envelope": "string",
                                        "statusAggregationStartDate": "string",
                                        "statusAggregationEndDate": "string",
                                        "url": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-6"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadCorridorArray-6> <id>string</id> <displayName>string</displayName> <group>string</group> <statusSeverity>string</statusSeverity> <statusSeverityDescription>string</statusSeverityDescription> <bounds>string</bounds> <envelope>string</envelope> <statusAggregationStartDate>string</statusAggregationStartDate> <statusAggregationEndDate>string</statusAggregationEndDate> <url>string</url> </Tfl-Api-Presentation-Entities-RoadCorridorArray-6>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-7"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadCorridorArray-7> <id>string</id> <displayName>string</displayName> <group>string</group> <statusSeverity>string</statusSeverity> <statusSeverityDescription>string</statusSeverityDescription> <bounds>string</bounds> <envelope>string</envelope> <statusAggregationStartDate>string</statusAggregationStartDate> <statusAggregationEndDate>string</statusAggregationEndDate> <url>string</url> </Tfl-Api-Presentation-Entities-RoadCorridorArray-7>"
                            }
                        }
                    }
                }
            }
        },
        "/Road/{ids}/Status": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed.",
                "description": "Gets the specified roads with the status aggregated over the date range specified, or now until the end of today if no dates are passed.",
                "operationId": "Road_Status",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of road identifiers e.g. \"A406, A2\" or use \"all\" to ignore id filter (a full list of supported road identifiers can be found at the /Road/ endpoint)",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "dateRangeNullable.startDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateRangeNullable.endDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339).",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-8"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "displayName": "string",
                                        "group": "string",
                                        "statusSeverity": "string",
                                        "statusSeverityDescription": "string",
                                        "bounds": "string",
                                        "envelope": "string",
                                        "statusAggregationStartDate": "string",
                                        "statusAggregationEndDate": "string",
                                        "url": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-9"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "displayName": "string",
                                        "group": "string",
                                        "statusSeverity": "string",
                                        "statusSeverityDescription": "string",
                                        "bounds": "string",
                                        "envelope": "string",
                                        "statusAggregationStartDate": "string",
                                        "statusAggregationEndDate": "string",
                                        "url": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-10"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadCorridorArray-10> <id>string</id> <displayName>string</displayName> <group>string</group> <statusSeverity>string</statusSeverity> <statusSeverityDescription>string</statusSeverityDescription> <bounds>string</bounds> <envelope>string</envelope> <statusAggregationStartDate>string</statusAggregationStartDate> <statusAggregationEndDate>string</statusAggregationEndDate> <url>string</url> </Tfl-Api-Presentation-Entities-RoadCorridorArray-10>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadCorridorArray-11"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadCorridorArray-11> <id>string</id> <displayName>string</displayName> <group>string</group> <statusSeverity>string</statusSeverity> <statusSeverityDescription>string</statusSeverityDescription> <bounds>string</bounds> <envelope>string</envelope> <statusAggregationStartDate>string</statusAggregationStartDate> <statusAggregationEndDate>string</statusAggregationEndDate> <url>string</url> </Tfl-Api-Presentation-Entities-RoadCorridorArray-11>"
                            }
                        }
                    }
                }
            }
        },
        "/Road/{ids}/Disruption": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Get active disruptions, filtered by road ids",
                "description": "Get active disruptions, filtered by road ids",
                "operationId": "Road_Disruption",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "Comma-separated list of road identifiers e.g. \"A406, A2\" use all for all to ignore id filter (a full list of supported road identifiers can be found at the /Road/ endpoint)",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "stripContent",
                        "in": "query",
                        "description": "Optional, defaults to false. When true, removes every property/node except for id, point, severity, severityDescription, startDate, endDate, corridor details, location, comments and streets",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "severities",
                        "in": "query",
                        "description": "an optional list of Severity names to filter on (a valid list of severities can be obtained from the /Road/Meta/severities endpoint)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "an optional list of category names to filter on (a valid list of categories can be obtained from the /Road/Meta/categories endpoint)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "closures",
                        "in": "query",
                        "description": "Optional, defaults to true. When true, always includes disruptions that have road closures, regardless of the severity filter. When false, the severity filter works as normal.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadDisruptionArray"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "url": "string",
                                        "point": "string",
                                        "severity": "string",
                                        "ordinal": 0,
                                        "category": "string",
                                        "subCategory": "string",
                                        "comments": "string",
                                        "currentUpdate": "string",
                                        "currentUpdateDateTime": "string",
                                        "corridorIds": [
                                            "string"
                                        ],
                                        "startDateTime": "string",
                                        "endDateTime": "string",
                                        "lastModifiedTime": "string",
                                        "levelOfInterest": "string",
                                        "location": "string",
                                        "status": "string",
                                        "geography": {
                                            "geography": {
                                                "coordinateSystemId": 0,
                                                "wellKnownText": "string",
                                                "wellKnownBinary": "string"
                                            }
                                        },
                                        "geometry": {
                                            "geography": {
                                                "coordinateSystemId": 0,
                                                "wellKnownText": "string",
                                                "wellKnownBinary": "string"
                                            }
                                        },
                                        "streets": [
                                            {
                                                "name": "string",
                                                "closure": "string",
                                                "directions": "string",
                                                "segments": [
                                                    {
                                                        "toid": "string",
                                                        "lineString": "string",
                                                        "sourceSystemId": 0,
                                                        "sourceSystemKey": "string"
                                                    }
                                                ],
                                                "sourceSystemId": 0,
                                                "sourceSystemKey": "string"
                                            }
                                        ],
                                        "isProvisional": true,
                                        "hasClosures": true,
                                        "linkText": "string",
                                        "linkUrl": "string",
                                        "roadProject": {
                                            "projectId": "string",
                                            "schemeName": "string",
                                            "projectName": "string",
                                            "projectDescription": "string",
                                            "projectPageUrl": "string",
                                            "consultationPageUrl": "string",
                                            "consultationStartDate": "string",
                                            "consultationEndDate": "string",
                                            "constructionStartDate": "string",
                                            "constructionEndDate": "string",
                                            "boroughsBenefited": [
                                                "string"
                                            ],
                                            "cycleSuperhighwayId": "string",
                                            "phase": "Unscoped",
                                            "contactName": "string",
                                            "contactEmail": "string",
                                            "externalPageUrl": "string",
                                            "projectSummaryPageUrl": "string"
                                        },
                                        "publishStartDate": "string",
                                        "publishEndDate": "string",
                                        "timeFrame": "string",
                                        "roadDisruptionLines": [
                                            {
                                                "id": 0,
                                                "roadDisruptionId": "string",
                                                "isDiversion": true,
                                                "multiLineString": {
                                                    "geography": {
                                                        "coordinateSystemId": 0,
                                                        "wellKnownText": "string",
                                                        "wellKnownBinary": "string"
                                                    }
                                                },
                                                "startDate": "string",
                                                "endDate": "string",
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ],
                                        "roadDisruptionImpactAreas": [
                                            {
                                                "id": 0,
                                                "roadDisruptionId": "string",
                                                "polygon": {
                                                    "geography": {
                                                        "coordinateSystemId": 0,
                                                        "wellKnownText": "string",
                                                        "wellKnownBinary": "string"
                                                    }
                                                },
                                                "startDate": "string",
                                                "endDate": "string",
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ],
                                        "recurringSchedules": [
                                            {
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadDisruptionArray-1"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "url": "string",
                                        "point": "string",
                                        "severity": "string",
                                        "ordinal": 0,
                                        "category": "string",
                                        "subCategory": "string",
                                        "comments": "string",
                                        "currentUpdate": "string",
                                        "currentUpdateDateTime": "string",
                                        "corridorIds": [
                                            "string"
                                        ],
                                        "startDateTime": "string",
                                        "endDateTime": "string",
                                        "lastModifiedTime": "string",
                                        "levelOfInterest": "string",
                                        "location": "string",
                                        "status": "string",
                                        "geography": {
                                            "geography": {
                                                "coordinateSystemId": 0,
                                                "wellKnownText": "string",
                                                "wellKnownBinary": "string"
                                            }
                                        },
                                        "geometry": {
                                            "geography": {
                                                "coordinateSystemId": 0,
                                                "wellKnownText": "string",
                                                "wellKnownBinary": "string"
                                            }
                                        },
                                        "streets": [
                                            {
                                                "name": "string",
                                                "closure": "string",
                                                "directions": "string",
                                                "segments": [
                                                    {
                                                        "toid": "string",
                                                        "lineString": "string",
                                                        "sourceSystemId": 0,
                                                        "sourceSystemKey": "string"
                                                    }
                                                ],
                                                "sourceSystemId": 0,
                                                "sourceSystemKey": "string"
                                            }
                                        ],
                                        "isProvisional": true,
                                        "hasClosures": true,
                                        "linkText": "string",
                                        "linkUrl": "string",
                                        "roadProject": {
                                            "projectId": "string",
                                            "schemeName": "string",
                                            "projectName": "string",
                                            "projectDescription": "string",
                                            "projectPageUrl": "string",
                                            "consultationPageUrl": "string",
                                            "consultationStartDate": "string",
                                            "consultationEndDate": "string",
                                            "constructionStartDate": "string",
                                            "constructionEndDate": "string",
                                            "boroughsBenefited": [
                                                "string"
                                            ],
                                            "cycleSuperhighwayId": "string",
                                            "phase": "Unscoped",
                                            "contactName": "string",
                                            "contactEmail": "string",
                                            "externalPageUrl": "string",
                                            "projectSummaryPageUrl": "string"
                                        },
                                        "publishStartDate": "string",
                                        "publishEndDate": "string",
                                        "timeFrame": "string",
                                        "roadDisruptionLines": [
                                            {
                                                "id": 0,
                                                "roadDisruptionId": "string",
                                                "isDiversion": true,
                                                "multiLineString": {
                                                    "geography": {
                                                        "coordinateSystemId": 0,
                                                        "wellKnownText": "string",
                                                        "wellKnownBinary": "string"
                                                    }
                                                },
                                                "startDate": "string",
                                                "endDate": "string",
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ],
                                        "roadDisruptionImpactAreas": [
                                            {
                                                "id": 0,
                                                "roadDisruptionId": "string",
                                                "polygon": {
                                                    "geography": {
                                                        "coordinateSystemId": 0,
                                                        "wellKnownText": "string",
                                                        "wellKnownBinary": "string"
                                                    }
                                                },
                                                "startDate": "string",
                                                "endDate": "string",
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ],
                                        "recurringSchedules": [
                                            {
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadDisruptionArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadDisruptionArray-2> <id>string</id> <url>string</url> <point>string</point> <severity>string</severity> <ordinal>0</ordinal> <category>string</category> <subCategory>string</subCategory> <comments>string</comments> <currentUpdate>string</currentUpdate> <currentUpdateDateTime>string</currentUpdateDateTime> <corridorIds>string</corridorIds> <startDateTime>string</startDateTime> <endDateTime>string</endDateTime> <lastModifiedTime>string</lastModifiedTime> <levelOfInterest>string</levelOfInterest> <location>string</location> <status>string</status> <geography> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geography> <geometry> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geometry> <streets> <name>string</name> <closure>string</closure> <directions>string</directions> <segments> <toid>string</toid> <lineString>string</lineString> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </segments> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </streets> <isProvisional>true</isProvisional> <hasClosures>true</hasClosures> <linkText>string</linkText> <linkUrl>string</linkUrl> <roadProject> <projectId>string</projectId> <schemeName>string</schemeName> <projectName>string</projectName> <projectDescription>string</projectDescription> <projectPageUrl>string</projectPageUrl> <consultationPageUrl>string</consultationPageUrl> <consultationStartDate>string</consultationStartDate> <consultationEndDate>string</consultationEndDate> <constructionStartDate>string</constructionStartDate> <constructionEndDate>string</constructionEndDate> <boroughsBenefited>string</boroughsBenefited> <cycleSuperhighwayId>string</cycleSuperhighwayId> <phase>Unscoped</phase> <contactName>string</contactName> <contactEmail>string</contactEmail> <externalPageUrl>string</externalPageUrl> <projectSummaryPageUrl>string</projectSummaryPageUrl> </roadProject> <publishStartDate>string</publishStartDate> <publishEndDate>string</publishEndDate> <timeFrame>string</timeFrame> <roadDisruptionLines> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <isDiversion>true</isDiversion> <multiLineString> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </multiLineString> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionLines> <roadDisruptionImpactAreas> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <polygon> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </polygon> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionImpactAreas> <recurringSchedules> <startTime>string</startTime> <endTime>string</endTime> </recurringSchedules> </Tfl-Api-Presentation-Entities-RoadDisruptionArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadDisruptionArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-RoadDisruptionArray-3> <id>string</id> <url>string</url> <point>string</point> <severity>string</severity> <ordinal>0</ordinal> <category>string</category> <subCategory>string</subCategory> <comments>string</comments> <currentUpdate>string</currentUpdate> <currentUpdateDateTime>string</currentUpdateDateTime> <corridorIds>string</corridorIds> <startDateTime>string</startDateTime> <endDateTime>string</endDateTime> <lastModifiedTime>string</lastModifiedTime> <levelOfInterest>string</levelOfInterest> <location>string</location> <status>string</status> <geography> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geography> <geometry> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geometry> <streets> <name>string</name> <closure>string</closure> <directions>string</directions> <segments> <toid>string</toid> <lineString>string</lineString> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </segments> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </streets> <isProvisional>true</isProvisional> <hasClosures>true</hasClosures> <linkText>string</linkText> <linkUrl>string</linkUrl> <roadProject> <projectId>string</projectId> <schemeName>string</schemeName> <projectName>string</projectName> <projectDescription>string</projectDescription> <projectPageUrl>string</projectPageUrl> <consultationPageUrl>string</consultationPageUrl> <consultationStartDate>string</consultationStartDate> <consultationEndDate>string</consultationEndDate> <constructionStartDate>string</constructionStartDate> <constructionEndDate>string</constructionEndDate> <boroughsBenefited>string</boroughsBenefited> <cycleSuperhighwayId>string</cycleSuperhighwayId> <phase>Unscoped</phase> <contactName>string</contactName> <contactEmail>string</contactEmail> <externalPageUrl>string</externalPageUrl> <projectSummaryPageUrl>string</projectSummaryPageUrl> </roadProject> <publishStartDate>string</publishStartDate> <publishEndDate>string</publishEndDate> <timeFrame>string</timeFrame> <roadDisruptionLines> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <isDiversion>true</isDiversion> <multiLineString> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </multiLineString> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionLines> <roadDisruptionImpactAreas> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <polygon> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </polygon> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionImpactAreas> <recurringSchedules> <startTime>string</startTime> <endTime>string</endTime> </recurringSchedules> </Tfl-Api-Presentation-Entities-RoadDisruptionArray-3>"
                            },
                            "application/geo+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-RoadDisruptionArray-4"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "url": "string",
                                        "point": "string",
                                        "severity": "string",
                                        "ordinal": 0,
                                        "category": "string",
                                        "subCategory": "string",
                                        "comments": "string",
                                        "currentUpdate": "string",
                                        "currentUpdateDateTime": "string",
                                        "corridorIds": [
                                            "string"
                                        ],
                                        "startDateTime": "string",
                                        "endDateTime": "string",
                                        "lastModifiedTime": "string",
                                        "levelOfInterest": "string",
                                        "location": "string",
                                        "status": "string",
                                        "geography": {
                                            "geography": {
                                                "coordinateSystemId": 0,
                                                "wellKnownText": "string",
                                                "wellKnownBinary": "string"
                                            }
                                        },
                                        "geometry": {
                                            "geography": {
                                                "coordinateSystemId": 0,
                                                "wellKnownText": "string",
                                                "wellKnownBinary": "string"
                                            }
                                        },
                                        "streets": [
                                            {
                                                "name": "string",
                                                "closure": "string",
                                                "directions": "string",
                                                "segments": [
                                                    {
                                                        "toid": "string",
                                                        "lineString": "string",
                                                        "sourceSystemId": 0,
                                                        "sourceSystemKey": "string"
                                                    }
                                                ],
                                                "sourceSystemId": 0,
                                                "sourceSystemKey": "string"
                                            }
                                        ],
                                        "isProvisional": true,
                                        "hasClosures": true,
                                        "linkText": "string",
                                        "linkUrl": "string",
                                        "roadProject": {
                                            "projectId": "string",
                                            "schemeName": "string",
                                            "projectName": "string",
                                            "projectDescription": "string",
                                            "projectPageUrl": "string",
                                            "consultationPageUrl": "string",
                                            "consultationStartDate": "string",
                                            "consultationEndDate": "string",
                                            "constructionStartDate": "string",
                                            "constructionEndDate": "string",
                                            "boroughsBenefited": [
                                                "string"
                                            ],
                                            "cycleSuperhighwayId": "string",
                                            "phase": "Unscoped",
                                            "contactName": "string",
                                            "contactEmail": "string",
                                            "externalPageUrl": "string",
                                            "projectSummaryPageUrl": "string"
                                        },
                                        "publishStartDate": "string",
                                        "publishEndDate": "string",
                                        "timeFrame": "string",
                                        "roadDisruptionLines": [
                                            {
                                                "id": 0,
                                                "roadDisruptionId": "string",
                                                "isDiversion": true,
                                                "multiLineString": {
                                                    "geography": {
                                                        "coordinateSystemId": 0,
                                                        "wellKnownText": "string",
                                                        "wellKnownBinary": "string"
                                                    }
                                                },
                                                "startDate": "string",
                                                "endDate": "string",
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ],
                                        "roadDisruptionImpactAreas": [
                                            {
                                                "id": 0,
                                                "roadDisruptionId": "string",
                                                "polygon": {
                                                    "geography": {
                                                        "coordinateSystemId": 0,
                                                        "wellKnownText": "string",
                                                        "wellKnownBinary": "string"
                                                    }
                                                },
                                                "startDate": "string",
                                                "endDate": "string",
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ],
                                        "recurringSchedules": [
                                            {
                                                "startTime": "string",
                                                "endTime": "string"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/Road/all/Street/Disruption": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned.",
                "description": "Gets a list of disrupted streets. If no date filters are provided, current disruptions are returned.",
                "operationId": "Road_DisruptedStreets",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Optional, the start time to filter on.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Format - date-time (as date-time in RFC3339). Optional, The end time to filter on.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/Road/all/Disruption/{disruptionIds}": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Gets a list of active disruptions filtered by disruption Ids.",
                "description": "Gets a list of active disruptions filtered by disruption Ids.",
                "operationId": "Road_DisruptionById",
                "parameters": [
                    {
                        "name": "disruptionIds",
                        "in": "path",
                        "description": "Comma-separated list of disruption identifiers to filter by.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "stripContent",
                        "in": "query",
                        "description": "Optional, defaults to false. When true, removes every property/node except for id, point, severity, severityDescription, startDate, endDate, corridor details, location and comments.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                                },
                                "example": {
                                    "id": "string",
                                    "url": "string",
                                    "point": "string",
                                    "severity": "string",
                                    "ordinal": 0,
                                    "category": "string",
                                    "subCategory": "string",
                                    "comments": "string",
                                    "currentUpdate": "string",
                                    "currentUpdateDateTime": "string",
                                    "corridorIds": [
                                        "string"
                                    ],
                                    "startDateTime": "string",
                                    "endDateTime": "string",
                                    "lastModifiedTime": "string",
                                    "levelOfInterest": "string",
                                    "location": "string",
                                    "status": "string",
                                    "geography": {
                                        "geography": {
                                            "coordinateSystemId": 0,
                                            "wellKnownText": "string",
                                            "wellKnownBinary": "string"
                                        }
                                    },
                                    "geometry": {
                                        "geography": {
                                            "coordinateSystemId": 0,
                                            "wellKnownText": "string",
                                            "wellKnownBinary": "string"
                                        }
                                    },
                                    "streets": [
                                        {
                                            "name": "string",
                                            "closure": "string",
                                            "directions": "string",
                                            "segments": [
                                                {
                                                    "toid": "string",
                                                    "lineString": "string",
                                                    "sourceSystemId": 0,
                                                    "sourceSystemKey": "string"
                                                }
                                            ],
                                            "sourceSystemId": 0,
                                            "sourceSystemKey": "string"
                                        }
                                    ],
                                    "isProvisional": true,
                                    "hasClosures": true,
                                    "linkText": "string",
                                    "linkUrl": "string",
                                    "roadProject": {
                                        "projectId": "string",
                                        "schemeName": "string",
                                        "projectName": "string",
                                        "projectDescription": "string",
                                        "projectPageUrl": "string",
                                        "consultationPageUrl": "string",
                                        "consultationStartDate": "string",
                                        "consultationEndDate": "string",
                                        "constructionStartDate": "string",
                                        "constructionEndDate": "string",
                                        "boroughsBenefited": [
                                            "string"
                                        ],
                                        "cycleSuperhighwayId": "string",
                                        "phase": "Unscoped",
                                        "contactName": "string",
                                        "contactEmail": "string",
                                        "externalPageUrl": "string",
                                        "projectSummaryPageUrl": "string"
                                    },
                                    "publishStartDate": "string",
                                    "publishEndDate": "string",
                                    "timeFrame": "string",
                                    "roadDisruptionLines": [
                                        {
                                            "id": 0,
                                            "roadDisruptionId": "string",
                                            "isDiversion": true,
                                            "multiLineString": {
                                                "geography": {
                                                    "coordinateSystemId": 0,
                                                    "wellKnownText": "string",
                                                    "wellKnownBinary": "string"
                                                }
                                            },
                                            "startDate": "string",
                                            "endDate": "string",
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ],
                                    "roadDisruptionImpactAreas": [
                                        {
                                            "id": 0,
                                            "roadDisruptionId": "string",
                                            "polygon": {
                                                "geography": {
                                                    "coordinateSystemId": 0,
                                                    "wellKnownText": "string",
                                                    "wellKnownBinary": "string"
                                                }
                                            },
                                            "startDate": "string",
                                            "endDate": "string",
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ],
                                    "recurringSchedules": [
                                        {
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ]
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                                },
                                "example": {
                                    "id": "string",
                                    "url": "string",
                                    "point": "string",
                                    "severity": "string",
                                    "ordinal": 0,
                                    "category": "string",
                                    "subCategory": "string",
                                    "comments": "string",
                                    "currentUpdate": "string",
                                    "currentUpdateDateTime": "string",
                                    "corridorIds": [
                                        "string"
                                    ],
                                    "startDateTime": "string",
                                    "endDateTime": "string",
                                    "lastModifiedTime": "string",
                                    "levelOfInterest": "string",
                                    "location": "string",
                                    "status": "string",
                                    "geography": {
                                        "geography": {
                                            "coordinateSystemId": 0,
                                            "wellKnownText": "string",
                                            "wellKnownBinary": "string"
                                        }
                                    },
                                    "geometry": {
                                        "geography": {
                                            "coordinateSystemId": 0,
                                            "wellKnownText": "string",
                                            "wellKnownBinary": "string"
                                        }
                                    },
                                    "streets": [
                                        {
                                            "name": "string",
                                            "closure": "string",
                                            "directions": "string",
                                            "segments": [
                                                {
                                                    "toid": "string",
                                                    "lineString": "string",
                                                    "sourceSystemId": 0,
                                                    "sourceSystemKey": "string"
                                                }
                                            ],
                                            "sourceSystemId": 0,
                                            "sourceSystemKey": "string"
                                        }
                                    ],
                                    "isProvisional": true,
                                    "hasClosures": true,
                                    "linkText": "string",
                                    "linkUrl": "string",
                                    "roadProject": {
                                        "projectId": "string",
                                        "schemeName": "string",
                                        "projectName": "string",
                                        "projectDescription": "string",
                                        "projectPageUrl": "string",
                                        "consultationPageUrl": "string",
                                        "consultationStartDate": "string",
                                        "consultationEndDate": "string",
                                        "constructionStartDate": "string",
                                        "constructionEndDate": "string",
                                        "boroughsBenefited": [
                                            "string"
                                        ],
                                        "cycleSuperhighwayId": "string",
                                        "phase": "Unscoped",
                                        "contactName": "string",
                                        "contactEmail": "string",
                                        "externalPageUrl": "string",
                                        "projectSummaryPageUrl": "string"
                                    },
                                    "publishStartDate": "string",
                                    "publishEndDate": "string",
                                    "timeFrame": "string",
                                    "roadDisruptionLines": [
                                        {
                                            "id": 0,
                                            "roadDisruptionId": "string",
                                            "isDiversion": true,
                                            "multiLineString": {
                                                "geography": {
                                                    "coordinateSystemId": 0,
                                                    "wellKnownText": "string",
                                                    "wellKnownBinary": "string"
                                                }
                                            },
                                            "startDate": "string",
                                            "endDate": "string",
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ],
                                    "roadDisruptionImpactAreas": [
                                        {
                                            "id": 0,
                                            "roadDisruptionId": "string",
                                            "polygon": {
                                                "geography": {
                                                    "coordinateSystemId": 0,
                                                    "wellKnownText": "string",
                                                    "wellKnownBinary": "string"
                                                }
                                            },
                                            "startDate": "string",
                                            "endDate": "string",
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ],
                                    "recurringSchedules": [
                                        {
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ]
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.RoadDisruption> <id>string</id> <url>string</url> <point>string</point> <severity>string</severity> <ordinal>0</ordinal> <category>string</category> <subCategory>string</subCategory> <comments>string</comments> <currentUpdate>string</currentUpdate> <currentUpdateDateTime>string</currentUpdateDateTime> <corridorIds>string</corridorIds> <startDateTime>string</startDateTime> <endDateTime>string</endDateTime> <lastModifiedTime>string</lastModifiedTime> <levelOfInterest>string</levelOfInterest> <location>string</location> <status>string</status> <geography> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geography> <geometry> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geometry> <streets> <name>string</name> <closure>string</closure> <directions>string</directions> <segments> <toid>string</toid> <lineString>string</lineString> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </segments> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </streets> <isProvisional>true</isProvisional> <hasClosures>true</hasClosures> <linkText>string</linkText> <linkUrl>string</linkUrl> <roadProject> <projectId>string</projectId> <schemeName>string</schemeName> <projectName>string</projectName> <projectDescription>string</projectDescription> <projectPageUrl>string</projectPageUrl> <consultationPageUrl>string</consultationPageUrl> <consultationStartDate>string</consultationStartDate> <consultationEndDate>string</consultationEndDate> <constructionStartDate>string</constructionStartDate> <constructionEndDate>string</constructionEndDate> <boroughsBenefited>string</boroughsBenefited> <cycleSuperhighwayId>string</cycleSuperhighwayId> <phase>Unscoped</phase> <contactName>string</contactName> <contactEmail>string</contactEmail> <externalPageUrl>string</externalPageUrl> <projectSummaryPageUrl>string</projectSummaryPageUrl> </roadProject> <publishStartDate>string</publishStartDate> <publishEndDate>string</publishEndDate> <timeFrame>string</timeFrame> <roadDisruptionLines> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <isDiversion>true</isDiversion> <multiLineString> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </multiLineString> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionLines> <roadDisruptionImpactAreas> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <polygon> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </polygon> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionImpactAreas> <recurringSchedules> <startTime>string</startTime> <endTime>string</endTime> </recurringSchedules> </Tfl.Api.Presentation.Entities.RoadDisruption>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.RoadDisruption> <id>string</id> <url>string</url> <point>string</point> <severity>string</severity> <ordinal>0</ordinal> <category>string</category> <subCategory>string</subCategory> <comments>string</comments> <currentUpdate>string</currentUpdate> <currentUpdateDateTime>string</currentUpdateDateTime> <corridorIds>string</corridorIds> <startDateTime>string</startDateTime> <endDateTime>string</endDateTime> <lastModifiedTime>string</lastModifiedTime> <levelOfInterest>string</levelOfInterest> <location>string</location> <status>string</status> <geography> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geography> <geometry> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </geometry> <streets> <name>string</name> <closure>string</closure> <directions>string</directions> <segments> <toid>string</toid> <lineString>string</lineString> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </segments> <sourceSystemId>0</sourceSystemId> <sourceSystemKey>string</sourceSystemKey> </streets> <isProvisional>true</isProvisional> <hasClosures>true</hasClosures> <linkText>string</linkText> <linkUrl>string</linkUrl> <roadProject> <projectId>string</projectId> <schemeName>string</schemeName> <projectName>string</projectName> <projectDescription>string</projectDescription> <projectPageUrl>string</projectPageUrl> <consultationPageUrl>string</consultationPageUrl> <consultationStartDate>string</consultationStartDate> <consultationEndDate>string</consultationEndDate> <constructionStartDate>string</constructionStartDate> <constructionEndDate>string</constructionEndDate> <boroughsBenefited>string</boroughsBenefited> <cycleSuperhighwayId>string</cycleSuperhighwayId> <phase>Unscoped</phase> <contactName>string</contactName> <contactEmail>string</contactEmail> <externalPageUrl>string</externalPageUrl> <projectSummaryPageUrl>string</projectSummaryPageUrl> </roadProject> <publishStartDate>string</publishStartDate> <publishEndDate>string</publishEndDate> <timeFrame>string</timeFrame> <roadDisruptionLines> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <isDiversion>true</isDiversion> <multiLineString> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </multiLineString> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionLines> <roadDisruptionImpactAreas> <id>0</id> <roadDisruptionId>string</roadDisruptionId> <polygon> <geography> <coordinateSystemId>0</coordinateSystemId> <wellKnownText>string</wellKnownText> <wellKnownBinary>string</wellKnownBinary> </geography> </polygon> <startDate>string</startDate> <endDate>string</endDate> <startTime>string</startTime> <endTime>string</endTime> </roadDisruptionImpactAreas> <recurringSchedules> <startTime>string</startTime> <endTime>string</endTime> </recurringSchedules> </Tfl.Api.Presentation.Entities.RoadDisruption>"
                            },
                            "application/geo+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                                },
                                "example": {
                                    "id": "string",
                                    "url": "string",
                                    "point": "string",
                                    "severity": "string",
                                    "ordinal": 0,
                                    "category": "string",
                                    "subCategory": "string",
                                    "comments": "string",
                                    "currentUpdate": "string",
                                    "currentUpdateDateTime": "string",
                                    "corridorIds": [
                                        "string"
                                    ],
                                    "startDateTime": "string",
                                    "endDateTime": "string",
                                    "lastModifiedTime": "string",
                                    "levelOfInterest": "string",
                                    "location": "string",
                                    "status": "string",
                                    "geography": {
                                        "geography": {
                                            "coordinateSystemId": 0,
                                            "wellKnownText": "string",
                                            "wellKnownBinary": "string"
                                        }
                                    },
                                    "geometry": {
                                        "geography": {
                                            "coordinateSystemId": 0,
                                            "wellKnownText": "string",
                                            "wellKnownBinary": "string"
                                        }
                                    },
                                    "streets": [
                                        {
                                            "name": "string",
                                            "closure": "string",
                                            "directions": "string",
                                            "segments": [
                                                {
                                                    "toid": "string",
                                                    "lineString": "string",
                                                    "sourceSystemId": 0,
                                                    "sourceSystemKey": "string"
                                                }
                                            ],
                                            "sourceSystemId": 0,
                                            "sourceSystemKey": "string"
                                        }
                                    ],
                                    "isProvisional": true,
                                    "hasClosures": true,
                                    "linkText": "string",
                                    "linkUrl": "string",
                                    "roadProject": {
                                        "projectId": "string",
                                        "schemeName": "string",
                                        "projectName": "string",
                                        "projectDescription": "string",
                                        "projectPageUrl": "string",
                                        "consultationPageUrl": "string",
                                        "consultationStartDate": "string",
                                        "consultationEndDate": "string",
                                        "constructionStartDate": "string",
                                        "constructionEndDate": "string",
                                        "boroughsBenefited": [
                                            "string"
                                        ],
                                        "cycleSuperhighwayId": "string",
                                        "phase": "Unscoped",
                                        "contactName": "string",
                                        "contactEmail": "string",
                                        "externalPageUrl": "string",
                                        "projectSummaryPageUrl": "string"
                                    },
                                    "publishStartDate": "string",
                                    "publishEndDate": "string",
                                    "timeFrame": "string",
                                    "roadDisruptionLines": [
                                        {
                                            "id": 0,
                                            "roadDisruptionId": "string",
                                            "isDiversion": true,
                                            "multiLineString": {
                                                "geography": {
                                                    "coordinateSystemId": 0,
                                                    "wellKnownText": "string",
                                                    "wellKnownBinary": "string"
                                                }
                                            },
                                            "startDate": "string",
                                            "endDate": "string",
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ],
                                    "roadDisruptionImpactAreas": [
                                        {
                                            "id": 0,
                                            "roadDisruptionId": "string",
                                            "polygon": {
                                                "geography": {
                                                    "coordinateSystemId": 0,
                                                    "wellKnownText": "string",
                                                    "wellKnownBinary": "string"
                                                }
                                            },
                                            "startDate": "string",
                                            "endDate": "string",
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ],
                                    "recurringSchedules": [
                                        {
                                            "startTime": "string",
                                            "endTime": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Road/Meta/Categories": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Gets a list of valid RoadDisruption categories",
                "description": "Gets a list of valid RoadDisruption categories",
                "operationId": "Road_MetaCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoadMetaCategoriesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoadMetaCategoriesGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoadMetaCategoriesGet200ApplicationXmlResponse"
                                },
                                "example": "<RoadMetaCategoriesGet200ApplicationXmlResponse>string</RoadMetaCategoriesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoadMetaCategoriesGet200TextXmlResponse"
                                },
                                "example": "<RoadMetaCategoriesGet200TextXmlResponse>string</RoadMetaCategoriesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Road/Meta/Severities": {
            "get": {
                "tags": [
                    "Road"
                ],
                "summary": "Gets a list of valid RoadDisruption severity codes",
                "description": "Gets a list of valid RoadDisruption severity codes",
                "operationId": "Road_MetaSeverities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray-4"
                                },
                                "example": [
                                    {
                                        "modeName": "string",
                                        "severityLevel": 0,
                                        "description": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray-5"
                                },
                                "example": [
                                    {
                                        "modeName": "string",
                                        "severityLevel": 0,
                                        "description": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray-6"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StatusSeverityArray-6> <modeName>string</modeName> <severityLevel>0</severityLevel> <description>string</description> </Tfl-Api-Presentation-Entities-StatusSeverityArray-6>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StatusSeverityArray-7"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StatusSeverityArray-7> <modeName>string</modeName> <severityLevel>0</severityLevel> <description>string</description> </Tfl-Api-Presentation-Entities-StatusSeverityArray-7>"
                            }
                        }
                    }
                }
            }
        },
        "/Search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search the site for occurrences of the query string. The maximum number of results returned is equal to the maximum page size\r\n            of 100. To return subsequent pages, use the paginated overload.",
                "description": "Search the site for occurrences of the query string. The maximum number of results returned is equal to the maximum page size\r\n            of 100. To return subsequent pages, use the paginated overload.",
                "operationId": "Search_Get",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Search/BusSchedules": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Searches the bus schedules folder on S3 for a given bus number.",
                "description": "Searches the bus schedules folder on S3 for a given bus number.",
                "operationId": "Search_BusSchedules",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Search/Meta/SearchProviders": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Gets the available searchProvider names.",
                "description": "Gets the available searchProvider names.",
                "operationId": "Search_MetaSearchProviders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSearchProvidersGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSearchProvidersGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSearchProvidersGet200ApplicationXmlResponse"
                                },
                                "example": "<SearchMetaSearchProvidersGet200ApplicationXmlResponse>string</SearchMetaSearchProvidersGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSearchProvidersGet200TextXmlResponse"
                                },
                                "example": "<SearchMetaSearchProvidersGet200TextXmlResponse>string</SearchMetaSearchProvidersGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Search/Meta/Categories": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Gets the available search categories.",
                "description": "Gets the available search categories.",
                "operationId": "Search_MetaCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaCategoriesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaCategoriesGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaCategoriesGet200ApplicationXmlResponse"
                                },
                                "example": "<SearchMetaCategoriesGet200ApplicationXmlResponse>string</SearchMetaCategoriesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaCategoriesGet200TextXmlResponse"
                                },
                                "example": "<SearchMetaCategoriesGet200TextXmlResponse>string</SearchMetaCategoriesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Search/Meta/Sorts": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Gets the available sorting options.",
                "description": "Gets the available sorting options.",
                "operationId": "Search_MetaSorts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSortsGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSortsGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSortsGet200ApplicationXmlResponse"
                                },
                                "example": "<SearchMetaSortsGet200ApplicationXmlResponse>string</SearchMetaSortsGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchMetaSortsGet200TextXmlResponse"
                                },
                                "example": "<SearchMetaSortsGet200TextXmlResponse>string</SearchMetaSortsGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Meta/Categories": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of available StopPoint additional information categories",
                "description": "Gets the list of available StopPoint additional information categories",
                "operationId": "StopPoint_MetaCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointCategoryArray"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointCategoryArray-1"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointCategoryArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StopPointCategoryArray-2> <category>string</category> <availableKeys>string</availableKeys> </Tfl-Api-Presentation-Entities-StopPointCategoryArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointCategoryArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StopPointCategoryArray-3> <category>string</category> <availableKeys>string</availableKeys> </Tfl-Api-Presentation-Entities-StopPointCategoryArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Meta/StopTypes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of available StopPoint types",
                "description": "Gets the list of available StopPoint types",
                "operationId": "StopPoint_MetaStopTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointMetaStopTypesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointMetaStopTypesGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointMetaStopTypesGet200ApplicationXmlResponse"
                                },
                                "example": "<StopPointMetaStopTypesGet200ApplicationXmlResponse>string</StopPointMetaStopTypesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointMetaStopTypesGet200TextXmlResponse"
                                },
                                "example": "<StopPointMetaStopTypesGet200TextXmlResponse>string</StopPointMetaStopTypesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Meta/Modes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of available StopPoint modes",
                "description": "Gets the list of available StopPoint modes",
                "operationId": "StopPoint_MetaModes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-8"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-9"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-10"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ModeArray-10> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </Tfl-Api-Presentation-Entities-ModeArray-10>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ModeArray-11"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ModeArray-11> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </Tfl-Api-Presentation-Entities-ModeArray-11>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{ids}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of StopPoints corresponding to the given list of stop ids.",
                "description": "Gets a list of StopPoints corresponding to the given list of stop ids.",
                "operationId": "StopPoint_GetById",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of stop point ids (station naptan code e.g. 940GZZLUASL). Max. approx. 20 ids.\r\n            You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "includeCrowdingData",
                        "in": "query",
                        "description": "Include the crowding data (static). To Filter further use: /StopPoint/{ids}/Crowding/{line}",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-8"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-9"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-10"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-11"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{id}/placeTypes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Get a list of places corresponding to a given id and place types.",
                "description": "Get a list of places corresponding to a given id and place types.",
                "operationId": "StopPoint_Get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A naptan id for a stop point (station naptan code e.g. 940GZZLUASL).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "placeTypes",
                        "in": "query",
                        "description": "A comcomma-separated value representing the place types.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-20"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-21"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-22"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-23"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{id}/Crowding/{line}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.",
                "description": "Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.",
                "operationId": "StopPoint_Crowding",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Naptan id of the stop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "line",
                        "in": "path",
                        "description": "A particular line e.g. victoria, circle, northern etc.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The direction of travel. Can be inbound or outbound.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "inbound",
                                "outbound",
                                "all"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-12"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-13"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-14"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-15"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Type/{types}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all stop points of a given type",
                "description": "Gets all stop points of a given type",
                "operationId": "StopPoint_GetByType",
                "parameters": [
                    {
                        "name": "types",
                        "in": "path",
                        "description": "A comma-separated list of the types to return. Max. approx. 12 types. \r\n            A list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-16"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-17"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-18"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-19"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Type/{types}/page/{page}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all the stop points of given type(s) with a page number",
                "description": "Gets all the stop points of given type(s) with a page number",
                "operationId": "StopPoint_GetByTypeWithPagination",
                "parameters": [
                    {
                        "name": "types",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Format - int32.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-20"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-21"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-22"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-23"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/ServiceTypes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the service types for a given stoppoint",
                "description": "Gets the service types for a given stoppoint",
                "operationId": "StopPoint_GetServiceTypes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The Naptan id of the stop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineIds",
                        "in": "query",
                        "description": "The lines which contain the given Naptan id (all lines relevant to the given stoppoint if empty)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "The modes which the lines are relevant to (all if empty)",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineServiceTypeArray"
                                },
                                "example": [
                                    {
                                        "lineName": "string",
                                        "lineSpecificServiceTypes": [
                                            {
                                                "serviceType": {
                                                    "name": "string",
                                                    "uri": "string"
                                                },
                                                "stopServesServiceType": true
                                            }
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineServiceTypeArray-1"
                                },
                                "example": [
                                    {
                                        "lineName": "string",
                                        "lineSpecificServiceTypes": [
                                            {
                                                "serviceType": {
                                                    "name": "string",
                                                    "uri": "string"
                                                },
                                                "stopServesServiceType": true
                                            }
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineServiceTypeArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-LineServiceTypeArray-2> <lineName>string</lineName> <lineSpecificServiceTypes> <serviceType> <name>string</name> <uri>string</uri> </serviceType> <stopServesServiceType>true</stopServesServiceType> </lineSpecificServiceTypes> </Tfl-Api-Presentation-Entities-LineServiceTypeArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-LineServiceTypeArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-LineServiceTypeArray-3> <lineName>string</lineName> <lineSpecificServiceTypes> <serviceType> <name>string</name> <uri>string</uri> </serviceType> <stopServesServiceType>true</stopServesServiceType> </lineSpecificServiceTypes> </Tfl-Api-Presentation-Entities-LineServiceTypeArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{id}/Arrivals": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of arrival predictions for the given stop point id",
                "description": "Gets the list of arrival predictions for the given stop point id",
                "operationId": "StopPoint_Arrivals",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A StopPoint id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-8"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-9"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-10"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-10> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-10>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-11"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-11> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-11>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{id}/ArrivalDepartures": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of arrival and departure predictions for the given stop point id (overground and tfl rail only)",
                "description": "Gets the list of arrival and departure predictions for the given stop point id (overground and tfl rail only)",
                "operationId": "StopPoint_ArrivalDepartures",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A StopPoint id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineIds",
                        "in": "query",
                        "description": "A comma-separated list of line ids e.g. tfl-rail, london-overground",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ArrivalDepartureArray"
                                },
                                "example": [
                                    {
                                        "platformName": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "estimatedTimeOfArrival": "string",
                                        "scheduledTimeOfArrival": "string",
                                        "estimatedTimeOfDeparture": "string",
                                        "scheduledTimeOfDeparture": "string",
                                        "minutesAndSecondsToArrival": "string",
                                        "minutesAndSecondsToDeparture": "string",
                                        "cause": "string",
                                        "departureStatus": "OnTime",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ArrivalDepartureArray-1"
                                },
                                "example": [
                                    {
                                        "platformName": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "estimatedTimeOfArrival": "string",
                                        "scheduledTimeOfArrival": "string",
                                        "estimatedTimeOfDeparture": "string",
                                        "scheduledTimeOfDeparture": "string",
                                        "minutesAndSecondsToArrival": "string",
                                        "minutesAndSecondsToDeparture": "string",
                                        "cause": "string",
                                        "departureStatus": "OnTime",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ArrivalDepartureArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ArrivalDepartureArray-2> <platformName>string</platformName> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <naptanId>string</naptanId> <stationName>string</stationName> <estimatedTimeOfArrival>string</estimatedTimeOfArrival> <scheduledTimeOfArrival>string</scheduledTimeOfArrival> <estimatedTimeOfDeparture>string</estimatedTimeOfDeparture> <scheduledTimeOfDeparture>string</scheduledTimeOfDeparture> <minutesAndSecondsToArrival>string</minutesAndSecondsToArrival> <minutesAndSecondsToDeparture>string</minutesAndSecondsToDeparture> <cause>string</cause> <departureStatus>OnTime</departureStatus> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-ArrivalDepartureArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-ArrivalDepartureArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-ArrivalDepartureArray-3> <platformName>string</platformName> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <naptanId>string</naptanId> <stationName>string</stationName> <estimatedTimeOfArrival>string</estimatedTimeOfArrival> <scheduledTimeOfArrival>string</scheduledTimeOfArrival> <estimatedTimeOfDeparture>string</estimatedTimeOfDeparture> <scheduledTimeOfDeparture>string</scheduledTimeOfDeparture> <minutesAndSecondsToArrival>string</minutesAndSecondsToArrival> <minutesAndSecondsToDeparture>string</minutesAndSecondsToDeparture> <cause>string</cause> <departureStatus>OnTime</departureStatus> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-ArrivalDepartureArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{id}/CanReachOnLine/{lineId}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets Stopoints that are reachable from a station/line combination.",
                "description": "Gets Stopoints that are reachable from a station/line combination.",
                "operationId": "StopPoint_ReachableFrom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) of the stop point to filter by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineId",
                        "in": "path",
                        "description": "Line id of the line to filter by (e.g. victoria)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-24"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-25"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-26"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointArray-27"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{id}/Route": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Returns the route sections for all the lines that service the given stop point ids",
                "description": "Returns the route sections for all the lines that service the given stop point ids",
                "operationId": "StopPoint_Route",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A stop point id (station naptan codes e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointRouteSectionArray"
                                },
                                "example": [
                                    {
                                        "naptanId": "string",
                                        "lineId": "string",
                                        "mode": "string",
                                        "validFrom": "string",
                                        "validTo": "string",
                                        "direction": "string",
                                        "routeSectionName": "string",
                                        "lineString": "string",
                                        "isActive": true,
                                        "serviceType": "string",
                                        "vehicleDestinationText": "string",
                                        "destinationName": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-1"
                                },
                                "example": [
                                    {
                                        "naptanId": "string",
                                        "lineId": "string",
                                        "mode": "string",
                                        "validFrom": "string",
                                        "validTo": "string",
                                        "direction": "string",
                                        "routeSectionName": "string",
                                        "lineString": "string",
                                        "isActive": true,
                                        "serviceType": "string",
                                        "vehicleDestinationText": "string",
                                        "destinationName": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-2> <naptanId>string</naptanId> <lineId>string</lineId> <mode>string</mode> <validFrom>string</validFrom> <validTo>string</validTo> <direction>string</direction> <routeSectionName>string</routeSectionName> <lineString>string</lineString> <isActive>true</isActive> <serviceType>string</serviceType> <vehicleDestinationText>string</vehicleDestinationText> <destinationName>string</destinationName> </Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-3> <naptanId>string</naptanId> <lineId>string</lineId> <mode>string</mode> <validFrom>string</validFrom> <validTo>string</validTo> <direction>string</direction> <routeSectionName>string</routeSectionName> <lineString>string</lineString> <isActive>true</isActive> <serviceType>string</serviceType> <vehicleDestinationText>string</vehicleDestinationText> <destinationName>string</destinationName> </Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Mode/{modes}/Disruption": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a distinct list of disrupted stop points for the given modes",
                "description": "Gets a distinct list of disrupted stop points for the given modes",
                "operationId": "StopPoint_DisruptionByMode",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-seperated list of modes e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "includeRouteBlockedStops",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray-1"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray-2"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-DisruptedPointArray-2> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </Tfl-Api-Presentation-Entities-DisruptedPointArray-2>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray-3"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-DisruptedPointArray-3> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </Tfl-Api-Presentation-Entities-DisruptedPointArray-3>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{ids}/Disruption": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.",
                "description": "Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.",
                "operationId": "StopPoint_Disruption",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-seperated list of stop point ids. Max. approx. 20 ids.\r\n            You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "getFamily",
                        "in": "query",
                        "description": "Specify true to return disruptions for entire family, or false to return disruptions for just this stop point. Defaults to false.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeRouteBlockedStops",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "flattenResponse",
                        "in": "query",
                        "description": "Specify true to associate all disruptions with parent stop point. (Only applicable when getFamily is true).",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray-4"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray-5"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray-6"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-DisruptedPointArray-6> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </Tfl-Api-Presentation-Entities-DisruptedPointArray-6>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-DisruptedPointArray-7"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-DisruptedPointArray-7> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </Tfl-Api-Presentation-Entities-DisruptedPointArray-7>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{id}/DirectionTo/{toStopPointId}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Returns the canonical direction, \"inbound\" or \"outbound\", for a given pair of stop point Ids in the direction from -&gt; to.",
                "description": "Returns the canonical direction, \"inbound\" or \"outbound\", for a given pair of stop point Ids in the direction from -&gt; to.",
                "operationId": "StopPoint_Direction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Originating stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toStopPointId",
                        "in": "path",
                        "description": "Destination stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineId",
                        "in": "query",
                        "description": "Optional line id filter e.g. victoria",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointIdDirectionToToStopPointIdGet200ApplicationJsonResponse"
                                },
                                "example": "string"
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointIdDirectionToToStopPointIdGet200TextJsonResponse"
                                },
                                "example": "string"
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointIdDirectionToToStopPointIdGet200ApplicationXmlResponse"
                                },
                                "example": "<StopPointIdDirectionToToStopPointIdGet200ApplicationXmlResponse>string</StopPointIdDirectionToToStopPointIdGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StopPointIdDirectionToToStopPointIdGet200TextXmlResponse"
                                },
                                "example": "<StopPointIdDirectionToToStopPointIdGet200TextXmlResponse>string</StopPointIdDirectionToToStopPointIdGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of StopPoints within {radius} by the specified criteria",
                "description": "Gets a list of StopPoints within {radius} by the specified criteria",
                "operationId": "StopPoint_GetByGeoPoint",
                "parameters": [
                    {
                        "name": "stopTypes",
                        "in": "query",
                        "description": "a list of stopTypes that should be returned (a list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint)",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "location.lat",
                        "in": "query",
                        "description": "Format - double.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "location.lon",
                        "in": "query",
                        "description": "Format - double.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Format - int32. the radius of the bounding circle in metres (default : 200)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "useStopPointHierarchy",
                        "in": "query",
                        "description": "Re-arrange the output into a parent/child hierarchy",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "the list of modes to search (comma separated mode names e.g. tube,dlr)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "an optional list of comma separated property categories to return in the StopPoint's property bag. If null or empty, all categories of property are returned. Pass the keyword \"none\" to return no properties (a valid list of categories can be obtained from the /StopPoint/Meta/categories endpoint)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "returnLines",
                        "in": "query",
                        "description": "true to return the lines that each stop point serves as a nested resource",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Mode/{modes}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of StopPoints filtered by the modes available at that StopPoint.",
                "description": "Gets a list of StopPoints filtered by the modes available at that StopPoint.",
                "operationId": "StopPoint_GetByMode",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-seperated list of modes e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The data set page to return. Page 1 equates to the first 1000 stop points, page 2 equates to 1001-2000 etc. Must be entered for bus mode as data set is too large.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Search/{query}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "description": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "operationId": "StopPoint_SearchById",
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "description": "The query string, case-insensitive. Leading and trailing wildcards are applied automatically.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "An optional, parameter separated list of the modes to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "faresOnly",
                        "in": "query",
                        "description": "True to only return stations in that have Fares data available for single fares to another station.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "Format - int32. An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,\r\n            it is possible that the flattened result set will contain more than 50 items.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lines",
                        "in": "query",
                        "description": "An optional, parameter separated list of the lines to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "includeHubs",
                        "in": "query",
                        "description": "If true, returns results including HUBs.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "tflOperatedNationalRailStationsOnly",
                        "in": "query",
                        "description": "If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Search": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "description": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "operationId": "StopPoint_Search",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The query string, case-insensitive. Leading and trailing wildcards are applied automatically.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "An optional, parameter separated list of the modes to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "faresOnly",
                        "in": "query",
                        "description": "True to only return stations in that have Fares data available for single fares to another station.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "Format - int32. An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,\r\n            it is possible that the flattened result set will contain more than 50 items.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lines",
                        "in": "query",
                        "description": "An optional, parameter separated list of the lines to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "includeHubs",
                        "in": "query",
                        "description": "If true, returns results including HUBs.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "tflOperatedNationalRailStationsOnly",
                        "in": "query",
                        "description": "If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchResponse"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.SearchResponse> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl.Api.Presentation.Entities.SearchResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/Sms/{id}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a StopPoint for a given sms code.",
                "description": "Gets a StopPoint for a given sms code.",
                "operationId": "StopPoint_GetBySms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A 5-digit Countdown Bus Stop Code e.g. 73241, 50435, 56334.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "If set to \"web\", a 302 redirect to relevant website bus stop page is returned. Valid values are : web. All other values are ignored.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{stopPointId}/TaxiRanks": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of taxi ranks corresponding to the given stop point id.",
                "description": "Gets a list of taxi ranks corresponding to the given stop point id.",
                "operationId": "StopPoint_GetTaxiRanksByIds",
                "parameters": [
                    {
                        "name": "stopPointId",
                        "in": "path",
                        "description": "stopPointId is required to get the taxi ranks.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-24"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-25"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-26"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-27"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/StopPoint/{stopPointId}/CarParks": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Get car parks corresponding to the given stop point id.",
                "description": "Get car parks corresponding to the given stop point id.",
                "operationId": "StopPoint_GetCarParksById",
                "parameters": [
                    {
                        "name": "stopPointId",
                        "in": "path",
                        "description": "stopPointId is required to get the car parks.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-28"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-29"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-30"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PlaceArray-31"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/TravelTimes/overlay/{z}/mapcenter/{mapCenterLat}/{mapCenterLon}/pinlocation/{pinLat}/{pinLon}/dimensions/{width}/{height}": {
            "get": {
                "tags": [
                    "TravelTime"
                ],
                "summary": "Gets the TravelTime overlay.",
                "description": "Gets the TravelTime overlay.",
                "operationId": "TravelTime_GetOverlay",
                "parameters": [
                    {
                        "name": "z",
                        "in": "path",
                        "description": "Format - int32. The zoom level.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pinLat",
                        "in": "path",
                        "description": "Format - double. The latitude of the pin.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pinLon",
                        "in": "path",
                        "description": "Format - double. The longitude of the pin.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "mapCenterLat",
                        "in": "path",
                        "description": "Format - double. The map center latitude.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "mapCenterLon",
                        "in": "path",
                        "description": "Format - double. The map center longitude.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "width",
                        "in": "path",
                        "description": "Format - int32. The width of the requested overlay.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "height",
                        "in": "path",
                        "description": "Format - int32. The height of the requested overlay.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "scenarioTitle",
                        "in": "query",
                        "description": "The title of the scenario.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeOfDayId",
                        "in": "query",
                        "description": "The id for the time of day (AM/INTER/PM)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modeId",
                        "in": "query",
                        "description": "The id of the mode.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The direction of travel.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "Average",
                                "From",
                                "To"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "travelTimeInterval",
                        "in": "query",
                        "description": "Format - int32. The total minutes between the travel time bands",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/TravelTimes/compareOverlay/{z}/mapcenter/{mapCenterLat}/{mapCenterLon}/pinlocation/{pinLat}/{pinLon}/dimensions/{width}/{height}": {
            "get": {
                "tags": [
                    "TravelTime"
                ],
                "summary": "Gets the TravelTime overlay.",
                "description": "Gets the TravelTime overlay.",
                "operationId": "TravelTime_GetCompareOverlay",
                "parameters": [
                    {
                        "name": "z",
                        "in": "path",
                        "description": "Format - int32. The zoom level.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pinLat",
                        "in": "path",
                        "description": "Format - double. The latitude of the pin.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "pinLon",
                        "in": "path",
                        "description": "Format - double. The longitude of the pin.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "mapCenterLat",
                        "in": "path",
                        "description": "Format - double. The map center latitude.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "mapCenterLon",
                        "in": "path",
                        "description": "Format - double. The map center longitude.",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "width",
                        "in": "path",
                        "description": "Format - int32. The width of the requested overlay.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "height",
                        "in": "path",
                        "description": "Format - int32. The height of the requested overlay.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "scenarioTitle",
                        "in": "query",
                        "description": "The title of the scenario.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeOfDayId",
                        "in": "query",
                        "description": "The id for the time of day (AM/INTER/PM)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modeId",
                        "in": "query",
                        "description": "The id of the mode.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The direction of travel.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "Average",
                                "From",
                                "To"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "travelTimeInterval",
                        "in": "query",
                        "description": "Format - int32. The total minutes between the travel time bands",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "compareType",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "compareValue",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System.Object"
                                },
                                "example": "<System.Object />"
                            }
                        }
                    }
                }
            }
        },
        "/Vehicle/{ids}/Arrivals": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Gets the predictions for a given list of vehicle Id's.",
                "description": "Gets the predictions for a given list of vehicle Id's.",
                "operationId": "Vehicle_Get",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of vehicle ids e.g. LX58CFV,LX11AZB,LX58CFE. Max approx. 25 ids.",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-12"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-13"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-14"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-14> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-14>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-Api-Presentation-Entities-PredictionArray-15"
                                },
                                "example": "<Tfl-Api-Presentation-Entities-PredictionArray-15> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </Tfl-Api-Presentation-Entities-PredictionArray-15>"
                            }
                        }
                    }
                }
            }
        },
        "/Vehicle/EmissionSurcharge": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Gets the Emissions Surcharge compliance for the Vehicle",
                "description": "Gets the Emissions Surcharge compliance for the Vehicle",
                "operationId": "Vehicle_GetEmissionsSurchargeCompliance",
                "parameters": [
                    {
                        "name": "vrm",
                        "in": "query",
                        "description": "The Vehicle Registration Mark",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": {
                                    "vrm": "string",
                                    "type": "string",
                                    "make": "string",
                                    "model": "string",
                                    "colour": "string",
                                    "compliance": "NotAvailable"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": {
                                    "vrm": "string",
                                    "type": "string",
                                    "make": "string",
                                    "model": "string",
                                    "colour": "string",
                                    "compliance": "NotAvailable"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.VehicleMatch> <vrm>string</vrm> <type>string</type> <make>string</make> <model>string</model> <colour>string</colour> <compliance>NotAvailable</compliance> </Tfl.Api.Presentation.Entities.VehicleMatch>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.VehicleMatch> <vrm>string</vrm> <type>string</type> <make>string</make> <model>string</model> <colour>string</colour> <compliance>NotAvailable</compliance> </Tfl.Api.Presentation.Entities.VehicleMatch>"
                            }
                        }
                    }
                }
            }
        },
        "/Vehicle/UlezCompliance": {
            "get": {
                "tags": [
                    "Vehicle"
                ],
                "summary": "Gets the Ulez Surcharge compliance for the Vehicle",
                "description": "Gets the Ulez Surcharge compliance for the Vehicle",
                "operationId": "Vehicle_GetUlezCompliance",
                "parameters": [
                    {
                        "name": "vrm",
                        "in": "query",
                        "description": "The Vehicle Registration Mark",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": {
                                    "vrm": "string",
                                    "type": "string",
                                    "make": "string",
                                    "model": "string",
                                    "colour": "string",
                                    "compliance": "NotAvailable"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": {
                                    "vrm": "string",
                                    "type": "string",
                                    "make": "string",
                                    "model": "string",
                                    "colour": "string",
                                    "compliance": "NotAvailable"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.VehicleMatch> <vrm>string</vrm> <type>string</type> <make>string</make> <model>string</model> <colour>string</colour> <compliance>NotAvailable</compliance> </Tfl.Api.Presentation.Entities.VehicleMatch>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.VehicleMatch"
                                },
                                "example": "<Tfl.Api.Presentation.Entities.VehicleMatch> <vrm>string</vrm> <type>string</type> <make>string</make> <model>string</model> <colour>string</colour> <compliance>NotAvailable</compliance> </Tfl.Api.Presentation.Entities.VehicleMatch>"
                            }
                        }
                    }
                }
            }
        },
        "/*": {
            "get": {
                "summary": "WildCard",
                "description": "GET All",
                "operationId": "wildcard",
                "responses": {
                    "200": {
                        "description": null
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Tfl.Api.Presentation.Entities.AccidentStats.AccidentDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    },
                    "location": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "borough": {
                        "type": "string"
                    },
                    "casualties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AccidentStats.Casualty"
                        }
                    },
                    "vehicles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AccidentStats.Vehicle"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.AccidentStats.Casualty": {
                "type": "object",
                "properties": {
                    "age": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "class": {
                        "type": "string"
                    },
                    "severity": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "ageBand": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.AccidentStats.Vehicle": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.AccidentStats.AccidentStatsOrderedSummary": {
                "type": "object",
                "properties": {
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "borough": {
                        "type": "string"
                    },
                    "accidents": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "System.Object": {
                "type": "object"
            },
            "Tfl.Api.Presentation.Entities.Place": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier."
                    },
                    "url": {
                        "type": "string",
                        "description": "The unique location of this resource."
                    },
                    "commonName": {
                        "type": "string",
                        "description": "A human readable name."
                    },
                    "distance": {
                        "type": "number",
                        "description": "The distance of the place from its search point, if this is the result\r\n            of a geographical search, otherwise zero.",
                        "format": "double"
                    },
                    "placeType": {
                        "type": "string",
                        "description": "The type of Place. See /Place/Meta/placeTypes for possible values."
                    },
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AdditionalProperties"
                        },
                        "description": "A bag of additional key/value pairs with extra information about this place."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                        }
                    },
                    "childrenUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lat": {
                        "type": "number",
                        "description": "WGS84 latitude of the location.",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "description": "WGS84 longitude of the location.",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.AdditionalProperties": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "sourceSystemKey": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.CycleSuperhighway": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Id"
                    },
                    "label": {
                        "type": "string",
                        "description": "The long label to show on maps when zoomed in"
                    },
                    "labelShort": {
                        "type": "string",
                        "description": "The short label to show on maps"
                    },
                    "geography": {
                        "$ref": "#/components/schemas/System.Data.Spatial.DbGeography"
                    },
                    "segmented": {
                        "type": "boolean",
                        "description": "True if the route is split into segments"
                    },
                    "modified": {
                        "type": "string",
                        "description": "When the data was last updated",
                        "format": "date-time"
                    },
                    "status": {
                        "enum": [
                            "Unknown",
                            "All",
                            "Open",
                            "In Progress",
                            "Planned",
                            "Planned - Subject to feasibility and consultation.",
                            "Not Open"
                        ],
                        "type": "string",
                        "description": "Cycle route status i.e Proposed, Existing etc"
                    },
                    "routeType": {
                        "enum": [
                            "Unknown",
                            "All",
                            "Cycle Superhighways",
                            "Quietways",
                            "Cycleways",
                            "Mini-Hollands",
                            "Central London Grid"
                        ],
                        "type": "string",
                        "description": "Type of cycle route e.g CycleSuperhighways, Quietways, MiniHollands etc"
                    }
                },
                "description": ""
            },
            "System.Data.Spatial.DbGeography": {
                "type": "object",
                "properties": {
                    "geography": {
                        "$ref": "#/components/schemas/System.Data.Spatial.DbGeographyWellKnownValue"
                    }
                }
            },
            "System.Data.Spatial.DbGeographyWellKnownValue": {
                "type": "object",
                "properties": {
                    "coordinateSystemId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "wellKnownText": {
                        "type": "string"
                    },
                    "wellKnownBinary": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.Fare": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "passengerType": {
                        "type": "string"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ticketTime": {
                        "type": "string"
                    },
                    "ticketType": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "string"
                    },
                    "cap": {
                        "type": "number",
                        "format": "double"
                    },
                    "description": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.FaresSection": {
                "type": "object",
                "properties": {
                    "header": {
                        "type": "string"
                    },
                    "index": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "journey": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.Journey"
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.FareDetails"
                        }
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Message"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.Journey": {
                "type": "object",
                "properties": {
                    "fromStation": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.FareStation"
                    },
                    "toStation": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.FareStation"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.FareDetails": {
                "type": "object",
                "properties": {
                    "boundsId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "passengerType": {
                        "type": "string"
                    },
                    "contactlessPAYGOnlyFare": {
                        "type": "boolean"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "fromStation": {
                        "type": "string"
                    },
                    "toStation": {
                        "type": "string"
                    },
                    "via": {
                        "type": "string"
                    },
                    "routeCode": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "routeDescription": {
                        "type": "string"
                    },
                    "validatorInformation": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "specialFare": {
                        "type": "boolean"
                    },
                    "throughFare": {
                        "type": "boolean"
                    },
                    "isTour": {
                        "type": "boolean"
                    },
                    "ticketsAvailable": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.Ticket"
                        }
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Message"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Message": {
                "type": "object",
                "properties": {
                    "bulletOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "header": {
                        "type": "boolean"
                    },
                    "messageText": {
                        "type": "string"
                    },
                    "linkText": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.FareStation": {
                "type": "object",
                "properties": {
                    "atcoCode": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "fareCategory": {
                        "enum": [
                            "Cash",
                            "Oyster",
                            "Contactless",
                            "ContactlessOnly",
                            "All"
                        ],
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.Ticket": {
                "type": "object",
                "properties": {
                    "passengerType": {
                        "type": "string"
                    },
                    "ticketType": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.TicketType"
                    },
                    "ticketTime": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.TicketTime"
                    },
                    "cost": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Message"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.TicketType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.TicketTime": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.FareBounds": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "via": {
                        "type": "string"
                    },
                    "routeCode": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isPopularFare": {
                        "type": "boolean"
                    },
                    "isPopularTravelCard": {
                        "type": "boolean"
                    },
                    "isTour": {
                        "type": "boolean"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Message"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.FaresPeriod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "viewableDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "isFuture": {
                        "type": "boolean"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.FaresMode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.PassengerType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Coordinate": {
                "type": "object",
                "properties": {
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "easting": {
                        "type": "number",
                        "format": "double"
                    },
                    "northing": {
                        "type": "number",
                        "format": "double"
                    },
                    "xCoord": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "yCoord": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.GeoCodeSearchMatch": {
                "type": "object",
                "properties": {
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The type of the place e.g. \"street_address\""
                    },
                    "address": {
                        "type": "string",
                        "description": "A string describing the formatted address of the place. Adds additional context to the place's Name."
                    },
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Mode": {
                "type": "object",
                "properties": {
                    "isTflService": {
                        "type": "boolean"
                    },
                    "isFarePaying": {
                        "type": "boolean"
                    },
                    "isScheduledService": {
                        "type": "boolean"
                    },
                    "modeName": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.ItineraryResult": {
                "type": "object",
                "properties": {
                    "journeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.Journey"
                        }
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                        }
                    },
                    "cycleHireDockingStationData": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyPlannerCycleHireDockingStationData"
                    },
                    "stopMessages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recommendedMaxAgeMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "searchCriteria": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.SearchCriteria"
                    },
                    "journeyVector": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyVector"
                    }
                },
                "description": "A DTO representing a list of possible journeys."
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.Journey": {
                "type": "object",
                "properties": {
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "arrivalDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "legs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.Leg"
                        }
                    },
                    "fare": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyFare"
                    }
                },
                "description": "Object that represents an end to end journey (see schematic)."
            },
            "Tfl.Api.Presentation.Entities.Line": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "modeName": {
                        "type": "string"
                    },
                    "disruptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lineStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineStatus"
                        }
                    },
                    "routeSections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.MatchedRoute"
                        }
                    },
                    "serviceTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineServiceTypeInfo"
                        }
                    },
                    "crowding": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Crowding"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyPlannerCycleHireDockingStationData": {
                "type": "object",
                "properties": {
                    "originNumberOfBikes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "destinationNumberOfBikes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "originNumberOfEmptySlots": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "destinationNumberOfEmptySlots": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "originId": {
                        "type": "string"
                    },
                    "destinationId": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.SearchCriteria": {
                "type": "object",
                "properties": {
                    "dateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateTimeType": {
                        "enum": [
                            "Arriving",
                            "Departing"
                        ],
                        "type": "string"
                    },
                    "timeAdjustments": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustments"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyVector": {
                "type": "object",
                "properties": {
                    "from": {
                        "type": "string"
                    },
                    "to": {
                        "type": "string"
                    },
                    "via": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.Leg": {
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "speed": {
                        "type": "string"
                    },
                    "instruction": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Instruction"
                    },
                    "obstacles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.Obstacle"
                        }
                    },
                    "departureTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "arrivalTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "departurePoint": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Point"
                    },
                    "arrivalPoint": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Point"
                    },
                    "path": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.Path"
                    },
                    "routeOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.RouteOption"
                        }
                    },
                    "mode": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Identifier"
                    },
                    "disruptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                        }
                    },
                    "plannedWorks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.PlannedWork"
                        }
                    },
                    "distance": {
                        "type": "number",
                        "format": "double"
                    },
                    "isDisrupted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "hasFixedLocations": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyFare": {
                "type": "object",
                "properties": {
                    "totalCost": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.Fare"
                        }
                    },
                    "caveats": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.FareCaveat"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Disruption": {
                "type": "object",
                "properties": {
                    "category": {
                        "enum": [
                            "Undefined",
                            "RealTime",
                            "PlannedWork",
                            "Information",
                            "Event",
                            "Crowding",
                            "StatusAlert"
                        ],
                        "type": "string",
                        "description": "Gets or sets the category of this dispruption."
                    },
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the disruption type of this dispruption."
                    },
                    "categoryDescription": {
                        "type": "string",
                        "description": "Gets or sets the description of the category."
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description of this disruption."
                    },
                    "summary": {
                        "type": "string",
                        "description": "Gets or sets the summary of this disruption."
                    },
                    "additionalInfo": {
                        "type": "string",
                        "description": "Gets or sets the additionaInfo of this disruption."
                    },
                    "created": {
                        "type": "string",
                        "description": "Gets or sets the date/time when this disruption was created.",
                        "format": "date-time"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Gets or sets the date/time when this disruption was last updated.",
                        "format": "date-time"
                    },
                    "affectedRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSection"
                        },
                        "description": "Gets or sets the routes affected by this disruption"
                    },
                    "affectedStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                        },
                        "description": "Gets or sets the stops affected by this disruption"
                    },
                    "closureText": {
                        "type": "string",
                        "description": "Text describing the closure type"
                    }
                },
                "description": "Represents a disruption to a route within the transport network."
            },
            "Tfl.Api.Presentation.Entities.LineStatus": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lineId": {
                        "type": "string"
                    },
                    "statusSeverity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "statusSeverityDescription": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validityPeriods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ValidityPeriod"
                        }
                    },
                    "disruption": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.MatchedRoute": {
                "type": "object",
                "properties": {
                    "routeCode": {
                        "type": "string",
                        "description": "The route code"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name such as \"72\""
                    },
                    "direction": {
                        "type": "string",
                        "description": "Inbound or Outbound"
                    },
                    "originationName": {
                        "type": "string",
                        "description": "The name of the Origin StopPoint"
                    },
                    "destinationName": {
                        "type": "string",
                        "description": "The name of the Destination StopPoint"
                    },
                    "originator": {
                        "type": "string",
                        "description": "The Id (NaPTAN code) of the Origin StopPoint"
                    },
                    "destination": {
                        "type": "string",
                        "description": "The Id (NaPTAN code) or the Destination StopPoint"
                    },
                    "serviceType": {
                        "type": "string",
                        "description": "Regular or Night"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "The DateTime that the Service containing this Route is valid until.",
                        "format": "date-time"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "The DateTime that the Service containing this Route is valid from.",
                        "format": "date-time"
                    }
                },
                "description": "Description of a Route used in Route search results."
            },
            "Tfl.Api.Presentation.Entities.LineServiceTypeInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Crowding": {
                "type": "object",
                "properties": {
                    "passengerFlows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PassengerFlow"
                        },
                        "description": "Busiest times at a station (static information)"
                    },
                    "trainLoadings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TrainLoading"
                        },
                        "description": "Train Loading on a scale 1-6, 1 being \"Very quiet\" and 6 being \"Exceptionally busy\" (static information)"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustments": {
                "type": "object",
                "properties": {
                    "earliest": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustment"
                    },
                    "earlier": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustment"
                    },
                    "later": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustment"
                    },
                    "latest": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustment"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Instruction": {
                "type": "object",
                "properties": {
                    "summary": {
                        "type": "string"
                    },
                    "detailed": {
                        "type": "string"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.InstructionStep"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.Obstacle": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "incline": {
                        "type": "string"
                    },
                    "stopId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "position": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Point": {
                "type": "object",
                "properties": {
                    "lat": {
                        "type": "number",
                        "description": "WGS84 latitude of the location.",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "description": "WGS84 longitude of the location.",
                        "format": "double"
                    }
                },
                "description": "Represents a point located at a latitude and longitude using the WGS84 co-ordinate system."
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.Path": {
                "type": "object",
                "properties": {
                    "lineString": {
                        "type": "string"
                    },
                    "stopPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Identifier"
                        }
                    },
                    "elevation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Common.JourneyPlanner.JpElevation"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.RouteOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Id of the route"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name such as \"72\""
                    },
                    "directions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lineIdentifier": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Identifier"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Identifier": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "crowding": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Crowding"
                    },
                    "routeType": {
                        "enum": [
                            "Unknown",
                            "All",
                            "Cycle Superhighways",
                            "Quietways",
                            "Cycleways",
                            "Mini-Hollands",
                            "Central London Grid"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "Unknown",
                            "All",
                            "Open",
                            "In Progress",
                            "Planned",
                            "Planned - Subject to feasibility and consultation.",
                            "Not Open"
                        ],
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.PlannedWork": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "createdDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastUpdateDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.Fare": {
                "type": "object",
                "properties": {
                    "lowZone": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "highZone": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cost": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "chargeProfileName": {
                        "type": "string"
                    },
                    "isHopperFare": {
                        "type": "boolean"
                    },
                    "chargeLevel": {
                        "type": "string"
                    },
                    "peak": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offPeak": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "taps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.FareTap"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.FareCaveat": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RouteSection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Id of the route"
                    },
                    "lineId": {
                        "type": "string",
                        "description": "The Id of the Line"
                    },
                    "routeCode": {
                        "type": "string",
                        "description": "The route code"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name such as \"72\""
                    },
                    "lineString": {
                        "type": "string",
                        "description": "The co-ordinates of the route's path as a geoJSON lineString"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Inbound or Outbound"
                    },
                    "originationName": {
                        "type": "string",
                        "description": "The name of the Origin StopPoint"
                    },
                    "destinationName": {
                        "type": "string",
                        "description": "The name of the Destination StopPoint"
                    },
                    "validTo": {
                        "type": "string",
                        "description": "The DateTime that the Service containing this Route is valid until.",
                        "format": "date-time"
                    },
                    "validFrom": {
                        "type": "string",
                        "description": "The DateTime that the Service containing this Route is valid from.",
                        "format": "date-time"
                    },
                    "routeSectionNaptanEntrySequence": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSectionNaptanEntrySequence"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.StopPoint": {
                "type": "object",
                "properties": {
                    "naptanId": {
                        "type": "string"
                    },
                    "platformName": {
                        "type": "string"
                    },
                    "indicator": {
                        "type": "string",
                        "description": "The indicator of the stop point e.g. \"Stop K\""
                    },
                    "stopLetter": {
                        "type": "string",
                        "description": "The stop letter, if it could be cleansed from the Indicator e.g. \"K\""
                    },
                    "modes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "icsCode": {
                        "type": "string"
                    },
                    "smsCode": {
                        "type": "string"
                    },
                    "stopType": {
                        "type": "string"
                    },
                    "stationNaptan": {
                        "type": "string"
                    },
                    "accessibilitySummary": {
                        "type": "string"
                    },
                    "hubNaptanCode": {
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Identifier"
                        }
                    },
                    "lineGroup": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineGroup"
                        }
                    },
                    "lineModeGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineModeGroup"
                        }
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "naptanMode": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "A unique identifier."
                    },
                    "url": {
                        "type": "string",
                        "description": "The unique location of this resource."
                    },
                    "commonName": {
                        "type": "string",
                        "description": "A human readable name."
                    },
                    "distance": {
                        "type": "number",
                        "description": "The distance of the place from its search point, if this is the result\r\n            of a geographical search, otherwise zero.",
                        "format": "double"
                    },
                    "placeType": {
                        "type": "string",
                        "description": "The type of Place. See /Place/Meta/placeTypes for possible values."
                    },
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AdditionalProperties"
                        },
                        "description": "A bag of additional key/value pairs with extra information about this place."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                        }
                    },
                    "childrenUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lat": {
                        "type": "number",
                        "description": "WGS84 latitude of the location.",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "description": "WGS84 longitude of the location.",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.ValidityPeriod": {
                "type": "object",
                "properties": {
                    "fromDate": {
                        "type": "string",
                        "description": "Gets or sets the start date.",
                        "format": "date-time"
                    },
                    "toDate": {
                        "type": "string",
                        "description": "Gets or sets the end date.",
                        "format": "date-time"
                    },
                    "isNow": {
                        "type": "boolean",
                        "description": "If true is a realtime status rather than planned or info"
                    }
                },
                "description": "Represents a period for which a planned works is valid."
            },
            "Tfl.Api.Presentation.Entities.PassengerFlow": {
                "type": "object",
                "properties": {
                    "timeSlice": {
                        "type": "string",
                        "description": "Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc."
                    },
                    "value": {
                        "type": "integer",
                        "description": "Count of passenger flow towards a platform",
                        "format": "int32"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.TrainLoading": {
                "type": "object",
                "properties": {
                    "line": {
                        "type": "string",
                        "description": "The Line Name e.g. \"Victoria\""
                    },
                    "lineDirection": {
                        "type": "string",
                        "description": "Direction of the Line e.g. NB, SB, WB etc."
                    },
                    "platformDirection": {
                        "type": "string",
                        "description": "Direction displayed on the platform e.g. NB, SB, WB etc."
                    },
                    "direction": {
                        "type": "string",
                        "description": "Direction in regards to Journey Planner i.e. inbound or outbound"
                    },
                    "naptanTo": {
                        "type": "string",
                        "description": "Naptan of the adjacent station"
                    },
                    "timeSlice": {
                        "type": "string",
                        "description": "Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc."
                    },
                    "value": {
                        "type": "integer",
                        "description": "Scale between 1-6, \r\n             1 = Very quiet, 2 = Quiet, 3 = Fairly busy, 4 = Busy, 5 = Very busy, 6 = Exceptionally busy",
                        "format": "int32"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustment": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string"
                    },
                    "time": {
                        "type": "string"
                    },
                    "timeIs": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.InstructionStep": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "turnDirection": {
                        "type": "string"
                    },
                    "streetName": {
                        "type": "string"
                    },
                    "distance": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cumulativeDistance": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "skyDirection": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "skyDirectionDescription": {
                        "enum": [
                            "North",
                            "NorthEast",
                            "East",
                            "SouthEast",
                            "South",
                            "SouthWest",
                            "West",
                            "NorthWest"
                        ],
                        "type": "string"
                    },
                    "cumulativeTravelTime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "pathAttribute": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PathAttribute"
                    },
                    "descriptionHeading": {
                        "type": "string"
                    },
                    "trackType": {
                        "enum": [
                            "CycleSuperHighway",
                            "CanalTowpath",
                            "QuietRoad",
                            "ProvisionForCyclists",
                            "BusyRoads",
                            "None",
                            "PushBike",
                            "Quietway"
                        ],
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Common.JourneyPlanner.JpElevation": {
                "type": "object",
                "properties": {
                    "distance": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startLat": {
                        "type": "number",
                        "format": "double"
                    },
                    "startLon": {
                        "type": "number",
                        "format": "double"
                    },
                    "endLat": {
                        "type": "number",
                        "format": "double"
                    },
                    "endLon": {
                        "type": "number",
                        "format": "double"
                    },
                    "heightFromPreviousPoint": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gradient": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.FareTap": {
                "type": "object",
                "properties": {
                    "atcoCode": {
                        "type": "string"
                    },
                    "tapDetails": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.JourneyPlanner.FareTapDetails"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RouteSectionNaptanEntrySequence": {
                "type": "object",
                "properties": {
                    "ordinal": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stopPoint": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.LineGroup": {
                "type": "object",
                "properties": {
                    "naptanIdReference": {
                        "type": "string"
                    },
                    "stationAtcoCode": {
                        "type": "string"
                    },
                    "lineIdentifier": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.LineModeGroup": {
                "type": "object",
                "properties": {
                    "modeName": {
                        "type": "string"
                    },
                    "lineIdentifier": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.PathAttribute": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.JourneyPlanner.FareTapDetails": {
                "type": "object",
                "properties": {
                    "modeType": {
                        "type": "string"
                    },
                    "validationType": {
                        "type": "string"
                    },
                    "hostDeviceType": {
                        "type": "string"
                    },
                    "busRouteId": {
                        "type": "string"
                    },
                    "nationalLocationCode": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tapTimestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.StatusSeverity": {
                "type": "object",
                "properties": {
                    "modeName": {
                        "type": "string"
                    },
                    "severityLevel": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RouteSequence": {
                "type": "object",
                "properties": {
                    "lineId": {
                        "type": "string"
                    },
                    "lineName": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "isOutboundOnly": {
                        "type": "boolean"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "lineStrings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "stations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.MatchedStop"
                        }
                    },
                    "stopPointSequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointSequence"
                        }
                    },
                    "orderedLineRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.OrderedRoute"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.MatchedStop": {
                "type": "object",
                "properties": {
                    "routeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "stationId": {
                        "type": "string"
                    },
                    "icsId": {
                        "type": "string"
                    },
                    "topMostParentId": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "towards": {
                        "type": "string"
                    },
                    "modes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "stopType": {
                        "type": "string"
                    },
                    "stopLetter": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    },
                    "accessibilitySummary": {
                        "type": "string"
                    },
                    "hasDisruption": {
                        "type": "boolean"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Identifier"
                        }
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.StopPointSequence": {
                "type": "object",
                "properties": {
                    "lineId": {
                        "type": "string"
                    },
                    "lineName": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "branchId": {
                        "type": "integer",
                        "description": "The id of this branch.",
                        "format": "int32"
                    },
                    "nextBranchIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "The ids of the next branch(es) in the sequence. Note that the next and previous branch id can be\r\n            identical in the case of a looped route e.g. the Circle line."
                    },
                    "prevBranchIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "The ids of the previous branch(es) in the sequence. Note that the next and previous branch id can be\r\n            identical in the case of a looped route e.g. the Circle line."
                    },
                    "stopPoint": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.MatchedStop"
                        }
                    },
                    "serviceType": {
                        "enum": [
                            "Regular",
                            "Night"
                        ],
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.OrderedRoute": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "naptanIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceType": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Common.DateRange": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RouteSearchResponse": {
                "type": "object",
                "properties": {
                    "input": {
                        "type": "string"
                    },
                    "searchMatches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RouteSearchMatch"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RouteSearchMatch": {
                "type": "object",
                "properties": {
                    "lineId": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "lineName": {
                        "type": "string"
                    },
                    "lineRouteSection": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineRouteSection"
                        }
                    },
                    "matchedRouteSections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.MatchedRouteSections"
                        }
                    },
                    "matchedStops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.MatchedStop"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.LineRouteSection": {
                "type": "object",
                "properties": {
                    "routeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "fromStation": {
                        "type": "string"
                    },
                    "toStation": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "vehicleDestinationText": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.MatchedRouteSections": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.TimetableResponse": {
                "type": "object",
                "properties": {
                    "lineId": {
                        "type": "string"
                    },
                    "lineName": {
                        "type": "string"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "pdfUrl": {
                        "type": "string"
                    },
                    "stations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.MatchedStop"
                        }
                    },
                    "stops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.MatchedStop"
                        }
                    },
                    "timetable": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Timetable"
                    },
                    "disambiguation": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Timetables.Disambiguation"
                    },
                    "statusErrorMessage": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Timetable": {
                "type": "object",
                "properties": {
                    "departureStopId": {
                        "type": "string"
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TimetableRoute"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Timetables.Disambiguation": {
                "type": "object",
                "properties": {
                    "disambiguationOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Timetables.DisambiguationOption"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.TimetableRoute": {
                "type": "object",
                "properties": {
                    "stationIntervals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StationInterval"
                        }
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Schedule"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Timetables.DisambiguationOption": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.StationInterval": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "intervals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Interval"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Schedule": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "knownJourneys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.KnownJourney"
                        }
                    },
                    "firstJourney": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.KnownJourney"
                    },
                    "lastJourney": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.KnownJourney"
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Period"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Interval": {
                "type": "object",
                "properties": {
                    "stopId": {
                        "type": "string"
                    },
                    "timeToArrival": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.KnownJourney": {
                "type": "object",
                "properties": {
                    "hour": {
                        "type": "string"
                    },
                    "minute": {
                        "type": "string"
                    },
                    "intervalId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Period": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Normal",
                            "FrequencyHours",
                            "FrequencyMinutes",
                            "Unknown"
                        ],
                        "type": "string"
                    },
                    "fromTime": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TwentyFourHourClockTime"
                    },
                    "toTime": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.TwentyFourHourClockTime"
                    },
                    "frequency": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ServiceFrequency"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.TwentyFourHourClockTime": {
                "type": "object",
                "properties": {
                    "hour": {
                        "type": "string"
                    },
                    "minute": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.ServiceFrequency": {
                "type": "object",
                "properties": {
                    "lowestFrequency": {
                        "type": "number",
                        "format": "double"
                    },
                    "highestFrequency": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Prediction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identitier for the prediction"
                    },
                    "operationType": {
                        "type": "integer",
                        "description": "The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)",
                        "format": "int32"
                    },
                    "vehicleId": {
                        "type": "string",
                        "description": "The actual vehicle in transit (for train modes, the leading car of the rolling set)"
                    },
                    "naptanId": {
                        "type": "string",
                        "description": "Identifier for the prediction"
                    },
                    "stationName": {
                        "type": "string",
                        "description": "Station name"
                    },
                    "lineId": {
                        "type": "string",
                        "description": "Unique identifier for the Line"
                    },
                    "lineName": {
                        "type": "string",
                        "description": "Line Name"
                    },
                    "platformName": {
                        "type": "string",
                        "description": "Platform name (for bus, this is the stop letter)"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Direction (unified to inbound/outbound)"
                    },
                    "bearing": {
                        "type": "string",
                        "description": "Bearing (between 0 to 359)"
                    },
                    "destinationNaptanId": {
                        "type": "string",
                        "description": "Naptan Identifier for the prediction's destination"
                    },
                    "destinationName": {
                        "type": "string",
                        "description": "Name of the destination"
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)",
                        "format": "date-time"
                    },
                    "timeToStation": {
                        "type": "integer",
                        "description": "Prediction of the Time to station in seconds",
                        "format": "int32"
                    },
                    "currentLocation": {
                        "type": "string",
                        "description": "The current location of the vehicle."
                    },
                    "towards": {
                        "type": "string",
                        "description": "Routing information or other descriptive text about the path of the vehicle towards the destination"
                    },
                    "expectedArrival": {
                        "type": "string",
                        "description": "The expected arrival time of the vehicle at the stop/station",
                        "format": "date-time"
                    },
                    "timeToLive": {
                        "type": "string",
                        "description": "The expiry time for the prediction",
                        "format": "date-time"
                    },
                    "modeName": {
                        "type": "string",
                        "description": "The mode name of the station/line the prediction relates to"
                    },
                    "timing": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PredictionTiming"
                    }
                },
                "description": "DTO to capture the prediction details"
            },
            "Tfl.Api.Presentation.Entities.PredictionTiming": {
                "type": "object",
                "properties": {
                    "countdownServerAdjustment": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "insert": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "read": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sent": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "received": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.ActiveServiceType": {
                "type": "object",
                "properties": {
                    "mode": {
                        "type": "string"
                    },
                    "serviceType": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.NetworkStatus": {
                "type": "object",
                "properties": {
                    "operator": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "statusLevel": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Represent travel network status"
            },
            "Tfl.Api.Presentation.Entities.CarParkOccupancy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "bays": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Bay"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "carParkDetailsUrl": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Bay": {
                "type": "object",
                "properties": {
                    "bayType": {
                        "type": "string"
                    },
                    "bayCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "free": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occupied": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "",
                        "format": "int32"
                    },
                    "sourceSystemPlaceId": {
                        "type": "string",
                        "description": ""
                    },
                    "status": {
                        "type": "string",
                        "description": ""
                    }
                },
                "description": ""
            },
            "Tfl.Api.Presentation.Entities.BikePointOccupancy": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the bike point such as BikePoints_1"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name / Common name of the bike point"
                    },
                    "bikesCount": {
                        "type": "integer",
                        "description": "Total bike counts",
                        "format": "int32"
                    },
                    "emptyDocks": {
                        "type": "integer",
                        "description": "Empty docks",
                        "format": "int32"
                    },
                    "totalDocks": {
                        "type": "integer",
                        "description": "Total docks available",
                        "format": "int32"
                    }
                },
                "description": "Bike point occupancy"
            },
            "Tfl.Api.Presentation.Entities.PlaceCategory": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "availableKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.SearchResponse": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "matches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.SearchMatch"
                        }
                    },
                    "maxScore": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.SearchMatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Common.PostcodeInput": {
                "type": "object",
                "properties": {
                    "postcode": {
                        "pattern": "^(([gG][iI][rR] {0,}0[aA]{2})|((([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y]?[0-9][0-9]?)|(([a-pr-uwyzA-PR-UWYZ][0-9][a-hjkstuwA-HJKSTUW])|([a-pr-uwyzA-PR-UWYZ][a-hk-yA-HK-Y][0-9][abehmnprv-yABEHMNPRV-Y]))) {0,}[0-9][abd-hjlnp-uw-zABD-HJLNP-UW-Z]{2}))$",
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.PlacePolygon": {
                "type": "object",
                "properties": {
                    "geoPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Common.GeoPoint"
                        }
                    },
                    "commonName": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Common.GeoPoint": {
                "required": [
                    "lat",
                    "lon"
                ],
                "type": "object",
                "properties": {
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Common.PlaceGeo": {
                "type": "object",
                "properties": {
                    "swLat": {
                        "type": "number",
                        "format": "double"
                    },
                    "swLon": {
                        "type": "number",
                        "format": "double"
                    },
                    "neLat": {
                        "type": "number",
                        "format": "double"
                    },
                    "neLon": {
                        "type": "number",
                        "format": "double"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RoadCorridor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The Id of the Corridor e.g. \"A406\""
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the Corridor e.g. \"North Circular (A406)\". This\r\n            may be identical to the Id."
                    },
                    "group": {
                        "type": "string",
                        "description": "The group name of the Corridor e.g. \"Central London\". Most corridors are not grouped, in which case this field can be null."
                    },
                    "statusSeverity": {
                        "type": "string",
                        "description": "Standard multi-mode status severity code"
                    },
                    "statusSeverityDescription": {
                        "type": "string",
                        "description": "Description of the status severity as applied to RoadCorridors"
                    },
                    "bounds": {
                        "type": "string",
                        "description": "The Bounds of the Corridor, given by the south-east followed by the north-west co-ordinate\r\n            pair in geoJSON format e.g. \"[[-1.241531,51.242151],[1.641223,53.765721]]\""
                    },
                    "envelope": {
                        "type": "string",
                        "description": "The Envelope of the Corridor, given by the corner co-ordinates of a rectangular (four-point) polygon\r\n            in geoJSON format e.g. \"[[-1.241531,51.242151],[-1.241531,53.765721],[1.641223,53.765721],[1.641223,51.242151]]\""
                    },
                    "statusAggregationStartDate": {
                        "type": "string",
                        "description": "The start of the period over which status has been aggregated, or null if this is the current corridor status.",
                        "format": "date-time"
                    },
                    "statusAggregationEndDate": {
                        "type": "string",
                        "description": "The end of the period over which status has been aggregated, or null if this is the current corridor status.",
                        "format": "date-time"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL to retrieve this Corridor."
                    }
                }
            },
            "Tfl.Api.Common.DateRangeNullable": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RoadDisruption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the road disruption"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL to retrieve this road disruption"
                    },
                    "point": {
                        "type": "string",
                        "description": "Latitude and longitude (WGS84) of the centroid of the disruption, stored in a geoJSON-formatted string."
                    },
                    "severity": {
                        "type": "string",
                        "description": "A description of the severity of the disruption."
                    },
                    "ordinal": {
                        "type": "integer",
                        "description": "An ordinal of the disruption based on severity, level of interest and corridor.",
                        "format": "int32"
                    },
                    "category": {
                        "type": "string",
                        "description": "Describes the nature of disruption e.g. Traffic Incidents, Works"
                    },
                    "subCategory": {
                        "type": "string",
                        "description": "Describes the sub-category of disruption e.g. Collapsed Manhole, Abnormal Load"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Full text of comments describing the disruption, including details of any road closures and diversions, where appropriate."
                    },
                    "currentUpdate": {
                        "type": "string",
                        "description": "Text of the most recent update from the LSTCC on the state of the\r\n             disruption, including the current traffic impact and any advice to\r\n             road users."
                    },
                    "currentUpdateDateTime": {
                        "type": "string",
                        "description": "The time when the last CurrentUpdate description was recorded, \r\n            or null if no CurrentUpdate has been applied.",
                        "format": "date-time"
                    },
                    "corridorIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Ids of affected corridors, if any."
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "The date and time which the disruption started. For a planned disruption (i.e. planned road works) this date will be in the future.\r\n            For unplanned disruptions, this will default to the date on which the disruption was first recorded, but may be adjusted by the operator.",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "The date and time on which the disruption ended. For planned disruptions, this date will have a valid value. For unplanned \r\n            disruptions in progress, this field will be omitted.",
                        "format": "date-time"
                    },
                    "lastModifiedTime": {
                        "type": "string",
                        "description": "The date and time on which the disruption was last modified in the system. This information can reliably be used by a developer to quickly\r\n            compare two instances of the same disruption to determine if it has been changed.",
                        "format": "date-time"
                    },
                    "levelOfInterest": {
                        "type": "string",
                        "description": "This describes the level of potential impact on traffic operations of the disruption. \r\n            High = e.g. a one-off disruption on a major or high profile route which will require a high level of operational attention \r\n            Medium = This is the default value \r\n            Low = e.g. a frequently occurring disruption which is well known"
                    },
                    "location": {
                        "type": "string",
                        "description": "Main road name / number (borough) or preset area name where the disruption is located. This might be useful for a map popup where space is limited."
                    },
                    "status": {
                        "type": "string",
                        "description": "This describes the status of the disruption.  \r\n            Active = currently in progress \r\n            Active Long Term = currently in progress and long term\r\n            Scheduled = scheduled to start within the next 180 days\r\n            Recurring Works = planned maintenance works that follow a regular routine or pattern and whose next occurrence is to start within the next 180 days.\r\n            Recently Cleared = recently cleared in the last 24 hours\r\n            Note that the status of Scheduled or Recurring Works disruptions will change to Active when they start, and will change status again when they end."
                    },
                    "geography": {
                        "$ref": "#/components/schemas/System.Data.Spatial.DbGeography"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/System.Data.Spatial.DbGeography"
                    },
                    "streets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Street"
                        },
                        "description": "A collection of zero or more streets affected by the disruption."
                    },
                    "isProvisional": {
                        "type": "boolean",
                        "description": "True if the disruption is planned on a future date that is open to change"
                    },
                    "hasClosures": {
                        "type": "boolean",
                        "description": "True if any of the affected Streets have a \"Full Closure\" status, false otherwise. A RoadDisruption that has HasClosures is considered a \r\n            Severe or Serious disruption for severity filtering purposes."
                    },
                    "linkText": {
                        "type": "string",
                        "description": "The text of any associated link"
                    },
                    "linkUrl": {
                        "type": "string",
                        "description": "The url of any associated link"
                    },
                    "roadProject": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadProject"
                    },
                    "publishStartDate": {
                        "type": "string",
                        "description": "TDM Additional properties",
                        "format": "date-time"
                    },
                    "publishEndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "timeFrame": {
                        "type": "string"
                    },
                    "roadDisruptionLines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruptionLine"
                        }
                    },
                    "roadDisruptionImpactAreas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruptionImpactArea"
                        }
                    },
                    "recurringSchedules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruptionSchedule"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Street": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Street name"
                    },
                    "closure": {
                        "type": "string",
                        "description": "Type of road closure. Some example values:\r\n            Open = road is open, not blocked, not closed, not restricted. It maybe that the disruption has been moved out of the carriageway.\r\n            Partial Closure = road is partially blocked, closed or restricted. \r\n            Full Closure = road is fully blocked or closed."
                    },
                    "directions": {
                        "type": "string",
                        "description": "The direction of the disruption on the street. Some example values:\r\n            All Directions\r\n            All Approaches\r\n            Clockwise\r\n            Anti-Clockwise\r\n            Northbound\r\n            Eastbound\r\n            Southbound\r\n            Westbound\r\n            Both Directions"
                    },
                    "segments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StreetSegment"
                        },
                        "description": "Geographic description of the sections of this street that are affected."
                    },
                    "sourceSystemId": {
                        "type": "integer",
                        "description": "The ID from the source system of the disruption that this street belongs to.",
                        "format": "int64"
                    },
                    "sourceSystemKey": {
                        "type": "string",
                        "description": "The key of the source system of the disruption that this street belongs to."
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RoadProject": {
                "type": "object",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "schemeName": {
                        "type": "string"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "projectDescription": {
                        "type": "string"
                    },
                    "projectPageUrl": {
                        "type": "string"
                    },
                    "consultationPageUrl": {
                        "type": "string"
                    },
                    "consultationStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "consultationEndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "constructionStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "constructionEndDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "boroughsBenefited": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cycleSuperhighwayId": {
                        "type": "string"
                    },
                    "phase": {
                        "enum": [
                            "Unscoped",
                            "Concept",
                            "ConsultationEnded",
                            "Consultation",
                            "Construction",
                            "Complete"
                        ],
                        "type": "string"
                    },
                    "contactName": {
                        "type": "string"
                    },
                    "contactEmail": {
                        "type": "string"
                    },
                    "externalPageUrl": {
                        "type": "string"
                    },
                    "projectSummaryPageUrl": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RoadDisruptionLine": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "roadDisruptionId": {
                        "type": "string"
                    },
                    "isDiversion": {
                        "type": "boolean"
                    },
                    "multiLineString": {
                        "$ref": "#/components/schemas/System.Data.Spatial.DbGeography"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RoadDisruptionImpactArea": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "roadDisruptionId": {
                        "type": "string"
                    },
                    "polygon": {
                        "$ref": "#/components/schemas/System.Data.Spatial.DbGeography"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.RoadDisruptionSchedule": {
                "type": "object",
                "properties": {
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.StreetSegment": {
                "type": "object",
                "properties": {
                    "toid": {
                        "type": "string",
                        "description": "A 16 digit unique integer identifying a OS ITN (Ordnance Survey Integrated Transport Network) road link."
                    },
                    "lineString": {
                        "type": "string",
                        "description": "geoJSON formatted LineString containing two latitude/longitude (WGS84) pairs that identify the start and end points of the street segment."
                    },
                    "sourceSystemId": {
                        "type": "integer",
                        "description": "The ID from the source system of the disruption that this street belongs to.",
                        "format": "int64"
                    },
                    "sourceSystemKey": {
                        "type": "string",
                        "description": "The key of the source system of the disruption that this street belongs to."
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Redirect": {
                "type": "object",
                "properties": {
                    "shortUrl": {
                        "type": "string"
                    },
                    "longUrl": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.StopPointCategory": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "availableKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.LineServiceType": {
                "type": "object",
                "properties": {
                    "lineName": {
                        "type": "string"
                    },
                    "lineSpecificServiceTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineSpecificServiceType"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.LineSpecificServiceType": {
                "type": "object",
                "properties": {
                    "serviceType": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineServiceTypeInfo"
                    },
                    "stopServesServiceType": {
                        "type": "boolean"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.ArrivalDeparture": {
                "type": "object",
                "properties": {
                    "platformName": {
                        "type": "string",
                        "description": "Platform name (for bus, this is the stop letter)"
                    },
                    "destinationNaptanId": {
                        "type": "string",
                        "description": "Naptan Identifier for the prediction's destination"
                    },
                    "destinationName": {
                        "type": "string",
                        "description": "Name of the destination"
                    },
                    "naptanId": {
                        "type": "string",
                        "description": "Identifier for the prediction"
                    },
                    "stationName": {
                        "type": "string",
                        "description": "Station name"
                    },
                    "estimatedTimeOfArrival": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "scheduledTimeOfArrival": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "estimatedTimeOfDeparture": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "scheduledTimeOfDeparture": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "minutesAndSecondsToArrival": {
                        "type": "string",
                        "description": "Estimated time of arrival"
                    },
                    "minutesAndSecondsToDeparture": {
                        "type": "string",
                        "description": "Estimated time of arrival"
                    },
                    "cause": {
                        "type": "string",
                        "description": "Reason for cancellation or delay"
                    },
                    "departureStatus": {
                        "enum": [
                            "OnTime",
                            "Delayed",
                            "Cancelled",
                            "NotStoppingAtStation"
                        ],
                        "type": "string",
                        "description": "Status of departure"
                    },
                    "timing": {
                        "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PredictionTiming"
                    }
                },
                "description": "DTO to capture the prediction details"
            },
            "Tfl.Api.Presentation.Entities.StopPointRouteSection": {
                "type": "object",
                "properties": {
                    "naptanId": {
                        "type": "string"
                    },
                    "lineId": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "routeSectionName": {
                        "type": "string"
                    },
                    "lineString": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "vehicleDestinationText": {
                        "type": "string"
                    },
                    "destinationName": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.DisruptedPoint": {
                "type": "object",
                "properties": {
                    "atcoCode": {
                        "type": "string"
                    },
                    "fromDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "toDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "stationAtcoCode": {
                        "type": "string"
                    },
                    "appearance": {
                        "type": "string"
                    },
                    "additionalInformation": {
                        "type": "string"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.StopPointsResponse": {
                "type": "object",
                "properties": {
                    "centrePoint": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double"
                        },
                        "description": "The centre latitude/longitude of this list of StopPoints"
                    },
                    "stopPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                        },
                        "description": "Collection of stop points"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "The maximum size of the page in this response i.e. the maximum number of StopPoints",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of StopPoints available across all pages",
                        "format": "int32"
                    },
                    "page": {
                        "type": "integer",
                        "description": "The index of this page",
                        "format": "int32"
                    }
                },
                "description": "A paged response containing StopPoints"
            },
            "Tfl.Api.Presentation.Entities.Fares.RecommendationResponse": {
                "type": "object",
                "properties": {
                    "recommendations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Fares.Recommendation"
                        }
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.Fares.Recommendation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rule": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rank": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fareType": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    },
                    "ticketType": {
                        "type": "string"
                    },
                    "ticketTime": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string"
                    },
                    "discountCard": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "string"
                    },
                    "priceDescription": {
                        "type": "string"
                    },
                    "priceComparison": {
                        "type": "string"
                    },
                    "recommendedTopUp": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Message"
                        }
                    },
                    "keyFeatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Message"
                        }
                    },
                    "gettingYourTicket": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Message"
                        }
                    },
                    "singleFare": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl.Api.Presentation.Entities.VehicleMatch": {
                "type": "object",
                "properties": {
                    "vrm": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "make": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "colour": {
                        "type": "string"
                    },
                    "compliance": {
                        "enum": [
                            "NotAvailable",
                            "NotCompliant",
                            "Compliant",
                            "Exempt"
                        ],
                        "type": "string"
                    }
                },
                "description": ""
            },
            "Tfl.Api.Common.ApiVersionInfo": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "version": {
                        "type": "string"
                    },
                    "assemblies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AccidentStats.AccidentDetail"
                }
            },
            "Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AccidentStats.AccidentDetail"
                }
            },
            "Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AccidentStats.AccidentDetail"
                }
            },
            "Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.AccidentStats.AccidentDetail"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "LineMetaDisruptionCategoriesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "LineMetaDisruptionCategoriesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "LineMetaDisruptionCategoriesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "LineMetaDisruptionCategoriesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "LineMetaServiceTypesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "LineMetaServiceTypesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "LineMetaServiceTypesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "LineMetaServiceTypesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-8": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-9": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-10": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-11": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-12": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-13": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-14": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-15": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-16": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-17": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-18": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-19": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-20": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-21": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-22": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-23": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-24": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-25": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-26": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-27": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-28": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-29": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-30": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-31": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-32": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-33": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-34": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-LineArray-35": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Line"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptionArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Disruption"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-ActiveServiceTypeArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ActiveServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ActiveServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ActiveServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-ActiveServiceTypeArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ActiveServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-CarParkOccupancyArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-CarParkOccupancyArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-CarParkOccupancyArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-CarParkOccupancyArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.CarParkOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-ChargeConnectorOccupancyArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-BikePointOccupancyArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.BikePointOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-BikePointOccupancyArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.BikePointOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-BikePointOccupancyArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.BikePointOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-BikePointOccupancyArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.BikePointOccupancy"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceCategoryArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.PlaceCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-8": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-9": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-10": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-11": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-12": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-13": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-14": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-15": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-16": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-17": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-18": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-19": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-8": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-9": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-10": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadCorridorArray-11": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadCorridor"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadDisruptionArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadDisruptionArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadDisruptionArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadDisruptionArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                }
            },
            "Tfl-Api-Presentation-Entities-RoadDisruptionArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.RoadDisruption"
                }
            },
            "RoadMetaCategoriesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "RoadMetaCategoriesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "RoadMetaCategoriesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "RoadMetaCategoriesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "Tfl-Api-Presentation-Entities-StatusSeverityArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StatusSeverity"
                }
            },
            "SearchMetaSearchProvidersGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaSearchProvidersGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaSearchProvidersGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaSearchProvidersGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaCategoriesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaCategoriesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaCategoriesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaCategoriesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaSortsGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaSortsGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaSortsGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "SearchMetaSortsGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointCategoryArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointCategoryArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointCategoryArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointCategory"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointCategoryArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointCategory"
                }
            },
            "StopPointMetaStopTypesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "StopPointMetaStopTypesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "StopPointMetaStopTypesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "StopPointMetaStopTypesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-8": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-9": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-10": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-ModeArray-11": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Mode"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-8": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-9": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-10": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-11": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-20": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-21": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-22": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-23": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-12": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-13": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-14": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-15": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-16": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-17": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-18": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-19": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-20": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-21": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-22": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-23": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-LineServiceTypeArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-LineServiceTypeArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-LineServiceTypeArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-LineServiceTypeArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.LineServiceType"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-8": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-9": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-10": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-11": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-ArrivalDepartureArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ArrivalDeparture"
                }
            },
            "Tfl-Api-Presentation-Entities-ArrivalDepartureArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ArrivalDeparture"
                }
            },
            "Tfl-Api-Presentation-Entities-ArrivalDepartureArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ArrivalDeparture"
                }
            },
            "Tfl-Api-Presentation-Entities-ArrivalDepartureArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.ArrivalDeparture"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-24": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-25": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-26": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointArray-27": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointRouteSectionArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointRouteSection"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointRouteSection"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointRouteSection"
                }
            },
            "Tfl-Api-Presentation-Entities-StopPointRouteSectionArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.StopPointRouteSection"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray-1": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray-2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray-3": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray-4": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray-5": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray-6": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "Tfl-Api-Presentation-Entities-DisruptedPointArray-7": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.DisruptedPoint"
                }
            },
            "StopPointIdDirectionToToStopPointIdGet200ApplicationJsonResponse": {
                "type": "string"
            },
            "StopPointIdDirectionToToStopPointIdGet200TextJsonResponse": {
                "type": "string"
            },
            "StopPointIdDirectionToToStopPointIdGet200ApplicationXmlResponse": {
                "type": "string"
            },
            "StopPointIdDirectionToToStopPointIdGet200TextXmlResponse": {
                "type": "string"
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-24": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-25": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-26": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-27": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-28": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-29": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-30": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PlaceArray-31": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Place"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-12": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-13": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-14": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            },
            "Tfl-Api-Presentation-Entities-PredictionArray-15": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl.Api.Presentation.Entities.Prediction"
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "app_key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "app_key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}