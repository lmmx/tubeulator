{
    "openapi": "3.0.1",
    "info": {
        "title": "StopPoint",
        "description": "API's relating to StopPoint and similar services",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://api.tfl.gov.uk/StopPoint"
        }
    ],
    "paths": {
        "/Meta/Categories": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of available StopPoint additional information categories",
                "description": "Gets the list of available StopPoint additional information categories",
                "operationId": "StopPoint_MetaCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaCategoriesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaCategoriesGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "category": "string",
                                        "availableKeys": [
                                            "string"
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaCategoriesGet200ApplicationXmlResponse"
                                },
                                "example": "<MetaCategoriesGet200ApplicationXmlResponse> <category>string</category> <availableKeys>string</availableKeys> </MetaCategoriesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaCategoriesGet200TextXmlResponse"
                                },
                                "example": "<MetaCategoriesGet200TextXmlResponse> <category>string</category> <availableKeys>string</availableKeys> </MetaCategoriesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Meta/StopTypes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of available StopPoint types",
                "description": "Gets the list of available StopPoint types",
                "operationId": "StopPoint_MetaStopTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaStopTypesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaStopTypesGet200TextJsonResponse"
                                },
                                "example": [
                                    "string"
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaStopTypesGet200ApplicationXmlResponse"
                                },
                                "example": "<MetaStopTypesGet200ApplicationXmlResponse>string</MetaStopTypesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaStopTypesGet200TextXmlResponse"
                                },
                                "example": "<MetaStopTypesGet200TextXmlResponse>string</MetaStopTypesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Meta/Modes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of available StopPoint modes",
                "description": "Gets the list of available StopPoint modes",
                "operationId": "StopPoint_MetaModes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaModesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaModesGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "isTflService": true,
                                        "isFarePaying": true,
                                        "isScheduledService": true,
                                        "modeName": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaModesGet200ApplicationXmlResponse"
                                },
                                "example": "<MetaModesGet200ApplicationXmlResponse> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </MetaModesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaModesGet200TextXmlResponse"
                                },
                                "example": "<MetaModesGet200TextXmlResponse> <isTflService>true</isTflService> <isFarePaying>true</isFarePaying> <isScheduledService>true</isScheduledService> <modeName>string</modeName> </MetaModesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/{ids}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of StopPoints corresponding to the given list of stop ids.",
                "description": "Gets a list of StopPoints corresponding to the given list of stop ids.",
                "operationId": "StopPoint_GetByPathIdsQueryIncludeCrowdingData",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-separated list of stop point ids (station naptan code e.g. 940GZZLUASL). Max. approx. 20 ids.\r\n            You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeCrowdingData",
                        "in": "query",
                        "description": "Include the crowding data (static). To Filter further use: /StopPoint/{ids}/Crowding/{line}",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-Get200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-Get200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-Get200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-Get200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/placeTypes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Get a list of places corresponding to a given id and place types.",
                "description": "Get a list of places corresponding to a given id and place types.",
                "operationId": "StopPoint_GetByPathIdQueryPlaceTypes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A naptan id for a stop point (station naptan code e.g. 940GZZLUASL).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "placeTypes",
                        "in": "query",
                        "description": "A comcomma-separated value representing the place types.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-PlaceTypesGet200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-PlaceTypesGet200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-PlaceTypesGet200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-PlaceTypesGet200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/Crowding/{line}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.",
                "description": "Gets all the Crowding data (static) for the StopPointId, plus crowding data for a given line and optionally a particular direction.",
                "operationId": "StopPoint_CrowdingByPathIdPathLineQueryDirection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Naptan id of the stop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "line",
                        "in": "path",
                        "description": "A particular line e.g. victoria, circle, northern etc.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The direction of travel. Can be inbound or outbound.",
                        "required": true,
                        "schema": {
                            "enum": [
                                "inbound",
                                "outbound",
                                "all"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-Crowding-line-Get200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-Crowding-line-Get200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-Crowding-line-Get200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-Crowding-line-Get200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Type/{types}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all stop points of a given type",
                "description": "Gets all stop points of a given type",
                "operationId": "StopPoint_GetByTypeByPathTypes",
                "parameters": [
                    {
                        "name": "types",
                        "in": "path",
                        "description": "A comma-separated list of the types to return. Max. approx. 12 types. \r\n            A list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Get200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Get200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Get200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Get200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Type/{types}/page/{page}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all the stop points of given type(s) with a page number",
                "description": "Gets all the stop points of given type(s) with a page number",
                "operationId": "StopPoint_GetByTypeWithPaginationByPathTypesPathPage",
                "parameters": [
                    {
                        "name": "types",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Format - int32.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Page-page-Get200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Page-page-Get200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Page-page-Get200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Type-types-Page-page-Get200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ServiceTypes": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the service types for a given stoppoint",
                "description": "Gets the service types for a given stoppoint",
                "operationId": "StopPoint_GetServiceTypesByQueryIdQueryLineIdsQueryModes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The Naptan id of the stop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineIds",
                        "in": "query",
                        "description": "The lines which contain the given Naptan id (all lines relevant to the given stoppoint if empty)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "The modes which the lines are relevant to (all if empty)",
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceTypesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "lineName": "string",
                                        "lineSpecificServiceTypes": [
                                            {
                                                "serviceType": {
                                                    "name": "string",
                                                    "uri": "string"
                                                },
                                                "stopServesServiceType": true
                                            }
                                        ]
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceTypesGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "lineName": "string",
                                        "lineSpecificServiceTypes": [
                                            {
                                                "serviceType": {
                                                    "name": "string",
                                                    "uri": "string"
                                                },
                                                "stopServesServiceType": true
                                            }
                                        ]
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceTypesGet200ApplicationXmlResponse"
                                },
                                "example": "<ServiceTypesGet200ApplicationXmlResponse> <lineName>string</lineName> <lineSpecificServiceTypes> <serviceType> <name>string</name> <uri>string</uri> </serviceType> <stopServesServiceType>true</stopServesServiceType> </lineSpecificServiceTypes> </ServiceTypesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceTypesGet200TextXmlResponse"
                                },
                                "example": "<ServiceTypesGet200TextXmlResponse> <lineName>string</lineName> <lineSpecificServiceTypes> <serviceType> <name>string</name> <uri>string</uri> </serviceType> <stopServesServiceType>true</stopServesServiceType> </lineSpecificServiceTypes> </ServiceTypesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/{id}/Arrivals": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of arrival predictions for the given stop point id",
                "description": "Gets the list of arrival predictions for the given stop point id",
                "operationId": "StopPoint_ArrivalsByPathId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A StopPoint id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalsGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalsGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "id": "string",
                                        "operationType": 0,
                                        "vehicleId": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "lineId": "string",
                                        "lineName": "string",
                                        "platformName": "string",
                                        "direction": "string",
                                        "bearing": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "timestamp": "string",
                                        "timeToStation": 0,
                                        "currentLocation": "string",
                                        "towards": "string",
                                        "expectedArrival": "string",
                                        "timeToLive": "string",
                                        "modeName": "string",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalsGet200ApplicationXmlResponse"
                                },
                                "example": "<id-ArrivalsGet200ApplicationXmlResponse> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </id-ArrivalsGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalsGet200TextXmlResponse"
                                },
                                "example": "<id-ArrivalsGet200TextXmlResponse> <id>string</id> <operationType>0</operationType> <vehicleId>string</vehicleId> <naptanId>string</naptanId> <stationName>string</stationName> <lineId>string</lineId> <lineName>string</lineName> <platformName>string</platformName> <direction>string</direction> <bearing>string</bearing> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <timestamp>string</timestamp> <timeToStation>0</timeToStation> <currentLocation>string</currentLocation> <towards>string</towards> <expectedArrival>string</expectedArrival> <timeToLive>string</timeToLive> <modeName>string</modeName> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </id-ArrivalsGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/{id}/ArrivalDepartures": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets the list of arrival and departure predictions for the given stop point id (overground and tfl rail only)",
                "description": "Gets the list of arrival and departure predictions for the given stop point id (overground and tfl rail only)",
                "operationId": "StopPoint_ArrivalDeparturesByPathIdQueryLineIds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A StopPoint id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineIds",
                        "in": "query",
                        "description": "A comma-separated list of line ids e.g. tfl-rail, london-overground",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalDeparturesGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "platformName": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "estimatedTimeOfArrival": "string",
                                        "scheduledTimeOfArrival": "string",
                                        "estimatedTimeOfDeparture": "string",
                                        "scheduledTimeOfDeparture": "string",
                                        "minutesAndSecondsToArrival": "string",
                                        "minutesAndSecondsToDeparture": "string",
                                        "cause": "string",
                                        "departureStatus": "OnTime",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalDeparturesGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "platformName": "string",
                                        "destinationNaptanId": "string",
                                        "destinationName": "string",
                                        "naptanId": "string",
                                        "stationName": "string",
                                        "estimatedTimeOfArrival": "string",
                                        "scheduledTimeOfArrival": "string",
                                        "estimatedTimeOfDeparture": "string",
                                        "scheduledTimeOfDeparture": "string",
                                        "minutesAndSecondsToArrival": "string",
                                        "minutesAndSecondsToDeparture": "string",
                                        "cause": "string",
                                        "departureStatus": "OnTime",
                                        "timing": {
                                            "countdownServerAdjustment": "string",
                                            "source": "string",
                                            "insert": "string",
                                            "read": "string",
                                            "sent": "string",
                                            "received": "string"
                                        }
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalDeparturesGet200ApplicationXmlResponse"
                                },
                                "example": "<id-ArrivalDeparturesGet200ApplicationXmlResponse> <platformName>string</platformName> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <naptanId>string</naptanId> <stationName>string</stationName> <estimatedTimeOfArrival>string</estimatedTimeOfArrival> <scheduledTimeOfArrival>string</scheduledTimeOfArrival> <estimatedTimeOfDeparture>string</estimatedTimeOfDeparture> <scheduledTimeOfDeparture>string</scheduledTimeOfDeparture> <minutesAndSecondsToArrival>string</minutesAndSecondsToArrival> <minutesAndSecondsToDeparture>string</minutesAndSecondsToDeparture> <cause>string</cause> <departureStatus>OnTime</departureStatus> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </id-ArrivalDeparturesGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-ArrivalDeparturesGet200TextXmlResponse"
                                },
                                "example": "<id-ArrivalDeparturesGet200TextXmlResponse> <platformName>string</platformName> <destinationNaptanId>string</destinationNaptanId> <destinationName>string</destinationName> <naptanId>string</naptanId> <stationName>string</stationName> <estimatedTimeOfArrival>string</estimatedTimeOfArrival> <scheduledTimeOfArrival>string</scheduledTimeOfArrival> <estimatedTimeOfDeparture>string</estimatedTimeOfDeparture> <scheduledTimeOfDeparture>string</scheduledTimeOfDeparture> <minutesAndSecondsToArrival>string</minutesAndSecondsToArrival> <minutesAndSecondsToDeparture>string</minutesAndSecondsToDeparture> <cause>string</cause> <departureStatus>OnTime</departureStatus> <timing> <countdownServerAdjustment>string</countdownServerAdjustment> <source>string</source> <insert>string</insert> <read>string</read> <sent>string</sent> <received>string</received> </timing> </id-ArrivalDeparturesGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/{id}/CanReachOnLine/{lineId}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets Stopoints that are reachable from a station/line combination.",
                "description": "Gets Stopoints that are reachable from a station/line combination.",
                "operationId": "StopPoint_ReachableFromByPathIdPathLineIdQueryServiceTypes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name) of the stop point to filter by",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineId",
                        "in": "path",
                        "description": "Line id of the line to filter by (e.g. victoria)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "enum": [
                                "Regular",
                                "Night"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-CanReachOnLine-lineId-Get200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-CanReachOnLine-lineId-Get200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-CanReachOnLine-lineId-Get200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-CanReachOnLine-lineId-Get200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/Route": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Returns the route sections for all the lines that service the given stop point ids",
                "description": "Returns the route sections for all the lines that service the given stop point ids",
                "operationId": "StopPoint_RouteByPathIdQueryServiceTypes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A stop point id (station naptan codes e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceTypes",
                        "in": "query",
                        "description": "A comma-separated list of service types to filter on. If not specified. Supported values: Regular, Night. Defaulted to 'Regular' if not specified",
                        "schema": {
                            "enum": [
                                "Regular",
                                "Night"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-RouteGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "naptanId": "string",
                                        "lineId": "string",
                                        "mode": "string",
                                        "validFrom": "string",
                                        "validTo": "string",
                                        "direction": "string",
                                        "routeSectionName": "string",
                                        "lineString": "string",
                                        "isActive": true,
                                        "serviceType": "string",
                                        "vehicleDestinationText": "string",
                                        "destinationName": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-RouteGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "naptanId": "string",
                                        "lineId": "string",
                                        "mode": "string",
                                        "validFrom": "string",
                                        "validTo": "string",
                                        "direction": "string",
                                        "routeSectionName": "string",
                                        "lineString": "string",
                                        "isActive": true,
                                        "serviceType": "string",
                                        "vehicleDestinationText": "string",
                                        "destinationName": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-RouteGet200ApplicationXmlResponse"
                                },
                                "example": "<id-RouteGet200ApplicationXmlResponse> <naptanId>string</naptanId> <lineId>string</lineId> <mode>string</mode> <validFrom>string</validFrom> <validTo>string</validTo> <direction>string</direction> <routeSectionName>string</routeSectionName> <lineString>string</lineString> <isActive>true</isActive> <serviceType>string</serviceType> <vehicleDestinationText>string</vehicleDestinationText> <destinationName>string</destinationName> </id-RouteGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-RouteGet200TextXmlResponse"
                                },
                                "example": "<id-RouteGet200TextXmlResponse> <naptanId>string</naptanId> <lineId>string</lineId> <mode>string</mode> <validFrom>string</validFrom> <validTo>string</validTo> <direction>string</direction> <routeSectionName>string</routeSectionName> <lineString>string</lineString> <isActive>true</isActive> <serviceType>string</serviceType> <vehicleDestinationText>string</vehicleDestinationText> <destinationName>string</destinationName> </id-RouteGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/Mode/{modes}/Disruption": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a distinct list of disrupted stop points for the given modes",
                "description": "Gets a distinct list of disrupted stop points for the given modes",
                "operationId": "StopPoint_DisruptionByModeByPathModesQueryIncludeRouteBlockedStops",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-seperated list of modes e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRouteBlockedStops",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mode-modes-DisruptionGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mode-modes-DisruptionGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mode-modes-DisruptionGet200ApplicationXmlResponse"
                                },
                                "example": "<Mode-modes-DisruptionGet200ApplicationXmlResponse> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </Mode-modes-DisruptionGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mode-modes-DisruptionGet200TextXmlResponse"
                                },
                                "example": "<Mode-modes-DisruptionGet200TextXmlResponse> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </Mode-modes-DisruptionGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/{ids}/Disruption": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.",
                "description": "Gets all disruptions for the specified StopPointId, plus disruptions for any child Naptan records it may have.",
                "operationId": "StopPoint_DisruptionByPathIdsQueryGetFamilyQueryIncludeRouteBlockedStopsQuer",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "A comma-seperated list of stop point ids. Max. approx. 20 ids.\r\n            You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "getFamily",
                        "in": "query",
                        "description": "Specify true to return disruptions for entire family, or false to return disruptions for just this stop point. Defaults to false.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeRouteBlockedStops",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "flattenResponse",
                        "in": "query",
                        "description": "Specify true to associate all disruptions with parent stop point. (Only applicable when getFamily is true).",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-DisruptionGet200ApplicationJsonResponse"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-DisruptionGet200TextJsonResponse"
                                },
                                "example": [
                                    {
                                        "atcoCode": "string",
                                        "fromDate": "string",
                                        "toDate": "string",
                                        "description": "string",
                                        "commonName": "string",
                                        "type": "string",
                                        "mode": "string",
                                        "stationAtcoCode": "string",
                                        "appearance": "string",
                                        "additionalInformation": "string"
                                    }
                                ]
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-DisruptionGet200ApplicationXmlResponse"
                                },
                                "example": "<ids-DisruptionGet200ApplicationXmlResponse> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </ids-DisruptionGet200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ids-DisruptionGet200TextXmlResponse"
                                },
                                "example": "<ids-DisruptionGet200TextXmlResponse> <atcoCode>string</atcoCode> <fromDate>string</fromDate> <toDate>string</toDate> <description>string</description> <commonName>string</commonName> <type>string</type> <mode>string</mode> <stationAtcoCode>string</stationAtcoCode> <appearance>string</appearance> <additionalInformation>string</additionalInformation> </ids-DisruptionGet200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/{id}/DirectionTo/{toStopPointId}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Returns the canonical direction, \"inbound\" or \"outbound\", for a given pair of stop point Ids in the direction from -&gt; to.",
                "description": "Returns the canonical direction, \"inbound\" or \"outbound\", for a given pair of stop point Ids in the direction from -&gt; to.",
                "operationId": "StopPoint_DirectionByPathIdPathToStopPointIdQueryLineId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Originating stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toStopPointId",
                        "in": "path",
                        "description": "Destination stop id (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lineId",
                        "in": "query",
                        "description": "Optional line id filter e.g. victoria",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-DirectionTo-toStopPointId-Get200ApplicationJsonResponse"
                                },
                                "example": "string"
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-DirectionTo-toStopPointId-Get200TextJsonResponse"
                                },
                                "example": "string"
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-DirectionTo-toStopPointId-Get200ApplicationXmlResponse"
                                },
                                "example": "<id-DirectionTo-toStopPointId-Get200ApplicationXmlResponse>string</id-DirectionTo-toStopPointId-Get200ApplicationXmlResponse>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/id-DirectionTo-toStopPointId-Get200TextXmlResponse"
                                },
                                "example": "<id-DirectionTo-toStopPointId-Get200TextXmlResponse>string</id-DirectionTo-toStopPointId-Get200TextXmlResponse>"
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of StopPoints within {radius} by the specified criteria",
                "description": "Gets a list of StopPoints within {radius} by the specified criteria",
                "operationId": "StopPoint_GetByGeoPointByQueryLatQueryLonQueryStopTypesQueryRadiusQueryUseSt",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Format - double. the latitude of the centre of the bounding circle",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "Format - double. the longitude of the centre of the bounding circle",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "stopTypes",
                        "in": "query",
                        "description": "a list of stopTypes that should be returned (a list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": "Format - int32. the radius of the bounding circle in metres (default : 200)",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "useStopPointHierarchy",
                        "in": "query",
                        "description": "Re-arrange the output into a parent/child hierarchy",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "the list of modes to search (comma separated mode names e.g. tube,dlr)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "an optional list of comma separated property categories to return in the StopPoint's property bag. If null or empty, all categories of property are returned. Pass the keyword \"none\" to return no properties (a valid list of categories can be obtained from the /StopPoint/Meta/categories endpoint)",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "returnLines",
                        "in": "query",
                        "description": "true to return the lines that each stop point serves as a nested resource",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Mode/{modes}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of StopPoints filtered by the modes available at that StopPoint.",
                "description": "Gets a list of StopPoints filtered by the modes available at that StopPoint.",
                "operationId": "StopPoint_GetByModeByPathModesQueryPage",
                "parameters": [
                    {
                        "name": "modes",
                        "in": "path",
                        "description": "A comma-seperated list of modes e.g. tube,dlr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Format - int32. The data set page to return. Page 1 equates to the first 1000 stop points, page 2 equates to 1001-2000 etc. Must be entered for bus mode as data set is too large.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-20"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Search/{query}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "description": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "operationId": "StopPoint_SearchByPathQueryQueryModesQueryFaresOnlyQueryMaxResultsQueryLines",
                "parameters": [
                    {
                        "name": "query",
                        "in": "path",
                        "description": "The query string, case-insensitive. Leading and trailing wildcards are applied automatically.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "An optional, parameter separated list of the modes to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "faresOnly",
                        "in": "query",
                        "description": "True to only return stations in that have Fares data available for single fares to another station.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "Format - int32. An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,\r\n            it is possible that the flattened result set will contain more than 50 items.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lines",
                        "in": "query",
                        "description": "An optional, parameter separated list of the lines to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "includeHubs",
                        "in": "query",
                        "description": "If true, returns results including HUBs.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "tflOperatedNationalRailStationsOnly",
                        "in": "query",
                        "description": "If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": "<Tfl-22> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl-22>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": "<Tfl-22> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl-22>"
                            }
                        }
                    }
                }
            }
        },
        "/Search": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "description": "Search StopPoints by their common name, or their 5-digit Countdown Bus Stop Code.",
                "operationId": "StopPoint_SearchByQueryQueryQueryModesQueryFaresOnlyQueryMaxResultsQueryLine",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The query string, case-insensitive. Leading and trailing wildcards are applied automatically.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modes",
                        "in": "query",
                        "description": "An optional, parameter separated list of the modes to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "faresOnly",
                        "in": "query",
                        "description": "True to only return stations in that have Fares data available for single fares to another station.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "maxResults",
                        "in": "query",
                        "description": "Format - int32. An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,\r\n            it is possible that the flattened result set will contain more than 50 items.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lines",
                        "in": "query",
                        "description": "An optional, parameter separated list of the lines to filter by",
                        "schema": {
                            "type": "array"
                        }
                    },
                    {
                        "name": "includeHubs",
                        "in": "query",
                        "description": "If true, returns results including HUBs.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "tflOperatedNationalRailStationsOnly",
                        "in": "query",
                        "description": "If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": {
                                    "query": "string",
                                    "from": 0,
                                    "page": 0,
                                    "pageSize": 0,
                                    "provider": "string",
                                    "total": 0,
                                    "matches": [
                                        {
                                            "id": "string",
                                            "url": "string",
                                            "name": "string",
                                            "lat": 0,
                                            "lon": 0
                                        }
                                    ],
                                    "maxScore": 0
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": "<Tfl-22> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl-22>"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tfl-22"
                                },
                                "example": "<Tfl-22> <query>string</query> <from>0</from> <page>0</page> <pageSize>0</pageSize> <provider>string</provider> <total>0</total> <matches> <id>string</id> <url>string</url> <name>string</name> <lat>0</lat> <lon>0</lon> </matches> <maxScore>0</maxScore> </Tfl-22>"
                            }
                        }
                    }
                }
            }
        },
        "/Sms/{id}": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a StopPoint for a given sms code.",
                "description": "Gets a StopPoint for a given sms code.",
                "operationId": "StopPoint_GetBySmsByPathIdQueryOutput",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A 5-digit Countdown Bus Stop Code e.g. 73241, 50435, 56334.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "If set to \"web\", a 302 redirect to relevant website bus stop page is returned. Valid values are : web. All other values are ignored.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/System"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System"
                                },
                                "example": "<System />"
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/System"
                                },
                                "example": "<System />"
                            }
                        }
                    }
                }
            }
        },
        "/{stopPointId}/TaxiRanks": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Gets a list of taxi ranks corresponding to the given stop point id.",
                "description": "Gets a list of taxi ranks corresponding to the given stop point id.",
                "operationId": "StopPoint_GetTaxiRanksByIdsByPathStopPointId",
                "parameters": [
                    {
                        "name": "stopPointId",
                        "in": "path",
                        "description": "stopPointId is required to get the taxi ranks.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-TaxiRanksGet200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-TaxiRanksGet200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-TaxiRanksGet200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-TaxiRanksGet200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{stopPointId}/CarParks": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Get car parks corresponding to the given stop point id.",
                "description": "Get car parks corresponding to the given stop point id.",
                "operationId": "StopPoint_GetCarParksByIdByPathStopPointId",
                "parameters": [
                    {
                        "name": "stopPointId",
                        "in": "path",
                        "description": "stopPointId is required to get the car parks.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-CarParksGet200ApplicationJsonResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-CarParksGet200TextJsonResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-CarParksGet200ApplicationXmlResponse"
                                }
                            },
                            "text/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/stopPointId-CarParksGet200TextXmlResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/*": {
            "get": {
                "tags": [
                    "StopPoint"
                ],
                "summary": "Forwards any remaining requests to the back-end",
                "description": "Forwards any remaining requests to the back-end",
                "operationId": "Forward_Proxy",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Get200ApplicationJsonResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Tfl": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "availableKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl-2": {
                "type": "object",
                "properties": {
                    "isTflService": {
                        "type": "boolean"
                    },
                    "isFarePaying": {
                        "type": "boolean"
                    },
                    "isScheduledService": {
                        "type": "boolean"
                    },
                    "modeName": {
                        "type": "string"
                    }
                }
            },
            "Tfl-3": {
                "type": "object",
                "properties": {
                    "timeSlice": {
                        "type": "string",
                        "description": "Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc."
                    },
                    "value": {
                        "type": "integer",
                        "description": "Count of passenger flow towards a platform",
                        "format": "int32"
                    }
                }
            },
            "Tfl-4": {
                "type": "object",
                "properties": {
                    "line": {
                        "type": "string",
                        "description": "The Line Name e.g. \"Victoria\""
                    },
                    "lineDirection": {
                        "type": "string",
                        "description": "Direction of the Line e.g. NB, SB, WB etc."
                    },
                    "platformDirection": {
                        "type": "string",
                        "description": "Direction displayed on the platform e.g. NB, SB, WB etc."
                    },
                    "direction": {
                        "type": "string",
                        "description": "Direction in regards to Journey Planner i.e. inbound or outbound"
                    },
                    "naptanTo": {
                        "type": "string",
                        "description": "Naptan of the adjacent station"
                    },
                    "timeSlice": {
                        "type": "string",
                        "description": "Time in 24hr format with 15 minute intervals e.g. 0500-0515, 0515-0530 etc."
                    },
                    "value": {
                        "type": "integer",
                        "description": "Scale between 1-6, \r\n             1 = Very quiet, 2 = Quiet, 3 = Fairly busy, 4 = Busy, 5 = Very busy, 6 = Exceptionally busy",
                        "format": "int32"
                    }
                }
            },
            "Tfl-5": {
                "type": "object",
                "properties": {
                    "passengerFlows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-3"
                        },
                        "description": "Busiest times at a station (static information)"
                    },
                    "trainLoadings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-4"
                        },
                        "description": "Train Loading on a scale 1-6, 1 being \"Very quiet\" and 6 being \"Exceptionally busy\" (static information)"
                    }
                }
            },
            "Tfl-6": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "crowding": {
                        "$ref": "#/components/schemas/Tfl-5"
                    },
                    "routeType": {
                        "enum": [
                            "Unknown",
                            "All",
                            "Cycle Superhighways",
                            "Quietways",
                            "Cycleways",
                            "Mini-Hollands",
                            "Central London Grid",
                            "Streetspace Route"
                        ],
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "Unknown",
                            "All",
                            "Open",
                            "In Progress",
                            "Planned",
                            "Planned - Subject to feasibility and consultation.",
                            "Not Open"
                        ],
                        "type": "string"
                    }
                }
            },
            "Tfl-7": {
                "type": "object",
                "properties": {
                    "naptanIdReference": {
                        "type": "string"
                    },
                    "stationAtcoCode": {
                        "type": "string"
                    },
                    "lineIdentifier": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl-8": {
                "type": "object",
                "properties": {
                    "modeName": {
                        "type": "string"
                    },
                    "lineIdentifier": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Tfl-9": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "sourceSystemKey": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl-10": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier."
                    },
                    "url": {
                        "type": "string",
                        "description": "The unique location of this resource."
                    },
                    "commonName": {
                        "type": "string",
                        "description": "A human readable name."
                    },
                    "distance": {
                        "type": "number",
                        "description": "The distance of the place from its search point, if this is the result\r\n            of a geographical search, otherwise zero.",
                        "format": "double"
                    },
                    "placeType": {
                        "type": "string",
                        "description": "The type of Place. See /Place/Meta/placeTypes for possible values."
                    },
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-9"
                        },
                        "description": "A bag of additional key/value pairs with extra information about this place."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-10"
                        }
                    },
                    "childrenUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lat": {
                        "type": "number",
                        "description": "WGS84 latitude of the location.",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "description": "WGS84 longitude of the location.",
                        "format": "double"
                    }
                }
            },
            "Tfl-11": {
                "type": "object",
                "properties": {
                    "naptanId": {
                        "type": "string"
                    },
                    "platformName": {
                        "type": "string"
                    },
                    "indicator": {
                        "type": "string",
                        "description": "The indicator of the stop point e.g. \"Stop K\""
                    },
                    "stopLetter": {
                        "type": "string",
                        "description": "The stop letter, if it could be cleansed from the Indicator e.g. \"K\""
                    },
                    "modes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "icsCode": {
                        "type": "string"
                    },
                    "smsCode": {
                        "type": "string"
                    },
                    "stopType": {
                        "type": "string"
                    },
                    "stationNaptan": {
                        "type": "string"
                    },
                    "accessibilitySummary": {
                        "type": "string"
                    },
                    "hubNaptanCode": {
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-6"
                        }
                    },
                    "lineGroup": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-7"
                        }
                    },
                    "lineModeGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-8"
                        }
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "naptanMode": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "A unique identifier."
                    },
                    "url": {
                        "type": "string",
                        "description": "The unique location of this resource."
                    },
                    "commonName": {
                        "type": "string",
                        "description": "A human readable name."
                    },
                    "distance": {
                        "type": "number",
                        "description": "The distance of the place from its search point, if this is the result\r\n            of a geographical search, otherwise zero.",
                        "format": "double"
                    },
                    "placeType": {
                        "type": "string",
                        "description": "The type of Place. See /Place/Meta/placeTypes for possible values."
                    },
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-9"
                        },
                        "description": "A bag of additional key/value pairs with extra information about this place."
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-10"
                        }
                    },
                    "childrenUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lat": {
                        "type": "number",
                        "description": "WGS84 latitude of the location.",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "description": "WGS84 longitude of the location.",
                        "format": "double"
                    }
                }
            },
            "Tfl-12": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "Tfl-13": {
                "type": "object",
                "properties": {
                    "serviceType": {
                        "$ref": "#/components/schemas/Tfl-12"
                    },
                    "stopServesServiceType": {
                        "type": "boolean"
                    }
                }
            },
            "Tfl-14": {
                "type": "object",
                "properties": {
                    "lineName": {
                        "type": "string"
                    },
                    "lineSpecificServiceTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-13"
                        }
                    }
                }
            },
            "Tfl-15": {
                "type": "object",
                "properties": {
                    "countdownServerAdjustment": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "insert": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "read": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sent": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "received": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Tfl-16": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identitier for the prediction"
                    },
                    "operationType": {
                        "type": "integer",
                        "description": "The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)",
                        "format": "int32"
                    },
                    "vehicleId": {
                        "type": "string",
                        "description": "The actual vehicle in transit (for train modes, the leading car of the rolling set)"
                    },
                    "naptanId": {
                        "type": "string",
                        "description": "Identifier for the prediction"
                    },
                    "stationName": {
                        "type": "string",
                        "description": "Station name"
                    },
                    "lineId": {
                        "type": "string",
                        "description": "Unique identifier for the Line"
                    },
                    "lineName": {
                        "type": "string",
                        "description": "Line Name"
                    },
                    "platformName": {
                        "type": "string",
                        "description": "Platform name (for bus, this is the stop letter)"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Direction (unified to inbound/outbound)"
                    },
                    "bearing": {
                        "type": "string",
                        "description": "Bearing (between 0 to 359)"
                    },
                    "destinationNaptanId": {
                        "type": "string",
                        "description": "Naptan Identifier for the prediction's destination"
                    },
                    "destinationName": {
                        "type": "string",
                        "description": "Name of the destination"
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)",
                        "format": "date-time"
                    },
                    "timeToStation": {
                        "type": "integer",
                        "description": "Prediction of the Time to station in seconds",
                        "format": "int32"
                    },
                    "currentLocation": {
                        "type": "string",
                        "description": "The current location of the vehicle."
                    },
                    "towards": {
                        "type": "string",
                        "description": "Routing information or other descriptive text about the path of the vehicle towards the destination"
                    },
                    "expectedArrival": {
                        "type": "string",
                        "description": "The expected arrival time of the vehicle at the stop/station",
                        "format": "date-time"
                    },
                    "timeToLive": {
                        "type": "string",
                        "description": "The expiry time for the prediction",
                        "format": "date-time"
                    },
                    "modeName": {
                        "type": "string",
                        "description": "The mode name of the station/line the prediction relates to"
                    },
                    "timing": {
                        "$ref": "#/components/schemas/Tfl-15"
                    }
                },
                "description": "DTO to capture the prediction details"
            },
            "Tfl-17": {
                "type": "object",
                "properties": {
                    "platformName": {
                        "type": "string",
                        "description": "Platform name (for bus, this is the stop letter)"
                    },
                    "destinationNaptanId": {
                        "type": "string",
                        "description": "Naptan Identifier for the prediction's destination"
                    },
                    "destinationName": {
                        "type": "string",
                        "description": "Name of the destination"
                    },
                    "naptanId": {
                        "type": "string",
                        "description": "Identifier for the prediction"
                    },
                    "stationName": {
                        "type": "string",
                        "description": "Station name"
                    },
                    "estimatedTimeOfArrival": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "scheduledTimeOfArrival": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "estimatedTimeOfDeparture": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "scheduledTimeOfDeparture": {
                        "type": "string",
                        "description": "Estimated time of arrival",
                        "format": "date-time"
                    },
                    "minutesAndSecondsToArrival": {
                        "type": "string",
                        "description": "Estimated time of arrival"
                    },
                    "minutesAndSecondsToDeparture": {
                        "type": "string",
                        "description": "Estimated time of arrival"
                    },
                    "cause": {
                        "type": "string",
                        "description": "Reason for cancellation or delay"
                    },
                    "departureStatus": {
                        "enum": [
                            "OnTime",
                            "Delayed",
                            "Cancelled",
                            "NotStoppingAtStation"
                        ],
                        "type": "string",
                        "description": "Status of departure"
                    },
                    "timing": {
                        "$ref": "#/components/schemas/Tfl-15"
                    }
                },
                "description": "DTO to capture the prediction details"
            },
            "Tfl-18": {
                "type": "object",
                "properties": {
                    "naptanId": {
                        "type": "string"
                    },
                    "lineId": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validTo": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "direction": {
                        "type": "string"
                    },
                    "routeSectionName": {
                        "type": "string"
                    },
                    "lineString": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "serviceType": {
                        "type": "string"
                    },
                    "vehicleDestinationText": {
                        "type": "string"
                    },
                    "destinationName": {
                        "type": "string"
                    }
                }
            },
            "Tfl-19": {
                "type": "object",
                "properties": {
                    "atcoCode": {
                        "type": "string"
                    },
                    "fromDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "toDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "stationAtcoCode": {
                        "type": "string"
                    },
                    "appearance": {
                        "type": "string"
                    },
                    "additionalInformation": {
                        "type": "string"
                    }
                }
            },
            "Tfl-20": {
                "type": "object",
                "properties": {
                    "centrePoint": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double"
                        },
                        "description": "The centre latitude/longitude of this list of StopPoints"
                    },
                    "stopPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-11"
                        },
                        "description": "Collection of stop points"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "The maximum size of the page in this response i.e. the maximum number of StopPoints",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of StopPoints available across all pages",
                        "format": "int32"
                    },
                    "page": {
                        "type": "integer",
                        "description": "The index of this page",
                        "format": "int32"
                    }
                },
                "description": "A paged response containing StopPoints"
            },
            "Tfl-21": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double"
                    },
                    "lon": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Tfl-22": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "matches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tfl-21"
                        }
                    },
                    "maxScore": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "System": {
                "type": "object"
            },
            "Get200ApplicationJsonResponse": {
                "type": "object"
            },
            "MetaCategoriesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl"
                }
            },
            "MetaCategoriesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl"
                }
            },
            "MetaCategoriesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl"
                }
            },
            "MetaCategoriesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl"
                }
            },
            "MetaStopTypesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "MetaStopTypesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "MetaStopTypesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "MetaStopTypesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            },
            "MetaModesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-2"
                }
            },
            "MetaModesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-2"
                }
            },
            "MetaModesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-2"
                }
            },
            "MetaModesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-2"
                }
            },
            "ids-Get200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "ids-Get200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "ids-Get200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "ids-Get200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-PlaceTypesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "id-PlaceTypesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "id-PlaceTypesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "id-PlaceTypesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "id-Crowding-line-Get200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-Crowding-line-Get200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-Crowding-line-Get200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-Crowding-line-Get200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Get200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Get200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Get200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Get200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Page-page-Get200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Page-page-Get200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Page-page-Get200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "Type-types-Page-page-Get200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "ServiceTypesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-14"
                }
            },
            "ServiceTypesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-14"
                }
            },
            "ServiceTypesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-14"
                }
            },
            "ServiceTypesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-14"
                }
            },
            "id-ArrivalsGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-16"
                }
            },
            "id-ArrivalsGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-16"
                }
            },
            "id-ArrivalsGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-16"
                }
            },
            "id-ArrivalsGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-16"
                }
            },
            "id-ArrivalDeparturesGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-17"
                }
            },
            "id-ArrivalDeparturesGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-17"
                }
            },
            "id-ArrivalDeparturesGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-17"
                }
            },
            "id-ArrivalDeparturesGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-17"
                }
            },
            "id-CanReachOnLine-lineId-Get200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-CanReachOnLine-lineId-Get200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-CanReachOnLine-lineId-Get200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-CanReachOnLine-lineId-Get200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-11"
                }
            },
            "id-RouteGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-18"
                }
            },
            "id-RouteGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-18"
                }
            },
            "id-RouteGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-18"
                }
            },
            "id-RouteGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-18"
                }
            },
            "Mode-modes-DisruptionGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "Mode-modes-DisruptionGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "Mode-modes-DisruptionGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "Mode-modes-DisruptionGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "ids-DisruptionGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "ids-DisruptionGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "ids-DisruptionGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "ids-DisruptionGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-19"
                }
            },
            "id-DirectionTo-toStopPointId-Get200ApplicationJsonResponse": {
                "type": "string"
            },
            "id-DirectionTo-toStopPointId-Get200TextJsonResponse": {
                "type": "string"
            },
            "id-DirectionTo-toStopPointId-Get200ApplicationXmlResponse": {
                "type": "string"
            },
            "id-DirectionTo-toStopPointId-Get200TextXmlResponse": {
                "type": "string"
            },
            "stopPointId-TaxiRanksGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "stopPointId-TaxiRanksGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "stopPointId-TaxiRanksGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "stopPointId-TaxiRanksGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "stopPointId-CarParksGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "stopPointId-CarParksGet200TextJsonResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "stopPointId-CarParksGet200ApplicationXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            },
            "stopPointId-CarParksGet200TextXmlResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Tfl-10"
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "app_key",
                "in": "header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "name": "app_key",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyQuery": []
        }
    ]
}