import json
from dataclasses import dataclass, field
from pathlib import Path
from dataclass_wizard import JSONWizard, LoadMeta
from dataclass_wizard.loaders import fromdict
import jsonschema

@dataclass
class ModeDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Mode
    """
    IsTflService: bool = None
    IsFarePaying: bool = None
    IsScheduledService: bool = None
    ModeName: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ModeDeserialiser)


@dataclass
class StatusSeverityDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StatusSeverity
    """
    ModeName: str = None
    SeverityLevel: int = None
    Description: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StatusSeverityDeserialiser)


@dataclass
class PassengerFlowDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.PassengerFlow
    """
    TimeSlice: str = None
    Value: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PassengerFlowDeserialiser)


@dataclass
class TrainLoadingDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TrainLoading
    """
    Line: str = None
    LineDirection: str = None
    PlatformDirection: str = None
    Direction: str = None
    NaptanTo: str = None
    TimeSlice: str = None
    Value: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TrainLoadingDeserialiser)


@dataclass
class CrowdingDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Crowding
    """
    PassengerFlows: list[dict] = field(default_factory=list)
    TrainLoadings: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(CrowdingDeserialiser)


@dataclass
class IdentifierDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Identifier
    """
    Id: str = None
    Name: str = None
    Uri: str = None
    FullName: str = None
    Type: str = None
    Crowding: dict = None
    RouteType: str = None
    Status: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(IdentifierDeserialiser)


@dataclass
class LineGroupDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineGroup
    """
    NaptanIdReference: str = None
    StationAtcoCode: str = None
    LineIdentifier: list[str] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineGroupDeserialiser)


@dataclass
class LineModeGroupDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineModeGroup
    """
    ModeName: str = None
    LineIdentifier: list[str] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineModeGroupDeserialiser)


@dataclass
class AdditionalPropertiesDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.AdditionalProperties
    """
    Category: str = None
    Key: str = None
    SourceSystemKey: str = None
    Value: str = None
    Modified: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(AdditionalPropertiesDeserialiser)


@dataclass
class PlaceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Place
    """
    Id: str = None
    Url: str = None
    CommonName: str = None
    Distance: Any = None
    PlaceType: str = None
    AdditionalProperties: list[dict] = field(default_factory=list)
    Children: list[dict] = field(default_factory=list)
    ChildrenUrls: list[str] = field(default_factory=list)
    Lat: Any = None
    Lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PlaceDeserialiser)


@dataclass
class StopPointDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StopPoint
    """
    NaptanId: str = None
    PlatformName: str = None
    Indicator: str = None
    StopLetter: str = None
    Modes: list[str] = field(default_factory=list)
    IcsCode: str = None
    SmsCode: str = None
    StopType: str = None
    StationNaptan: str = None
    AccessibilitySummary: str = None
    HubNaptanCode: str = None
    Lines: list[dict] = field(default_factory=list)
    LineGroup: list[dict] = field(default_factory=list)
    LineModeGroups: list[dict] = field(default_factory=list)
    FullName: str = None
    NaptanMode: str = None
    Status: bool = None
    Id: str = None
    Url: str = None
    CommonName: str = None
    Distance: Any = None
    PlaceType: str = None
    AdditionalProperties: list[dict] = field(default_factory=list)
    Children: list[dict] = field(default_factory=list)
    ChildrenUrls: list[str] = field(default_factory=list)
    Lat: Any = None
    Lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointDeserialiser)


@dataclass
class RouteSectionNaptanEntrySequenceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSectionNaptanEntrySequence
    """
    Ordinal: int = None
    StopPoint: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSectionNaptanEntrySequenceDeserialiser)


@dataclass
class RouteSectionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSection
    """
    Id: str = None
    LineId: str = None
    RouteCode: str = None
    Name: str = None
    LineString: str = None
    Direction: str = None
    OriginationName: str = None
    DestinationName: str = None
    ValidTo: str = None
    ValidFrom: str = None
    RouteSectionNaptanEntrySequence: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSectionDeserialiser)


@dataclass
class DisruptionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Disruption
    """
    Category: str = None
    Type: str = None
    CategoryDescription: str = None
    Description: str = None
    Summary: str = None
    AdditionalInfo: str = None
    Created: str = None
    LastUpdate: str = None
    AffectedRoutes: list[dict] = field(default_factory=list)
    AffectedStops: list[dict] = field(default_factory=list)
    ClosureText: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionDeserialiser)


@dataclass
class ValidityPeriodDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.ValidityPeriod
    """
    FromDate: str = None
    ToDate: str = None
    IsNow: bool = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ValidityPeriodDeserialiser)


@dataclass
class LineStatusDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineStatus
    """
    Id: int = None
    LineId: str = None
    StatusSeverity: int = None
    StatusSeverityDescription: str = None
    Reason: str = None
    Created: str = None
    Modified: str = None
    ValidityPeriods: list[dict] = field(default_factory=list)
    Disruption: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineStatusDeserialiser)


@dataclass
class MatchedRouteDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.MatchedRoute
    """
    RouteCode: str = None
    Name: str = None
    Direction: str = None
    OriginationName: str = None
    DestinationName: str = None
    Originator: str = None
    Destination: str = None
    ServiceType: str = None
    ValidTo: str = None
    ValidFrom: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MatchedRouteDeserialiser)


@dataclass
class LineServiceTypeInfoDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineServiceTypeInfo
    """
    Name: str = None
    Uri: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineServiceTypeInfoDeserialiser)


@dataclass
class LineDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Line
    """
    Id: str = None
    Name: str = None
    ModeName: str = None
    Disruptions: list[dict] = field(default_factory=list)
    Created: str = None
    Modified: str = None
    LineStatuses: list[dict] = field(default_factory=list)
    RouteSections: list[dict] = field(default_factory=list)
    ServiceTypes: list[dict] = field(default_factory=list)
    Crowding: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineDeserialiser)


@dataclass
class MatchedStopDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.MatchedStop
    """
    RouteId: int = None
    ParentId: str = None
    StationId: str = None
    IcsId: str = None
    TopMostParentId: str = None
    Direction: str = None
    Towards: str = None
    Modes: list[str] = field(default_factory=list)
    StopType: str = None
    StopLetter: str = None
    Zone: str = None
    AccessibilitySummary: str = None
    HasDisruption: bool = None
    Lines: list[dict] = field(default_factory=list)
    Status: bool = None
    Id: str = None
    Url: str = None
    Name: str = None
    Lat: Any = None
    Lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MatchedStopDeserialiser)


@dataclass
class StopPointSequenceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StopPointSequence
    """
    LineId: str = None
    LineName: str = None
    Direction: str = None
    BranchId: int = None
    NextBranchIds: list[int] = field(default_factory=list)
    PrevBranchIds: list[int] = field(default_factory=list)
    StopPoint: list[dict] = field(default_factory=list)
    ServiceType: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointSequenceDeserialiser)


@dataclass
class OrderedRouteDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.OrderedRoute
    """
    Name: str = None
    NaptanIds: list[str] = field(default_factory=list)
    ServiceType: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(OrderedRouteDeserialiser)


@dataclass
class RouteSequenceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSequence
    """
    LineId: str = None
    LineName: str = None
    Direction: str = None
    IsOutboundOnly: bool = None
    Mode: str = None
    LineStrings: list[str] = field(default_factory=list)
    Stations: list[dict] = field(default_factory=list)
    StopPointSequences: list[dict] = field(default_factory=list)
    OrderedLineRoutes: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSequenceDeserialiser)


@dataclass
class LineRouteSectionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineRouteSection
    """
    RouteId: int = None
    Direction: str = None
    Destination: str = None
    FromStation: str = None
    ToStation: str = None
    ServiceType: str = None
    VehicleDestinationText: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineRouteSectionDeserialiser)


@dataclass
class MatchedRouteSectionsDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.MatchedRouteSections
    """
    Id: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MatchedRouteSectionsDeserialiser)


@dataclass
class RouteSearchMatchDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSearchMatch
    """
    LineId: str = None
    Mode: str = None
    LineName: str = None
    LineRouteSection: list[dict] = field(default_factory=list)
    MatchedRouteSections: list[dict] = field(default_factory=list)
    MatchedStops: list[dict] = field(default_factory=list)
    Id: str = None
    Url: str = None
    Name: str = None
    Lat: Any = None
    Lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSearchMatchDeserialiser)


@dataclass
class RouteSearchResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSearchResponse
    """
    Input: str = None
    SearchMatches: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSearchResponseDeserialiser)


@dataclass
class IntervalDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Interval
    """
    StopId: str = None
    TimeToArrival: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(IntervalDeserialiser)


@dataclass
class StationIntervalDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StationInterval
    """
    Id: str = None
    Intervals: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StationIntervalDeserialiser)


@dataclass
class KnownJourneyDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.KnownJourney
    """
    Hour: str = None
    Minute: str = None
    IntervalId: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(KnownJourneyDeserialiser)


@dataclass
class TwentyFourHourClockTimeDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TwentyFourHourClockTime
    """
    Hour: str = None
    Minute: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TwentyFourHourClockTimeDeserialiser)


@dataclass
class ServiceFrequencyDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.ServiceFrequency
    """
    LowestFrequency: Any = None
    HighestFrequency: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ServiceFrequencyDeserialiser)


@dataclass
class PeriodDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Period
    """
    Type: str = None
    FromTime: dict = None
    ToTime: dict = None
    Frequency: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PeriodDeserialiser)


@dataclass
class ScheduleDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Schedule
    """
    Name: str = None
    KnownJourneys: list[dict] = field(default_factory=list)
    FirstJourney: dict = None
    LastJourney: dict = None
    Periods: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ScheduleDeserialiser)


@dataclass
class TimetableRouteDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TimetableRoute
    """
    StationIntervals: list[dict] = field(default_factory=list)
    Schedules: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TimetableRouteDeserialiser)


@dataclass
class TimetableDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Timetable
    """
    DepartureStopId: str = None
    Routes: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TimetableDeserialiser)


@dataclass
class DisambiguationOptionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Timetables.DisambiguationOption
    """
    Description: str = None
    Uri: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisambiguationOptionDeserialiser)


@dataclass
class DisambiguationDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Timetables.Disambiguation
    """
    DisambiguationOptions: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisambiguationDeserialiser)


@dataclass
class TimetableResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TimetableResponse
    """
    LineId: str = None
    LineName: str = None
    Direction: str = None
    PdfUrl: str = None
    Stations: list[dict] = field(default_factory=list)
    Stops: list[dict] = field(default_factory=list)
    Timetable: dict = None
    Disambiguation: dict = None
    StatusErrorMessage: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TimetableResponseDeserialiser)


@dataclass
class PredictionTimingDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.PredictionTiming
    """
    CountdownServerAdjustment: str = None
    Source: str = None
    Insert: str = None
    Read: str = None
    Sent: str = None
    Received: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionTimingDeserialiser)


@dataclass
class PredictionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Prediction
    """
    Id: str = None
    OperationType: int = None
    VehicleId: str = None
    NaptanId: str = None
    StationName: str = None
    LineId: str = None
    LineName: str = None
    PlatformName: str = None
    Direction: str = None
    Bearing: str = None
    DestinationNaptanId: str = None
    DestinationName: str = None
    Timestamp: str = None
    TimeToStation: int = None
    CurrentLocation: str = None
    Towards: str = None
    ExpectedArrival: str = None
    TimeToLive: str = None
    ModeName: str = None
    Timing: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionDeserialiser)


@dataclass
class MetaModesGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::MetaModesGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaModesGet200ApplicationJsonResponseDeserialiser)


@dataclass
class Get200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(Get200ApplicationJsonResponseDeserialiser)


@dataclass
class MetaSeverityGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::MetaSeverityGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaSeverityGet200ApplicationJsonResponseDeserialiser)


@dataclass
class MetaDisruptionCategoriesDeserialiser(JSONWizard):
    """
    Autogenerated from Line::MetaDisruptionCategoriesGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaDisruptionCategoriesDeserialiser)


@dataclass
class MetaServiceTypesDeserialiser(JSONWizard):
    """
    Autogenerated from Line::MetaServiceTypesGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaServiceTypesDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::ids-Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Mode-modes-Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::RouteGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::ids-RouteGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Mode-modes-RouteGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::ids-Status-startDate-To-endDate-Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::ids-StatusGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Status-severity-Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Mode-modes-StatusGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsGet200_or_ModemodesGet200_or_RouteGet200_or_idsRouteGet200_or_ModemodesRouteGet200_or_idsStatusstartDateToendDateGet200_or_idsStatusGet200_or_StatusseverityGet200_or_ModemodesStatusGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idStopPointsGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::id-StopPointsGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idStopPointsGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsDisruptionGet200_or_ModemodesDisruptionGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::ids-DisruptionGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsDisruptionGet200_or_ModemodesDisruptionGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsDisruptionGet200_or_ModemodesDisruptionGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Mode-modes-DisruptionGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsDisruptionGet200_or_ModemodesDisruptionGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsArrivalsstopPointIdGet200_or_idsArrivalsGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::ids-Arrivals-stopPointId-Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsArrivalsstopPointIdGet200_or_idsArrivalsGet200ApplicationJsonResponseDeserialiser)


@dataclass
class idsArrivalsstopPointIdGet200_or_idsArrivalsGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::ids-ArrivalsGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(idsArrivalsstopPointIdGet200_or_idsArrivalsGet200ApplicationJsonResponseDeserialiser)
