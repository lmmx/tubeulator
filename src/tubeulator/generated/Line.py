import json
from dataclasses import dataclass, field
from pathlib import Path
from dataclass_wizard import JSONWizard, LoadMeta
from dataclass_wizard.loaders import fromdict
import jsonschema

@dataclass
class ModeDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Mode
    """
    isTflService: bool = None
    isFarePaying: bool = None
    isScheduledService: bool = None
    modeName: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ModeDeserialiser)


@dataclass
class StatusSeverityDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StatusSeverity
    """
    modeName: str = None
    severityLevel: int = None
    description: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StatusSeverityDeserialiser)


@dataclass
class PassengerFlowDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.PassengerFlow
    """
    timeSlice: str = None
    value: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PassengerFlowDeserialiser)


@dataclass
class TrainLoadingDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TrainLoading
    """
    line: str = None
    lineDirection: str = None
    platformDirection: str = None
    direction: str = None
    naptanTo: str = None
    timeSlice: str = None
    value: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TrainLoadingDeserialiser)


@dataclass
class CrowdingDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Crowding
    """
    passengerFlows: list[dict] = field(default_factory=list)
    trainLoadings: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(CrowdingDeserialiser)


@dataclass
class IdentifierDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Identifier
    """
    id: str = None
    name: str = None
    uri: str = None
    fullName: str = None
    type: str = None
    crowding: dict = None
    routeType: str = None
    status: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(IdentifierDeserialiser)


@dataclass
class LineGroupDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineGroup
    """
    naptanIdReference: str = None
    stationAtcoCode: str = None
    lineIdentifier: list[str] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineGroupDeserialiser)


@dataclass
class LineModeGroupDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineModeGroup
    """
    modeName: str = None
    lineIdentifier: list[str] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineModeGroupDeserialiser)


@dataclass
class AdditionalPropertiesDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.AdditionalProperties
    """
    category: str = None
    key: str = None
    sourceSystemKey: str = None
    value: str = None
    modified: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(AdditionalPropertiesDeserialiser)


@dataclass
class PlaceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Place
    """
    id: str = None
    url: str = None
    commonName: str = None
    distance: Any = None
    placeType: str = None
    additionalProperties: list[dict] = field(default_factory=list)
    children: list[dict] = field(default_factory=list)
    childrenUrls: list[str] = field(default_factory=list)
    lat: Any = None
    lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PlaceDeserialiser)


@dataclass
class StopPointDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StopPoint
    """
    naptanId: str = None
    platformName: str = None
    indicator: str = None
    stopLetter: str = None
    modes: list[str] = field(default_factory=list)
    icsCode: str = None
    smsCode: str = None
    stopType: str = None
    stationNaptan: str = None
    accessibilitySummary: str = None
    hubNaptanCode: str = None
    lines: list[dict] = field(default_factory=list)
    lineGroup: list[dict] = field(default_factory=list)
    lineModeGroups: list[dict] = field(default_factory=list)
    fullName: str = None
    naptanMode: str = None
    status: bool = None
    id: str = None
    url: str = None
    commonName: str = None
    distance: Any = None
    placeType: str = None
    additionalProperties: list[dict] = field(default_factory=list)
    children: list[dict] = field(default_factory=list)
    childrenUrls: list[str] = field(default_factory=list)
    lat: Any = None
    lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointDeserialiser)


@dataclass
class RouteSectionNaptanEntrySequenceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSectionNaptanEntrySequence
    """
    ordinal: int = None
    stopPoint: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSectionNaptanEntrySequenceDeserialiser)


@dataclass
class RouteSectionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSection
    """
    id: str = None
    lineId: str = None
    routeCode: str = None
    name: str = None
    lineString: str = None
    direction: str = None
    originationName: str = None
    destinationName: str = None
    validTo: str = None
    validFrom: str = None
    routeSectionNaptanEntrySequence: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSectionDeserialiser)


@dataclass
class DisruptionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Disruption
    """
    category: str = None
    type: str = None
    categoryDescription: str = None
    description: str = None
    summary: str = None
    additionalInfo: str = None
    created: str = None
    lastUpdate: str = None
    affectedRoutes: list[dict] = field(default_factory=list)
    affectedStops: list[dict] = field(default_factory=list)
    closureText: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionDeserialiser)


@dataclass
class ValidityPeriodDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.ValidityPeriod
    """
    fromDate: str = None
    toDate: str = None
    isNow: bool = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ValidityPeriodDeserialiser)


@dataclass
class LineStatusDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineStatus
    """
    id: int = None
    lineId: str = None
    statusSeverity: int = None
    statusSeverityDescription: str = None
    reason: str = None
    created: str = None
    modified: str = None
    validityPeriods: list[dict] = field(default_factory=list)
    disruption: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineStatusDeserialiser)


@dataclass
class MatchedRouteDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.MatchedRoute
    """
    routeCode: str = None
    name: str = None
    direction: str = None
    originationName: str = None
    destinationName: str = None
    originator: str = None
    destination: str = None
    serviceType: str = None
    validTo: str = None
    validFrom: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MatchedRouteDeserialiser)


@dataclass
class LineServiceTypeInfoDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineServiceTypeInfo
    """
    name: str = None
    uri: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineServiceTypeInfoDeserialiser)


@dataclass
class LineDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Line
    """
    id: str = None
    name: str = None
    modeName: str = None
    disruptions: list[dict] = field(default_factory=list)
    created: str = None
    modified: str = None
    lineStatuses: list[dict] = field(default_factory=list)
    routeSections: list[dict] = field(default_factory=list)
    serviceTypes: list[dict] = field(default_factory=list)
    crowding: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineDeserialiser)


@dataclass
class MatchedStopDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.MatchedStop
    """
    routeId: int = None
    parentId: str = None
    stationId: str = None
    icsId: str = None
    topMostParentId: str = None
    direction: str = None
    towards: str = None
    modes: list[str] = field(default_factory=list)
    stopType: str = None
    stopLetter: str = None
    zone: str = None
    accessibilitySummary: str = None
    hasDisruption: bool = None
    lines: list[dict] = field(default_factory=list)
    status: bool = None
    id: str = None
    url: str = None
    name: str = None
    lat: Any = None
    lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MatchedStopDeserialiser)


@dataclass
class StopPointSequenceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StopPointSequence
    """
    lineId: str = None
    lineName: str = None
    direction: str = None
    branchId: int = None
    nextBranchIds: list[int] = field(default_factory=list)
    prevBranchIds: list[int] = field(default_factory=list)
    stopPoint: list[dict] = field(default_factory=list)
    serviceType: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointSequenceDeserialiser)


@dataclass
class OrderedRouteDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.OrderedRoute
    """
    name: str = None
    naptanIds: list[str] = field(default_factory=list)
    serviceType: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(OrderedRouteDeserialiser)


@dataclass
class RouteSequenceDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSequence
    """
    lineId: str = None
    lineName: str = None
    direction: str = None
    isOutboundOnly: bool = None
    mode: str = None
    lineStrings: list[str] = field(default_factory=list)
    stations: list[dict] = field(default_factory=list)
    stopPointSequences: list[dict] = field(default_factory=list)
    orderedLineRoutes: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSequenceDeserialiser)


@dataclass
class LineRouteSectionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.LineRouteSection
    """
    routeId: int = None
    direction: str = None
    destination: str = None
    fromStation: str = None
    toStation: str = None
    serviceType: str = None
    vehicleDestinationText: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineRouteSectionDeserialiser)


@dataclass
class MatchedRouteSectionsDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.MatchedRouteSections
    """
    id: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MatchedRouteSectionsDeserialiser)


@dataclass
class RouteSearchMatchDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSearchMatch
    """
    lineId: str = None
    mode: str = None
    lineName: str = None
    lineRouteSection: list[dict] = field(default_factory=list)
    matchedRouteSections: list[dict] = field(default_factory=list)
    matchedStops: list[dict] = field(default_factory=list)
    id: str = None
    url: str = None
    name: str = None
    lat: Any = None
    lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSearchMatchDeserialiser)


@dataclass
class RouteSearchResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.RouteSearchResponse
    """
    input: str = None
    searchMatches: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(RouteSearchResponseDeserialiser)


@dataclass
class IntervalDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Interval
    """
    stopId: str = None
    timeToArrival: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(IntervalDeserialiser)


@dataclass
class StationIntervalDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.StationInterval
    """
    id: str = None
    intervals: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StationIntervalDeserialiser)


@dataclass
class KnownJourneyDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.KnownJourney
    """
    hour: str = None
    minute: str = None
    intervalId: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(KnownJourneyDeserialiser)


@dataclass
class TwentyFourHourClockTimeDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TwentyFourHourClockTime
    """
    hour: str = None
    minute: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TwentyFourHourClockTimeDeserialiser)


@dataclass
class ServiceFrequencyDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.ServiceFrequency
    """
    lowestFrequency: Any = None
    highestFrequency: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ServiceFrequencyDeserialiser)


@dataclass
class PeriodDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Period
    """
    type: str = None
    fromTime: dict = None
    toTime: dict = None
    frequency: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PeriodDeserialiser)


@dataclass
class ScheduleDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Schedule
    """
    name: str = None
    knownJourneys: list[dict] = field(default_factory=list)
    firstJourney: dict = None
    lastJourney: dict = None
    periods: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ScheduleDeserialiser)


@dataclass
class TimetableRouteDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TimetableRoute
    """
    stationIntervals: list[dict] = field(default_factory=list)
    schedules: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TimetableRouteDeserialiser)


@dataclass
class TimetableDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Timetable
    """
    departureStopId: str = None
    routes: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TimetableDeserialiser)


@dataclass
class DisambiguationOptionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Timetables.DisambiguationOption
    """
    description: str = None
    uri: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisambiguationOptionDeserialiser)


@dataclass
class DisambiguationDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Timetables.Disambiguation
    """
    disambiguationOptions: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisambiguationDeserialiser)


@dataclass
class TimetableResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.TimetableResponse
    """
    lineId: str = None
    lineName: str = None
    direction: str = None
    pdfUrl: str = None
    stations: list[dict] = field(default_factory=list)
    stops: list[dict] = field(default_factory=list)
    timetable: dict = None
    disambiguation: dict = None
    statusErrorMessage: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TimetableResponseDeserialiser)


@dataclass
class PredictionTimingDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.PredictionTiming
    """
    countdownServerAdjustment: str = None
    source: str = None
    insert: str = None
    read: str = None
    sent: str = None
    received: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionTimingDeserialiser)


@dataclass
class PredictionDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl.Api.Presentation.Entities.Prediction
    """
    id: str = None
    operationType: int = None
    vehicleId: str = None
    naptanId: str = None
    stationName: str = None
    lineId: str = None
    lineName: str = None
    platformName: str = None
    direction: str = None
    bearing: str = None
    destinationNaptanId: str = None
    destinationName: str = None
    timestamp: str = None
    timeToStation: int = None
    currentLocation: str = None
    towards: str = None
    expectedArrival: str = None
    timeToLive: str = None
    modeName: str = None
    timing: dict = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionDeserialiser)


@dataclass
class ModeResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ModeResponseDeserialiser)


@dataclass
class ModeResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ModeResponseDeserialiser)


@dataclass
class ModeResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ModeResponseDeserialiser)


@dataclass
class ModeResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ModeResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class StatusSeverityResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-2
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StatusSeverityResponseDeserialiser)


@dataclass
class StatusSeverityResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-2
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StatusSeverityResponseDeserialiser)


@dataclass
class StatusSeverityResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-2
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StatusSeverityResponseDeserialiser)


@dataclass
class StatusSeverityResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-2
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StatusSeverityResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class UnknownResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Unknown
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(UnknownResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class LineResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-19
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineResponseDeserialiser)


@dataclass
class StopPointResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-11
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointResponseDeserialiser)


@dataclass
class StopPointResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-11
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointResponseDeserialiser)


@dataclass
class StopPointResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-11
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointResponseDeserialiser)


@dataclass
class StopPointResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-11
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class DisruptionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-14
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(DisruptionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)


@dataclass
class PredictionResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Line::Tfl-41
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PredictionResponseDeserialiser)
