import json
from dataclasses import dataclass, field
from pathlib import Path
from dataclass_wizard import JSONWizard, LoadMeta
from dataclass_wizard.loaders import fromdict
import jsonschema

@dataclass
class PlaceCategoryDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.PlaceCategory
    """
    category: str = None
    availableKeys: list[str] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PlaceCategoryDeserialiser)


@dataclass
class AdditionalPropertiesDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.AdditionalProperties
    """
    category: str = None
    key: str = None
    sourceSystemKey: str = None
    value: str = None
    modified: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(AdditionalPropertiesDeserialiser)


@dataclass
class PlaceDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.Place
    """
    id: str = None
    url: str = None
    commonName: str = None
    distance: Any = None
    placeType: str = None
    additionalProperties: list[dict] = field(default_factory=list)
    children: list[dict] = field(default_factory=list)
    childrenUrls: list[str] = field(default_factory=list)
    lat: Any = None
    lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PlaceDeserialiser)


@dataclass
class PassengerFlowDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.PassengerFlow
    """
    timeSlice: str = None
    value: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(PassengerFlowDeserialiser)


@dataclass
class TrainLoadingDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.TrainLoading
    """
    line: str = None
    lineDirection: str = None
    platformDirection: str = None
    direction: str = None
    naptanTo: str = None
    timeSlice: str = None
    value: int = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TrainLoadingDeserialiser)


@dataclass
class CrowdingDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.Crowding
    """
    passengerFlows: list[dict] = field(default_factory=list)
    trainLoadings: list[dict] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(CrowdingDeserialiser)


@dataclass
class IdentifierDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.Identifier
    """
    id: str = None
    name: str = None
    uri: str = None
    fullName: str = None
    type: str = None
    crowding: dict = None
    routeType: str = None
    status: str = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(IdentifierDeserialiser)


@dataclass
class LineGroupDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.LineGroup
    """
    naptanIdReference: str = None
    stationAtcoCode: str = None
    lineIdentifier: list[str] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineGroupDeserialiser)


@dataclass
class LineModeGroupDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.LineModeGroup
    """
    modeName: str = None
    lineIdentifier: list[str] = field(default_factory=list)
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(LineModeGroupDeserialiser)


@dataclass
class StopPointDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Tfl.Api.Presentation.Entities.StopPoint
    """
    naptanId: str = None
    platformName: str = None
    indicator: str = None
    stopLetter: str = None
    modes: list[str] = field(default_factory=list)
    icsCode: str = None
    smsCode: str = None
    stopType: str = None
    stationNaptan: str = None
    accessibilitySummary: str = None
    hubNaptanCode: str = None
    lines: list[dict] = field(default_factory=list)
    lineGroup: list[dict] = field(default_factory=list)
    lineModeGroups: list[dict] = field(default_factory=list)
    fullName: str = None
    naptanMode: str = None
    status: bool = None
    id: str = None
    url: str = None
    commonName: str = None
    distance: Any = None
    placeType: str = None
    additionalProperties: list[dict] = field(default_factory=list)
    children: list[dict] = field(default_factory=list)
    childrenUrls: list[str] = field(default_factory=list)
    lat: Any = None
    lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(StopPointDeserialiser)


@dataclass
class ObjectDeserialiser(JSONWizard):
    """
    Autogenerated from Place::System.Object
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ObjectDeserialiser)


@dataclass
class MetaCategoriesGet200_or_MetaPlaceTypesGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Place::MetaCategoriesGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaCategoriesGet200_or_MetaPlaceTypesGet200ApplicationJsonResponseDeserialiser)


@dataclass
class Get200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(Get200ApplicationJsonResponseDeserialiser)


@dataclass
class MetaCategoriesGet200_or_MetaPlaceTypesGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Place::MetaPlaceTypesGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaCategoriesGet200_or_MetaPlaceTypesGet200ApplicationJsonResponseDeserialiser)


@dataclass
class TypetypesGet200_or_idGet200_or_SearchGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Type-types-Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TypetypesGet200_or_idGet200_or_SearchGet200ApplicationJsonResponseDeserialiser)


@dataclass
class TypetypesGet200_or_idGet200_or_SearchGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Place::id-Get200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TypetypesGet200_or_idGet200_or_SearchGet200ApplicationJsonResponseDeserialiser)


@dataclass
class ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Place::Get200ApplicationJsonResponse-1
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ApplicationJsonResponseDeserialiser)


@dataclass
class TypetypesGet200_or_idGet200_or_SearchGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Place::SearchGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(TypetypesGet200_or_idGet200_or_SearchGet200ApplicationJsonResponseDeserialiser)
