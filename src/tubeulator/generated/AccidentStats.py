import json
from typing import Any
from dataclasses import dataclass, field
from pathlib import Path
from dataclass_wizard import JSONWizard
from dataclass_wizard.loaders import fromdict
import jsonschema
from ..utils.paths import load_endpoint_component_schemas

@dataclass
class AccidentStatsAccidentDetailArrayDeserialiser(JSONWizard):
    """
    Autogenerated from AccidentStats::Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray
    """
    __source_schema_name: str = 'AccidentStats'
    __component_schema_name: str = 'Tfl-Api-Presentation-Entities-AccidentStats-AccidentDetailArray'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class AccidentDetailDeserialiser(JSONWizard):
    """
    Autogenerated from AccidentStats::Tfl.Api.Presentation.Entities.AccidentStats.AccidentDetail
    """
    Id: int = None
    Lat: Any = None
    Lon: Any = None
    Location: str = None
    Date: str = None
    Severity: str = None
    Borough: str = None
    Casualties: list[dict] = field(default_factory=list)
    Vehicles: list[dict] = field(default_factory=list)
    __source_schema_name: str = 'AccidentStats'
    __component_schema_name: str = 'Tfl.Api.Presentation.Entities.AccidentStats.AccidentDetail'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class CasualtyDeserialiser(JSONWizard):
    """
    Autogenerated from AccidentStats::Tfl.Api.Presentation.Entities.AccidentStats.Casualty
    """
    Age: int = None
    Class: str = None
    Severity: str = None
    Mode: str = None
    AgeBand: str = None
    __source_schema_name: str = 'AccidentStats'
    __component_schema_name: str = 'Tfl.Api.Presentation.Entities.AccidentStats.Casualty'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class VehicleDeserialiser(JSONWizard):
    """
    Autogenerated from AccidentStats::Tfl.Api.Presentation.Entities.AccidentStats.Vehicle
    """
    Type: str = None
    __source_schema_name: str = 'AccidentStats'
    __component_schema_name: str = 'Tfl.Api.Presentation.Entities.AccidentStats.Vehicle'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True