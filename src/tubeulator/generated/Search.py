import json
from dataclasses import dataclass, field
from pathlib import Path
from dataclass_wizard import JSONWizard, LoadMeta
from dataclass_wizard.loaders import fromdict
import jsonschema

@dataclass
class SearchMatchDeserialiser(JSONWizard):
    """
    Autogenerated from Search::Tfl.Api.Presentation.Entities.SearchMatch
    """
    Id: str = None
    Url: str = None
    Name: str = None
    Lat: Any = None
    Lon: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(SearchMatchDeserialiser)


@dataclass
class SearchResponseDeserialiser(JSONWizard):
    """
    Autogenerated from Search::Tfl.Api.Presentation.Entities.SearchResponse
    """
    Query: str = None
    From: int = None
    Page: int = None
    PageSize: int = None
    Provider: str = None
    Total: int = None
    Matches: list[dict] = field(default_factory=list)
    MaxScore: Any = None
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(SearchResponseDeserialiser)


@dataclass
class MetaSearchProvidersDeserialiser(JSONWizard):
    """
    Autogenerated from Search::MetaSearchProvidersGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaSearchProvidersDeserialiser)


@dataclass
class MetaCategoriesDeserialiser(JSONWizard):
    """
    Autogenerated from Search::MetaCategoriesGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaCategoriesDeserialiser)


@dataclass
class MetaSortsDeserialiser(JSONWizard):
    """
    Autogenerated from Search::MetaSortsGet200ApplicationJsonResponse
    """
    
    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(MetaSortsDeserialiser)
