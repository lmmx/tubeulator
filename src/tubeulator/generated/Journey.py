from __future__ import annotations
import json
from datetime import datetime
from dataclasses import dataclass, field
from tubeulator.utils.string_conv import to_camel_case
from pydantic import AliasGenerator, BaseModel, ConfigDict, PrivateAttr
from ..utils.paths import DtoEnum

class Mode(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Mode
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    IsTflService: bool = None
    IsFarePaying: bool = None
    IsScheduledService: bool = None
    ModeName: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl')



class PathAttribute(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.PathAttribute
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Name: str = None
    Value: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-2')



class InstructionStep(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.InstructionStep
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Description: str = None
    TurnDirection: str = None
    StreetName: str = None
    Distance: int = None
    CumulativeDistance: int = None
    SkyDirection: int = None
    SkyDirectionDescription: str = None
    CumulativeTravelTime: int = None
    Latitude: float = None
    Longitude: float = None
    PathAttribute: PathAttribute = None
    DescriptionHeading: str = None
    TrackType: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-3')



class Instruction(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Instruction
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Summary: str = None
    Detailed: str = None
    Steps: list["InstructionStep"]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-4')



class Obstacle(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.Obstacle
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Type: str = None
    Incline: str = None
    StopId: int = None
    Position: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-5')



class Point(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Point
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Lat: float = None
    Lon: float = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-6')



class PassengerFlow(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.PassengerFlow
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    TimeSlice: str = None
    Value: int = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-7')



class TrainLoading(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.TrainLoading
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Line: str = None
    LineDirection: str = None
    PlatformDirection: str = None
    Direction: str = None
    NaptanTo: str = None
    TimeSlice: str = None
    Value: int = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-8')



class Crowding(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Crowding
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    PassengerFlows: list["PassengerFlow"]
    TrainLoadings: list["TrainLoading"]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-9')



class Identifier(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Identifier
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Id: str = None
    Name: str = None
    Uri: str = None
    FullName: str = None
    Type: str = None
    Crowding: Crowding = None
    RouteType: str = None
    Status: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-10')



class JpElevation(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Common.JourneyPlanner.JpElevation
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Distance: int = None
    StartLat: float = None
    StartLon: float = None
    EndLat: float = None
    EndLon: float = None
    HeightFromPreviousPoint: int = None
    Gradient: float = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-11')



class Path(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.Path
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    LineString: str = None
    StopPoints: list["Identifier"]
    Elevation: list["JpElevation"]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-12')



class RouteOption(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.RouteOption
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Id: str = None
    Name: str = None
    Directions: list[str]
    LineIdentifier: Identifier = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-13')



class LineGroup(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.LineGroup
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    NaptanIdReference: str = None
    StationAtcoCode: str = None
    LineIdentifier: list[str]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-14')



class LineModeGroup(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.LineModeGroup
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    ModeName: str = None
    LineIdentifier: list[str]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-15')



class AdditionalProperties(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.AdditionalProperties
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Category: str = None
    Key: str = None
    SourceSystemKey: str = None
    Value: str = None
    Modified: datetime = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-16')



class Place(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Place
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Id: str = None
    Url: str = None
    CommonName: str = None
    Distance: float = None
    PlaceType: str = None
    AdditionalProperties: list["AdditionalProperties"]
    Children: list["Place"]
    ChildrenUrls: list[str]
    Lat: float = None
    Lon: float = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-17')



class StopPoint(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.StopPoint
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    NaptanId: str = None
    PlatformName: str = None
    Indicator: str = None
    StopLetter: str = None
    Modes: list[str]
    IcsCode: str = None
    SmsCode: str = None
    StopType: str = None
    StationNaptan: str = None
    AccessibilitySummary: str = None
    HubNaptanCode: str = None
    Lines: list["Identifier"]
    LineGroup: list["LineGroup"]
    LineModeGroups: list["LineModeGroup"]
    FullName: str = None
    NaptanMode: str = None
    Status: bool = None
    Id: str = None
    Url: str = None
    CommonName: str = None
    Distance: float = None
    PlaceType: str = None
    AdditionalProperties: list["AdditionalProperties"]
    Children: list["Place"]
    ChildrenUrls: list[str]
    Lat: float = None
    Lon: float = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-18')



class RouteSectionNaptanEntrySequence(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.RouteSectionNaptanEntrySequence
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Ordinal: int = None
    StopPoint: StopPoint = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-19')



class RouteSection(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.RouteSection
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Id: str = None
    LineId: str = None
    RouteCode: str = None
    Name: str = None
    LineString: str = None
    Direction: str = None
    OriginationName: str = None
    DestinationName: str = None
    ValidTo: datetime = None
    ValidFrom: datetime = None
    RouteSectionNaptanEntrySequence: list["RouteSectionNaptanEntrySequence"]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-20')



class Disruption(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Disruption
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Category: str = None
    Type: str = None
    CategoryDescription: str = None
    Description: str = None
    Summary: str = None
    AdditionalInfo: str = None
    Created: datetime = None
    LastUpdate: datetime = None
    AffectedRoutes: list["RouteSection"]
    AffectedStops: list["StopPoint"]
    ClosureText: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-21')



class PlannedWork(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.PlannedWork
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Id: str = None
    Description: str = None
    CreatedDateTime: datetime = None
    LastUpdateDateTime: datetime = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-22')



class Leg(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.Leg
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Duration: int = None
    Speed: str = None
    Instruction: Instruction = None
    Obstacles: list["Obstacle"]
    DepartureTime: datetime = None
    ArrivalTime: datetime = None
    DeparturePoint: Point = None
    ArrivalPoint: Point = None
    Path: Path = None
    RouteOptions: list["RouteOption"]
    Mode: Identifier = None
    Disruptions: list["Disruption"]
    PlannedWorks: list["PlannedWork"]
    Distance: float = None
    IsDisrupted: bool = None
    HasFixedLocations: bool = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-23')



class FareTapDetails(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.FareTapDetails
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    ModeType: str = None
    ValidationType: str = None
    HostDeviceType: str = None
    BusRouteId: str = None
    NationalLocationCode: int = None
    TapTimestamp: datetime = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-24')



class FareTap(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.FareTap
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    AtcoCode: str = None
    TapDetails: FareTapDetails = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-25')



class Fare(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.Fare
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    LowZone: int = None
    HighZone: int = None
    Cost: int = None
    ChargeProfileName: str = None
    IsHopperFare: bool = None
    ChargeLevel: str = None
    Peak: int = None
    OffPeak: int = None
    Taps: list["FareTap"]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-26')



class FareCaveat(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.FareCaveat
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Text: str = None
    Type: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-27')



class JourneyFare(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyFare
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    TotalCost: int = None
    Fares: list["Fare"]
    Caveats: list["FareCaveat"]
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-28')



class Journey(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.Journey
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    StartDateTime: datetime = None
    Duration: int = None
    ArrivalDateTime: datetime = None
    Legs: list["Leg"]
    Fare: JourneyFare = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-29')



class ValidityPeriod(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.ValidityPeriod
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    FromDate: datetime = None
    ToDate: datetime = None
    IsNow: bool = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-30')



class LineStatus(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.LineStatus
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Id: int = None
    LineId: str = None
    StatusSeverity: int = None
    StatusSeverityDescription: str = None
    Reason: str = None
    Created: datetime = None
    Modified: datetime = None
    ValidityPeriods: list["ValidityPeriod"]
    Disruption: Disruption = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-31')



class MatchedRoute(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.MatchedRoute
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    RouteCode: str = None
    Name: str = None
    Direction: str = None
    OriginationName: str = None
    DestinationName: str = None
    Originator: str = None
    Destination: str = None
    ServiceType: str = None
    ValidTo: datetime = None
    ValidFrom: datetime = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-32')



class LineServiceTypeInfo(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.LineServiceTypeInfo
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Name: str = None
    Uri: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-33')



class Line(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.Line
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Id: str = None
    Name: str = None
    ModeName: str = None
    Disruptions: list["Disruption"]
    Created: datetime = None
    Modified: datetime = None
    LineStatuses: list["LineStatus"]
    RouteSections: list["MatchedRoute"]
    ServiceTypes: list["LineServiceTypeInfo"]
    Crowding: Crowding = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-34')



class JourneyPlannerCycleHireDockingStationData(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyPlannerCycleHireDockingStationData
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    OriginNumberOfBikes: int = None
    DestinationNumberOfBikes: int = None
    OriginNumberOfEmptySlots: int = None
    DestinationNumberOfEmptySlots: int = None
    OriginId: str = None
    DestinationId: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-35')



class TimeAdjustment(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustment
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Date: str = None
    Time: str = None
    TimeIs: str = None
    Uri: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-36')



class TimeAdjustments(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.TimeAdjustments
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Earliest: TimeAdjustment = None
    Earlier: TimeAdjustment = None
    Later: TimeAdjustment = None
    Latest: TimeAdjustment = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-37')



class SearchCriteria(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.SearchCriteria
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    DateTime: datetime = None
    DateTimeType: str = None
    TimeAdjustments: TimeAdjustments = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-38')



class JourneyVector(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.JourneyVector
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    From: str = None
    To: str = None
    Via: str = None
    Uri: str = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-39')



class ItineraryResult(BaseModel):
    """
    Autogenerated from Journey::Tfl.Api.Presentation.Entities.JourneyPlanner.ItineraryResult
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    Journeys: list["Journey"]
    Lines: list["Line"]
    CycleHireDockingStationData: JourneyPlannerCycleHireDockingStationData = None
    StopMessages: list[str]
    RecommendedMaxAgeMinutes: int = None
    SearchCriteria: SearchCriteria = None
    JourneyVector: JourneyVector = None
    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Tfl-40')



class MetaModesGet200ApplicationJsonResponse(BaseModel):
    """
    Autogenerated from Journey::MetaModesGet200ApplicationJsonResponse
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='MetaModesGet200ApplicationJsonResponse')



class Get200ApplicationJsonResponse(BaseModel):
    """
    Autogenerated from Journey::Get200ApplicationJsonResponse
    """

    model_config = ConfigDict(
        alias_generator=AliasGenerator(validation_alias=to_camel_case),
    )

    _source_schema_name: str = PrivateAttr(default='Journey')
    _component_schema_name: str = PrivateAttr(default='Get200ApplicationJsonResponse')



class Deserialisers(DtoEnum):
    Tfl = Mode
    Tfl_2 = PathAttribute
    Tfl_3 = InstructionStep
    Tfl_4 = Instruction
    Tfl_5 = Obstacle
    Tfl_6 = Point
    Tfl_7 = PassengerFlow
    Tfl_8 = TrainLoading
    Tfl_9 = Crowding
    Tfl_10 = Identifier
    Tfl_11 = JpElevation
    Tfl_12 = Path
    Tfl_13 = RouteOption
    Tfl_14 = LineGroup
    Tfl_15 = LineModeGroup
    Tfl_16 = AdditionalProperties
    Tfl_17 = Place
    Tfl_18 = StopPoint
    Tfl_19 = RouteSectionNaptanEntrySequence
    Tfl_20 = RouteSection
    Tfl_21 = Disruption
    Tfl_22 = PlannedWork
    Tfl_23 = Leg
    Tfl_24 = FareTapDetails
    Tfl_25 = FareTap
    Tfl_26 = Fare
    Tfl_27 = FareCaveat
    Tfl_28 = JourneyFare
    Tfl_29 = Journey
    Tfl_30 = ValidityPeriod
    Tfl_31 = LineStatus
    Tfl_32 = MatchedRoute
    Tfl_33 = LineServiceTypeInfo
    Tfl_34 = Line
    Tfl_35 = JourneyPlannerCycleHireDockingStationData
    Tfl_36 = TimeAdjustment
    Tfl_37 = TimeAdjustments
    Tfl_38 = SearchCriteria
    Tfl_39 = JourneyVector
    Tfl_40 = ItineraryResult
    MetaModesGet200ApplicationJsonResponse = MetaModesGet200ApplicationJsonResponse
    Get200ApplicationJsonResponse = Get200ApplicationJsonResponse