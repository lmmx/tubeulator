import json
from typing import Any
from dataclasses import dataclass, field
from pathlib import Path
from dataclass_wizard import JSONWizard
from dataclass_wizard.loaders import fromdict
import jsonschema
from ..utils.paths import load_endpoint_component_schemas

@dataclass
class PlaceCategoryDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.PlaceCategory
    """
    Category: str = None
    AvailableKeys: list[str] = field(default_factory=list)
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class ModeDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.Mode
    """
    IsTflService: bool = None
    IsFarePaying: bool = None
    IsScheduledService: bool = None
    ModeName: str = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-2'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class PassengerFlowDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.PassengerFlow
    """
    TimeSlice: str = None
    Value: int = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-3'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class TrainLoadingDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.TrainLoading
    """
    Line: str = None
    LineDirection: str = None
    PlatformDirection: str = None
    Direction: str = None
    NaptanTo: str = None
    TimeSlice: str = None
    Value: int = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-4'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class CrowdingDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.Crowding
    """
    PassengerFlows: list[dict] = field(default_factory=list)
    TrainLoadings: list[dict] = field(default_factory=list)
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-5'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class IdentifierDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.Identifier
    """
    Id: str = None
    Name: str = None
    Uri: str = None
    FullName: str = None
    Type: str = None
    Crowding: dict = None
    RouteType: str = None
    Status: str = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-6'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class LineGroupDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.LineGroup
    """
    NaptanIdReference: str = None
    StationAtcoCode: str = None
    LineIdentifier: list[str] = field(default_factory=list)
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-7'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class LineModeGroupDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.LineModeGroup
    """
    ModeName: str = None
    LineIdentifier: list[str] = field(default_factory=list)
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-8'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class AdditionalPropertiesDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.AdditionalProperties
    """
    Category: str = None
    Key: str = None
    SourceSystemKey: str = None
    Value: str = None
    Modified: str = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-9'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class PlaceDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.Place
    """
    Id: str = None
    Url: str = None
    CommonName: str = None
    Distance: Any = None
    PlaceType: str = None
    AdditionalProperties: list[dict] = field(default_factory=list)
    Children: list[dict] = field(default_factory=list)
    ChildrenUrls: list[str] = field(default_factory=list)
    Lat: Any = None
    Lon: Any = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-10'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class StopPointDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.StopPoint
    """
    NaptanId: str = None
    PlatformName: str = None
    Indicator: str = None
    StopLetter: str = None
    Modes: list[str] = field(default_factory=list)
    IcsCode: str = None
    SmsCode: str = None
    StopType: str = None
    StationNaptan: str = None
    AccessibilitySummary: str = None
    HubNaptanCode: str = None
    Lines: list[dict] = field(default_factory=list)
    LineGroup: list[dict] = field(default_factory=list)
    LineModeGroups: list[dict] = field(default_factory=list)
    FullName: str = None
    NaptanMode: str = None
    Status: bool = None
    Id: str = None
    Url: str = None
    CommonName: str = None
    Distance: Any = None
    PlaceType: str = None
    AdditionalProperties: list[dict] = field(default_factory=list)
    Children: list[dict] = field(default_factory=list)
    ChildrenUrls: list[str] = field(default_factory=list)
    Lat: Any = None
    Lon: Any = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-11'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class LineServiceTypeInfoDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.LineServiceTypeInfo
    """
    Name: str = None
    Uri: str = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-12'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class LineSpecificServiceTypeDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.LineSpecificServiceType
    """
    ServiceType: dict = None
    StopServesServiceType: bool = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-13'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class LineServiceTypeDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.LineServiceType
    """
    LineName: str = None
    LineSpecificServiceTypes: list[dict] = field(default_factory=list)
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-14'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class PredictionTimingDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.PredictionTiming
    """
    CountdownServerAdjustment: str = None
    Source: str = None
    Insert: str = None
    Read: str = None
    Sent: str = None
    Received: str = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-15'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class PredictionDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.Prediction
    """
    Id: str = None
    OperationType: int = None
    VehicleId: str = None
    NaptanId: str = None
    StationName: str = None
    LineId: str = None
    LineName: str = None
    PlatformName: str = None
    Direction: str = None
    Bearing: str = None
    DestinationNaptanId: str = None
    DestinationName: str = None
    Timestamp: str = None
    TimeToStation: int = None
    CurrentLocation: str = None
    Towards: str = None
    ExpectedArrival: str = None
    TimeToLive: str = None
    ModeName: str = None
    Timing: dict = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-16'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class ArrivalDepartureDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.ArrivalDeparture
    """
    PlatformName: str = None
    DestinationNaptanId: str = None
    DestinationName: str = None
    NaptanId: str = None
    StationName: str = None
    EstimatedTimeOfArrival: str = None
    ScheduledTimeOfArrival: str = None
    EstimatedTimeOfDeparture: str = None
    ScheduledTimeOfDeparture: str = None
    MinutesAndSecondsToArrival: str = None
    MinutesAndSecondsToDeparture: str = None
    Cause: str = None
    DepartureStatus: str = None
    Timing: dict = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-17'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class StopPointRouteSectionDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.StopPointRouteSection
    """
    NaptanId: str = None
    LineId: str = None
    Mode: str = None
    ValidFrom: str = None
    ValidTo: str = None
    Direction: str = None
    RouteSectionName: str = None
    LineString: str = None
    IsActive: bool = None
    ServiceType: str = None
    VehicleDestinationText: str = None
    DestinationName: str = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-18'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class DisruptedPointDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.DisruptedPoint
    """
    AtcoCode: str = None
    FromDate: str = None
    ToDate: str = None
    Description: str = None
    CommonName: str = None
    Type: str = None
    Mode: str = None
    StationAtcoCode: str = None
    Appearance: str = None
    AdditionalInformation: str = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-19'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class StopPointsResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.StopPointsResponse
    """
    CentrePoint: list[Any] = field(default_factory=list)
    StopPoints: list[dict] = field(default_factory=list)
    PageSize: int = None
    Total: int = None
    Page: int = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-20'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class SearchMatchDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.SearchMatch
    """
    Id: str = None
    Url: str = None
    Name: str = None
    Lat: Any = None
    Lon: Any = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-21'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class SearchResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Tfl.Api.Presentation.Entities.SearchResponse
    """
    Query: str = None
    From: int = None
    Page: int = None
    PageSize: int = None
    Provider: str = None
    Total: int = None
    Matches: list[dict] = field(default_factory=list)
    MaxScore: Any = None
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Tfl-22'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class ObjectDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::System.Object
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'System'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class Get200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Get200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Get200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class MetaCategoriesGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::MetaCategoriesGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'MetaCategoriesGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class MetaStopTypesDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::MetaStopTypesGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'MetaStopTypesGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class MetaModesGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::MetaModesGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'MetaModesGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idsGet200_or_idCrowdinglineGet200_or_TypetypesGet200_or_TypetypesPagepageGet200_or_idCanReachOnLinelineIdGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::ids-Get200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'ids-Get200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idPlaceTypesGet200_or_stopPointIdTaxiRanksGet200_or_stopPointIdCarParksGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::id-PlaceTypesGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'id-PlaceTypesGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idsGet200_or_idCrowdinglineGet200_or_TypetypesGet200_or_TypetypesPagepageGet200_or_idCanReachOnLinelineIdGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::id-Crowding-line-Get200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'id-Crowding-line-Get200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idsGet200_or_idCrowdinglineGet200_or_TypetypesGet200_or_TypetypesPagepageGet200_or_idCanReachOnLinelineIdGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Type-types-Get200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Type-types-Get200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idsGet200_or_idCrowdinglineGet200_or_TypetypesGet200_or_TypetypesPagepageGet200_or_idCanReachOnLinelineIdGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Type-types-Page-page-Get200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Type-types-Page-page-Get200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class ServiceTypesGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::ServiceTypesGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'ServiceTypesGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idArrivalsGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::id-ArrivalsGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'id-ArrivalsGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idArrivalDeparturesGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::id-ArrivalDeparturesGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'id-ArrivalDeparturesGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idsGet200_or_idCrowdinglineGet200_or_TypetypesGet200_or_TypetypesPagepageGet200_or_idCanReachOnLinelineIdGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::id-CanReachOnLine-lineId-Get200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'id-CanReachOnLine-lineId-Get200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idRouteGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::id-RouteGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'id-RouteGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class ModemodesDisruptionGet200_or_idsDisruptionGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::Mode-modes-DisruptionGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'Mode-modes-DisruptionGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class ModemodesDisruptionGet200_or_idsDisruptionGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::ids-DisruptionGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'ids-DisruptionGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idDirectionTotoStopPointIdGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::id-DirectionTo-toStopPointId-Get200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'id-DirectionTo-toStopPointId-Get200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idPlaceTypesGet200_or_stopPointIdTaxiRanksGet200_or_stopPointIdCarParksGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::stopPointId-TaxiRanksGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'stopPointId-TaxiRanksGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True


@dataclass
class idPlaceTypesGet200_or_stopPointIdTaxiRanksGet200_or_stopPointIdCarParksGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from StopPoint::stopPointId-CarParksGet200ApplicationJsonResponse
    """
    __source_schema_name: str = 'StopPoint'
    __component_schema_name: str = 'stopPointId-CarParksGet200ApplicationJsonResponse'
    
    @classmethod
    def from_dict(cls, o):
        parent_schema = load_endpoint_component_schemas(cls.__source_schema_name)
        schema = parent_schema[cls.__component_schema_name]
        jsonschema.validate(o, schema)
        return fromdict(cls, o)
    
    class Meta(JSONWizard.Meta):
        key_transform_with_load = "PASCAL"
        raise_on_unknown_json_key = True