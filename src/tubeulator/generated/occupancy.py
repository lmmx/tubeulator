import json
from dataclasses import dataclass, field
from pathlib import Path
from dataclass_wizard import JSONWizard, LoadMeta
from dataclass_wizard.loaders import fromdict
import jsonschema


@dataclass
class BayDeserialiser(JSONWizard):
    """
    Autogenerated from occupancy::Tfl.Api.Presentation.Entities.Bay
    """

    BayType: str = None
    BayCount: int = None
    Free: int = None
    Occupied: int = None

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(BayDeserialiser)


@dataclass
class CarParkOccupancyDeserialiser(JSONWizard):
    """
    Autogenerated from occupancy::Tfl.Api.Presentation.Entities.CarParkOccupancy
    """

    Id: str = None
    Bays: list[dict] = field(default_factory=list)
    Name: str = None
    CarParkDetailsUrl: str = None

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(CarParkOccupancyDeserialiser)


@dataclass
class ChargeConnectorOccupancyDeserialiser(JSONWizard):
    """
    Autogenerated from occupancy::Tfl.Api.Presentation.Entities.ChargeConnectorOccupancy
    """

    Id: int = None
    SourceSystemPlaceId: str = None
    Status: str = None

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(ChargeConnectorOccupancyDeserialiser)


@dataclass
class BikePointOccupancyDeserialiser(JSONWizard):
    """
    Autogenerated from occupancy::Tfl.Api.Presentation.Entities.BikePointOccupancy
    """

    Id: str = None
    Name: str = None
    BikesCount: int = None
    EmptyDocks: int = None
    TotalDocks: int = None

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(BikePointOccupancyDeserialiser)


@dataclass
class CarParkGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from occupancy::CarParkGet200ApplicationJsonResponse
    """

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(
    CarParkGet200ApplicationJsonResponseDeserialiser
)


@dataclass
class ChargeConnectoridsGet200_or_ChargeConnectorGet200ApplicationJsonResponseDeserialiser(
    JSONWizard
):
    """
    Autogenerated from occupancy::ChargeConnector-ids-Get200ApplicationJsonResponse
    """

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(
    ChargeConnectoridsGet200_or_ChargeConnectorGet200ApplicationJsonResponseDeserialiser
)


@dataclass
class ChargeConnectoridsGet200_or_ChargeConnectorGet200ApplicationJsonResponseDeserialiser(
    JSONWizard
):
    """
    Autogenerated from occupancy::ChargeConnectorGet200ApplicationJsonResponse
    """

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(
    ChargeConnectoridsGet200_or_ChargeConnectorGet200ApplicationJsonResponseDeserialiser
)


@dataclass
class BikePointsidsGet200ApplicationJsonResponseDeserialiser(JSONWizard):
    """
    Autogenerated from occupancy::BikePoints-ids-Get200ApplicationJsonResponse
    """

    @classmethod
    def from_dict(cls, o):
        jsonschema.validate(o, schema)
        return fromdict(cls, o)


LoadMeta(raise_on_unknown_json_key=True).bind_to(
    BikePointsidsGet200ApplicationJsonResponseDeserialiser
)
